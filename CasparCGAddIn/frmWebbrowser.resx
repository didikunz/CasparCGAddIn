<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANeVAADXlwcA2ZsPANmcEgDanxoA2qAeANykJgDbpS0A3KcwAN2r
        PADfsUsA4rlcAOK7ZQDivGkA4r1sAOO/cADmxXsA58ySAOfNlgDpzpIA6dGdAOvbuwDu3bgA7t+8AO3i
        zgDu5dUA7+rkAPDs6ADw7ewA9PHqAPXz7gDx7/AA9vb2APj4+AAAaHAAAIaQAAClsAAAw88AAOHwABHv
        /wAx8f8AUfP/AHH1/wCR9/8Asfn/ANH7/wD///8AAAAAAAAvIQAAUDcAAHBMAACQYwAAsHkAAM+PAADw
        pgAR/7QAMf++AFH/yABx/9MAkf/cALH/5QDR//AA////AAAAAAAALw4AAFAYAABwIgAAkCwAALA2AADP
        QAAA8EoAEf9bADH/cQBR/4cAcf+dAJH/sgCx/8kA0f/fAP///wAAAAAAAi8AAARQAAAGcAAACJAAAAqw
        AAALzwAADvAAACD/EgA9/zEAW/9RAHn/cQCY/5EAtf+xANT/0QD///8AAAAAABQvAAAiUAAAMHAAAD2Q
        AABMsAAAWc8AAGfwAAB4/xEAiv8xAJz/UQCu/3EAwP+RANL/sQDk/9EA////AAAAAAAmLwAAQFAAAFpw
        AAB0kAAAjrAAAKnPAADC8AAA0f8RANj/MQDe/1EA4/9xAOn/kQDv/7EA9v/RAP///wAAAAAALyYAAFBB
        AABwWwAAkHQAALCOAADPqQAA8MMAAP/SEQD/2DEA/91RAP/kcQD/6pEA//CxAP/20QD///8AAAAAAC8U
        AABQIgAAcDAAAJA+AACwTQAAz1sAAPBpAAD/eREA/4oxAP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAA
        AAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP//
        /wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R
        3wD///8AAAAAAC8AIABQADYAcABMAJAAYgCwAHgAzwCOAPAApAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x
        5QD/0fAA////AAAAAAAsAC8ASwBQAGkAcACHAJAApQCwAMQAzwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR
        /wD5sf8A+9H/AP///wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMAsAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx
        /wDPkf8A3LH/AOvR/wD///8AAAAAAAgALwAOAFAAFQBwABsAkAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR
        /wCMcf8AppH/AL+x/wDa0f8A////AAAAAAAAAAAAAAAAACIiISEhISIiAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAIiEhISEhISEhISEhISIAAAAAAAAAAAAAAAAAAAAAIiEhHxUMBwEBAQEHDBUfISEiAAAAAAAAAAAA
        AAAAACEhHxEDAQEBAQEBAQEBAQMRHiEhAAAAAAAAAAAAAAAhIhgGAQEBAQEBAQEBAQEBAQEGGCEhAAAA
        AAAAAAAAISEUAQEBAQYLAQggIAgBCwYBAQECFCEhAAAAAAAAACEhFAEBAQQTHQ4BEyAgEwEOHRMEAQEB
        FCEhAAAAAAAiIRcCAQEJGiAgBQIbICAbAQYgIBoJAQECGCEiAAAAACEeBgEBCRsgIBkBCiAgICAKARkg
        IBsJAQEGHiEAAAAiIREBAQQaICAgFQEPICAgIA8BFSAgIBoEAQERISIAACIfAwEBEiAgICAQARUgICAg
        FQEQICAgIBIBAQMfIQAAIRUBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARUhACIhDAEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBDCEiISEHAQEWICAgICAGASAgICAgIAEGICAgICAWAQEHISIhIQEBARwgICAg
        IAYBICAgICAgAQYgICAgIBsBAQEhISEhAQEBICAgICAgBQEgICAgICABBiAgICAgIAEBASEhISEBAQIg
        ICAgICAGAiAgICAgIAEGICAgICAgAQEBISEhIQEBARwgICAgIAYBICAgICAgAQYgICAgIBsBAQEhISEh
        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
</value>
  </data>
</root>