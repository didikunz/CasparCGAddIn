<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Office.Tools.Excel</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Office.Tools.Excel.Action">
      <summary>Represents a smart tag action in an Excel workbook that is customized by using the Office development tools in Visual Studio.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Action.BeforeCaptionShow">
      <summary>Occurs after the user clicks the smart tags icon, and before the smart tag menu is displayed.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Action.Click">
      <summary>Occurs when the action in the smart tag menu is clicked.</summary>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ActionClickEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Office.Tools.Excel.Action.Click" /> event of an <see cref="T:Microsoft.Office.Tools.Excel.Action" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:Microsoft.Office.Tools.Excel.ActionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ActionEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Office.Tools.Excel.Action.Click" /> and <see cref="E:Microsoft.Office.Tools.Excel.Action.BeforeCaptionShow" /> events.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ActionEventArgs.Properties">
      <summary>Gets all properties that have been implemented for the smart tag.</summary>
      <returns>All properties that have been implemented for the smart tag.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ActionEventArgs.Range">
      <summary>Gets the range containing the text that has been recognized as a smart tag.</summary>
      <returns>The range containing the text that has been recognized as a smart tag.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ActionEventArgs.Text">
      <summary>Gets the text that was recognized as a smart tag.</summary>
      <returns>The text that was recognized as a smart tag.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ApplicationFactory">
      <summary>Provides methods you can use to perform miscellaneous tasks in application-level add-ins, such as creating Ribbon controls at run time and adding smart tags to worksheets.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.CreateAction(System.String)">
      <summary>Creates a <see cref="T:Microsoft.Office.Tools.Excel.Action" /> object that represents an action for a smart tag.</summary>
      <returns>The new smart tag action.</returns>
      <param name="caption">The name of the action, which is displayed by the smart tag menu.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.CreateSmartTag(System.String,System.String,Microsoft.Office.Tools.Excel.ISmartTagExtension)">
      <summary>Creates a <see cref="T:Microsoft.Office.Tools.Excel.SmartTag" /> object that represents a smart tag on a worksheet.</summary>
      <returns>The new smart tag.</returns>
      <param name="smartTagType">A unique identifier for the smart tag, composed of a namespace URI and a tag type name separated by a number sign (#).</param>
      <param name="caption">The name of the smart tag, which is displayed on the smart tag menu.</param>
      <param name="extension">Optional. An extension object that defines a custom recognizer for the smart tag.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="smartTagType" /> or <paramref name="caption" /> is either null or empty, or <paramref name="smartTagType" /> is not valid.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.GetVstoObject(Microsoft.Office.Interop.Excel._Workbook)">
      <summary>Returns a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> host item that extends the functionality of the specified native workbook object.</summary>
      <returns>The host item that extends the functionality of the native workbook object.</returns>
      <param name="workbook">The native workbook object for which to retrieve the extended object. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.GetVstoObject(Microsoft.Office.Interop.Excel._Worksheet)">
      <summary>Returns a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> host item that extends the functionality of the specified native workbook object.</summary>
      <returns>The host item that extends the functionality of the native worksheet object.</returns>
      <param name="worksheet">The native worksheet object for which to retrieve the extended object. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Worksheet" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.GetVstoObject(Microsoft.Office.Interop.Excel.ListObject)">
      <summary>Returns a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> that extends the functionality of the specified native list object.</summary>
      <returns>The object that extends the functionality of the native list object.</returns>
      <param name="listObject">The native list object for which to retrieve the extended object.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.HasVstoObject(Microsoft.Office.Interop.Excel._Workbook)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> host item exists for the specified Excel workbook object.</summary>
      <returns>true if a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> host item exists for the specified <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object; otherwise, false.</returns>
      <param name="workbook">The native workbook object to test. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.HasVstoObject(Microsoft.Office.Interop.Excel._Worksheet)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> host item exists for the specified Excel worksheet object.</summary>
      <returns>true if a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> host item exists for the specified <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object; otherwise, false.</returns>
      <param name="worksheet">The native worksheet object to test. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Worksheet" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ApplicationFactory.HasVstoObject(Microsoft.Office.Interop.Excel.ListObject)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> exists for the specified native list object.</summary>
      <returns>true if a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> exists for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object; otherwise, false.</returns>
      <param name="listObject">The native Excel list object to test. </param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Office.Tools.Excel.ListObject.BeforeAddDataBoundRow" /> event.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the addition of a new row should be canceled.</summary>
      <returns>true if the row should not be added to the data; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventArgs.Item">
      <summary>Gets the row to be added to the data source.</summary>
      <returns>The row to be added.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Office.Tools.Excel.ListObject.BeforeAddDataBoundRow" /> event of a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.BeforeCaptionShowEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Office.Tools.Excel.Action.BeforeCaptionShow" /> event of an <see cref="T:Microsoft.Office.Tools.Excel.Action" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:Microsoft.Office.Tools.Excel.ActionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ChangeReason">
      <summary>Provides the reason that the original data was restored to a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> that is bound to data.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeReason.ReadOnlyDataSource">
      <summary>The data source that the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is bound to is read-only.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeReason.FixedLengthDataSource">
      <summary>The data source that the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is bound to does not allow adding or removing rows.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeReason.FixedNumberOfColumnsInDataBoundList">
      <summary>The <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control does not allow columns to be added or removed after it is bound to data.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeReason.DataBoundColumnHeaderIsAutoSet">
      <summary>When the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.AutoSetDataBoundColumnHeaders" /> property of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is set to true, the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control does not allow the user to change the column headers.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeReason.ErrorInCommit">
      <summary>A change to data in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control could not be committed to the data source that the control is bound to.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeReason.Other">
      <summary>The original data was restored because of a reason not specified by any of the other <see cref="T:Microsoft.Office.Tools.Excel.ChangeReason" /> values.</summary>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ChangeType">
      <summary>Provides information about how a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control restored data that was changed by a user.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeType.RangeValueRestored">
      <summary>The values in a range were restored to the values in the data source.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeType.ColumnAdded">
      <summary>A column was added to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeType.ColumnRemoved">
      <summary>A column was removed from the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeType.RowAdded">
      <summary>A row was added to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeType.RowRemoved">
      <summary>A row was removed from the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ChangeType.ColumnHeaderRestored">
      <summary>The text for the column header was restored to its original value.</summary>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.Chart">
      <summary>Represents an embedded chart in Office projects for Microsoft Office Excel. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
      <param name="Type"></param>
      <param name="LegendKey"></param>
      <param name="AutoText"></param>
      <param name="HasLeaderLines"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart._CodeName"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart._Dummy23"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart._Evaluate(System.Object)">
      <param name="Name"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="From"></param>
      <param name="To"></param>
      <param name="Copies"></param>
      <param name="Preview"></param>
      <param name="ActivePrinter"></param>
      <param name="PrintToFile"></param>
      <param name="Collate"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Password"></param>
      <param name="DrawingObjects"></param>
      <param name="Contents"></param>
      <param name="Scenarios"></param>
      <param name="UserInterfaceOnly"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Filename"></param>
      <param name="FileFormat"></param>
      <param name="Password"></param>
      <param name="WriteResPassword"></param>
      <param name="ReadOnlyRecommended"></param>
      <param name="CreateBackup"></param>
      <param name="AddToMru"></param>
      <param name="TextCodepage"></param>
      <param name="TextVisualLayout"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Activate">
      <summary>Makes the current <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control the active chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.ActivateEvent">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is activated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Application">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Excel application.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ApplyChartTemplate(System.String)">
      <summary>Applies a standard or custom chart template to the chart.</summary>
      <param name="Filename">The file name for a chart template.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)">
      <summary>Applies a standard or custom chart type to a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <param name="ChartType">
        <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />. A standard chart type.</param>
      <param name="TypeName">The name of the custom chart type if <paramref name="ChartType" /> specifies a custom chart gallery.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Applies data labels to a point, a series, or all the series in a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <param name="Type">
        <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />. The type of data label to apply.</param>
      <param name="LegendKey">true to show the legend key next to the point. The default value is false.</param>
      <param name="AutoText">true if the object automatically generates appropriate text based on content.</param>
      <param name="HasLeaderLines">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, true if the series has leader lines.</param>
      <param name="ShowSeriesName">The series name for the data label.</param>
      <param name="ShowCategoryName">The category name for the data label.</param>
      <param name="ShowValue">The value for the data label.</param>
      <param name="ShowPercentage">The percentage for the data label.</param>
      <param name="ShowBubbleSize">The bubble size for the data label.</param>
      <param name="Separator">The separator for the data label.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ApplyLayout(System.Int32,System.Object)">
      <summary>Applies the layouts shown on the Ribbon.</summary>
      <param name="Layout">An integer from 1 through 10 that specifies the type of layout to apply to the chart. </param>
      <param name="ChartType">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Arcs(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Area3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the area chart group on a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the area chart group on a 3-D chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.AreaGroups(System.Object)">
      <summary>On a 2-D chart, gets an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">The chart group number.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.AutoFormat(System.Int32,System.Object)">
      <param name="Gallery"></param>
      <param name="Format"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.AutoScaling">
      <summary>Scales a 3-D chart so that it is closer in size to the equivalent 2-D chart.</summary>
      <returns>true if Microsoft Office Excel scales a 3-D chart so that it is closer in size to the equivalent 2-D chart; otherwise, false. The <see cref="P:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes" /> property must be true.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)">
      <summary>Gets an object that represents either a single axis or a collection of the axes on the chart.</summary>
      <param name="Type">Specifies the axis to return. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />, <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> (<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> is valid only for 3-D charts).</param>
      <param name="AxisGroup">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />. Specifies the axis group. If this argument is omitted, the primary group is used. 3-D charts have only one axis group.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.BackWall">
      <summary>Gets an object that represents the back wall of a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the back wall of a 3-D chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Bar3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the bar chart group on a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the bar chart group on a 3-D chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.BarGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.BarShape">
      <summary>Gets or sets the shape used with the 3-D bar or column chart.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> values.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.BeforeDoubleClick">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.BeforeRightClick">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.BindingContextChanged"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Buttons(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.Calculate">
      <summary>Occurs after the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control plots new or changed data.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ChartArea">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ChartGroups(System.Object)">
      <summary>Gets either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object). </summary>
      <returns>Either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object). The returned collection includes every type of group.</returns>
      <param name="Index">The chart group number.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ChartObjects(System.Object)">
      <summary>Gets an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</summary>
      <returns>An object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> collection) on the sheet.</returns>
      <param name="Index">The name or number of the chart. This argument can be an array, to specify more than one chart.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ChartStyle">
      <summary>Gets or sets the style of the chart.</summary>
      <returns>An integer from 1 through 48 that represents the style of the chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ChartTitle">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ChartType">
      <summary>Gets or sets the chart type.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Modifies the properties of the given <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control. You can use this method to quickly format a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control without setting all the individual properties. This method is non-interactive, and it changes only the specified properties.</summary>
      <param name="Source">The range that contains the source data for the new chart. If this argument is omitted, Microsoft Office Excel edits the active chart sheet or the selected <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control on the active worksheet.</param>
      <param name="Gallery">
        <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />. The chart type.</param>
      <param name="Format">The option number for the built-in autoformats. Can be a number from 1 through 10, depending on the gallery type. If this argument is omitted, Excel chooses a default value based on the gallery type and data source.</param>
      <param name="PlotBy">Specifies whether the data for each series is in rows or columns. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />.</param>
      <param name="CategoryLabels">An integer specifying the number of rows or columns within the source range that contain category labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
      <param name="SeriesLabels">An integer specifying the number of rows or columns within the source range that contain series labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
      <param name="HasLegend">true to include a legend.</param>
      <param name="Title">The <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control title text.</param>
      <param name="CategoryTitle">The category axis title text.</param>
      <param name="ValueTitle">The value axis title text</param>
      <param name="ExtraTitle">The series axis title for 3-D charts or the second value axis title for 2-D charts.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.CheckBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of an object. Microsoft Office Excel displays the Spelling dialog box</summary>
      <param name="CustomDictionary">The file name of the custom dictionary to be examined if the word is not found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">true to have Microsoft Office Excel ignore words that are all uppercase. false to have Excel check words that are all uppercase. If this argument is omitted, the current setting is used.</param>
      <param name="AlwaysSuggest">true to have Excel display a list of suggested alternate spellings when an incorrect spelling is found. false to have Excel wait for you to input the correct spelling. If this argument is omitted, the current setting is used.</param>
      <param name="SpellLang">The language of the dictionary being used. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ClearToMatchStyle">
      <summary>Clears the chart elements formatting to automatic.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.CodeName"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Column3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the column chart group on a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the column chart group on a 3-D chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ColumnGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <returns>An object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</returns>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Container"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Copy(System.Object,System.Object)">
      <param name="Before"></param>
      <param name="After"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.CopyChartBuild"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)">
      <summary>Copies the chart to the Clipboard as a picture.</summary>
      <param name="Appearance">
        <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. Specifies how the picture should be copied.</param>
      <param name="Format">
        <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />. The format of the picture.</param>
      <param name="Size">
        <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />. The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Corners">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
      <param name="Edition"></param>
      <param name="Appearance"></param>
      <param name="Size"></param>
      <param name="ContainsPICT"></param>
      <param name="ContainsBIFF"></param>
      <param name="ContainsRTF"></param>
      <param name="ContainsVALU"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Creator">
      <summary>Gets the application in which this <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> was created. </summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.DataTable">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> that represents the chart data table. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> that represents the chart data table.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.Deactivate">
      <summary>Occurs when the selection moves away from the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control, causing the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to become deactivated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.DefaultDataSourceUpdateMode">
      <summary>Gets or sets the default <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values. The default is <see cref="F:System.Windows.Forms.DataSourceUpdateMode.Never" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Delete">
      <summary>Deletes a dynamically created <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> control from the worksheet and removes it from the <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.DepthPercent">
      <summary>Gets or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent). </summary>
      <returns>The depth of a 3-D chart as a percentage of the chart width.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Deselect">
      <summary>Cancels the selection for the specified <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.DisplayBlanksAs">
      <summary>Gets or sets the way that blank cells are plotted on a chart. </summary>
      <returns>One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />, <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.DoughnutGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.DragOver">
      <summary>Occurs when a range of cells is dragged over a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.DragPlot">
      <summary>Occurs when a range of cells is dragged and dropped on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.DrawingObjects(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Drawings(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.DropDowns(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Dummy24"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Dummy25"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Elevation">
      <summary>Gets or sets the elevation of the 3-D chart view, in degrees.</summary>
      <returns>The elevation of the 3-D chart view, in degrees.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Evaluate(System.Object)">
      <summary>Converts a Microsoft Office Excel name to an object or a value.</summary>
      <param name="Name">The name of the object, using the naming convention of Excel.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Export(System.String,System.Object,System.Object)">
      <summary>Exports the chart in a graphic format.</summary>
      <param name="Filename">The name of the exported file.</param>
      <param name="FilterName">The language-independent name of the graphic filter as it appears in the registry.</param>
      <param name="Interactive">true to display the dialog box that contains the filter-specific options. If this argument is false, Microsoft Office Excel uses the default values for the filter. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves the chart in either PDF or XPS format.</summary>
      <param name="Type">One of the T:Microsoft.Office.Interop.Excel.XlFixedFormatType values that specifies whether to save the chart in PDF or XPS format.</param>
      <param name="Filename">The full path of the new PDF or XPS file. If you omit this parameter, Excel saves the file in the current folder.</param>
      <param name="Quality">One of the T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality values that specifies the quality of the exported file.</param>
      <param name="IncludeDocProperties">true to include document properties in the exported file; otherwise, false.</param>
      <param name="IgnorePrintAreas">true to ignore any print areas set when exporting; otherwise, false.</param>
      <param name="From">The number of the page at which to start exporting. If this parameter is omitted, exporting starts at the beginning.</param>
      <param name="To">The number of the last page to export. If this parameter is omitted, exporting ends with the last page.</param>
      <param name="OpenAfterPublish">true to open the new file after exporting the chart; otherwise, false.</param>
      <param name="FixedFormatExtClassPtr">A pointer to an implementation of the IMsoDocExporter interface that enables the chart to be saved in a different fixed format. For more information, see Extending the Office (2007) Fixed-Format Export Feature.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Floor">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.GapDepth">
      <summary>Gets or sets the distance between the data series in a 3-D chart, as a percentage of the marker width. </summary>
      <returns>The distance between the data series in a 3-D chart, as a percentage of the marker width. The value of this property must be between 0 and 500.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.get_HasAxis(System.Object,System.Object)">
      <param name="Index1"></param>
      <param name="Index2"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Gets information about the chart element at specified X and Y coordinates. </summary>
      <param name="x">The X coordinate of the chart element.</param>
      <param name="y">The Y coordinate of the chart element.</param>
      <param name="ElementID">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates. For more information, see the “Remarks” section.</param>
      <param name="Arg1">When the method returns, this argument contains information related to the chart element. For more information, see the “Remarks” section.</param>
      <param name="Arg2">When the method returns, this argument contains information related to the chart element. For more information, see the “Remarks” section.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.GroupBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.GroupObjects(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.HasAxis">
      <summary>Gets or sets a value indicating whether a specific axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <returns>true if the specified axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" />; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.HasDataTable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a data table.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a data table; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.HasLegend">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a legend.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a legend; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.HasPivotFields">
      <summary>Gets or sets a value that indicates whether the PivotChart controls are displayed on the specified PivotChart report. </summary>
      <returns>true if the PivotChart controls are displayed on the specified PivotChart report; otherwise, false. The default value is true. For a regular chart, this property always returns false and cannot be set.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.HasTitle">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a title.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a visible title; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.HeightPercent">
      <summary>Gets or sets the height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control width.</summary>
      <returns>The height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control width (between 5 and 500 percent).</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Hyperlinks">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Index"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.InnerObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Labels(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Legend">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Line3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the line chart group on a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the line chart group on a 3-D chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.LineGroups(System.Object)">
      <summary>On a 2-D chart, returns either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <returns>Either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</returns>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Lines(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ListBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)">
      <summary>Moves the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to a new location. </summary>
      <param name="Where">
        <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />. Where to move the chart.</param>
      <param name="Name">The name of the sheet where the chart is embedded if <paramref name="Where" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> or the name of the new sheet if <paramref name="Where" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.MailEnvelope">
      <summary>Represents an e-mail header for a document.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> values.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.MouseDown">
      <summary>Occurs when a mouse button is pressed when the pointer is over a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.MouseMove">
      <summary>Occurs when the position of the mouse pointer changes over the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.MouseUp">
      <summary>Occurs when a mouse button is released when the pointer is over the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Move(System.Object,System.Object)">
      <param name="Before"></param>
      <param name="After"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Name">
      <summary>Gets the name of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <returns>The name of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.OptionButtons(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Ovals(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.PageSetup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the specified object.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the specified object.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Parent">
      <summary>Gets the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> that represents the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Paste(System.Object)">
      <summary>Pastes chart data from the Clipboard into the specified <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <param name="Type">Specifies the chart information to paste if a chart is on the Clipboard. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />, <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />. The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />. If there is data other than a chart on the Clipboard, this argument cannot be used.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Perspective">
      <summary>Gets or sets the perspective for the 3-D chart view. </summary>
      <returns>The perspective for the 3-D chart view. Must be between 0 and 100.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Pictures(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Pie3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the pie chart group on a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the pie chart group on a 3-D chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.PieGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.PivotLayout">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.PlotArea">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.PlotBy">
      <summary>Gets or sets the way columns or rows are used as data series on the chart. </summary>
      <returns>One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.PlotVisibleOnly">
      <summary>Gets or sets a value that indicates whether only visible cells are plotted.</summary>
      <returns>true if only visible cells are plotted. false if both visible and hidden cells are plotted.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.PrintedCommentPages">
      <summary>Gets the number of comment pages that will be printed for the current chart. This property can be used only in Excel 2010 projects.</summary>
      <returns>The number of comment pages that will be printed for the current chart.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the chart.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">The name of the file to print to. This parameter is used only if <paramref name="PrintToFile" /> is true.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.PrintPreview(System.Object)">
      <summary>Shows a preview of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control as it would look when printed.</summary>
      <param name="EnableChanges">true if changes can be made to the print preview window; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ProtectContents"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ProtectData">
      <summary>Gets or sets a value that indicates whether modification of series formulas is prevented.</summary>
      <returns>true if series formulas cannot be modified by the user; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ProtectDrawingObjects"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ProtectFormatting">
      <summary>Gets or sets a value that indicates whether modification of <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control formatting is prevented.</summary>
      <returns>true if <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control formatting cannot be modified by the user; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ProtectGoalSeek">
      <summary>Gets or sets a value that indicates whether modification of <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control data points with mouse actions is prevented.</summary>
      <returns>true if the user cannot modify <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control data points with mouse actions; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ProtectionMode"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ProtectSelection">
      <summary>Gets or sets a value that indicates whether selection of <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control elements is prevented.</summary>
      <returns>true if <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control elements cannot be selected; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.RadarGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Rectangles(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Refresh">
      <summary>Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.Resize">
      <summary>Occurs when the size of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is changed.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control axes are at right angles, independent of chart rotation or elevation.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control axes are at right angles, independent of chart rotation or elevation; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Rotation">
      <summary>Gets or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees). </summary>
      <returns>The rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees). The default value is 20.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.SaveChartTemplate(System.String)">
      <summary>Saves the current chart as a custom template in the list of available chart templates.</summary>
      <param name="Filename">The name of the new chart template.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Scripts">
      <summary>Gets the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it is saved as a Web page.</summary>
      <returns>The <see cref="T:Microsoft.Office.Core.Scripts" /> collection.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.ScrollBars(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.SelectEvent">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is selected.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Chart.SeriesChange">
      <summary>Occurs when the value of a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control data point is changed.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.SeriesCollection(System.Object)">
      <summary>Gets either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</summary>
      <param name="Index">The name or number of the series.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.set_HasAxis(System.Object,System.Object,System.Object)">
      <param name="Index1"></param>
      <param name="Index2"></param>
      <param name="RHS"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.SetBackgroundPicture(System.String)">
      <summary>Sets the background graphic for <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <param name="Filename">The name of the graphic file.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.SetDefaultChart(System.Object)">
      <summary>Specifies the name of the chart template that Microsoft Office Excel uses when it creates new charts.</summary>
      <param name="Name">A string that indicates the name of the default chart template that will be used to create new charts. This name can identify a chart in the gallery for a user-defined template, or it can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values that specifies a built-in chart template.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)">
      <summary>Modifies an element on the chart.</summary>
      <param name="Element">One of the Microsoft.Office.Core.MsoChartElementType values that specifies the type of element modification.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Sets the source data range for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <param name="Source">
        <see cref="T:Microsoft.Office.Interop.Excel.Range" />. The range that contains the source data.</param>
      <param name="PlotBy">Specifies the way the data is to be plotted. Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Shapes">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ShowAllFieldButtons">
      <summary>Gets or sets whether to display all field buttons on a PivotChart. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display all field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ShowAxisFieldButtons">
      <summary>Gets or sets whether to display axis field buttons on a PivotChart. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display axis field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ShowDataLabelsOverMaximum">
      <summary>Gets or sets a value that indicates whether to show the data labels when the value is greater than the maximum value on the value axis.</summary>
      <returns>true to show the data labels when the value is greater than the maximum value on the value axis; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ShowLegendFieldButtons">
      <summary>Gets or sets whether to display legend field buttons on a PivotChart. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display all legend field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ShowReportFilterFieldButtons">
      <summary>Gets or sets whether to display the report filter field buttons on a PivotChart. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display the report filter field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ShowValueFieldButtons">
      <summary>Gets or sets whether to display the value field buttons on a PivotChart. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display the value field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.ShowWindow">
      <summary>Gets or sets a value that indicates if the embedded chart is displayed in a separate window.</summary>
      <returns>true if the embedded chart is displayed in a separate window; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.SideWall">
      <summary>Gets an object that represents the side wall of a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the side wall of a 3-D chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.SizeWithWindow">
      <summary>Gets or sets the value that indicates whether Microsoft Office Excel resizes the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to match the size of the chart sheet window</summary>
      <returns>true if Excel resizes the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to match the size of the chart sheet window. false if the chart size is not attached to the window size. Applies only to chart sheets, not embedded charts.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.Spinners(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.SubType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.SurfaceGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Tab">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Tag">
      <summary>Gets or sets the object that contains data about the <see cref="P:Microsoft.Office.Tools.Excel.Chart.Tag" /> control.</summary>
      <returns>An object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.TextBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Type"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.Walls">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart.WallsAndGridlines2D">
      <summary>Gets or sets a value that indicates whether gridlines are drawn two-dimensionally on a 3-D chart.</summary>
      <returns>true if gridlines are drawn two-dimensionally on a 3-D chart; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Chart.XYGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.Chart_HasAxisType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Chart_HasAxisType.Item(System.Object,System.Object)">
      <param name="Index1"></param>
      <param name="Index2"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ChartSheet">
      <summary>Represents a worksheet in document-level Excel projects created by using the Office development tools in Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
      <param name="Type"></param>
      <param name="LegendKey"></param>
      <param name="AutoText"></param>
      <param name="HasLeaderLines"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet._CodeName"></member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet._Dummy23"></member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet._Evaluate(System.Object)">
      <param name="Name"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="From"></param>
      <param name="To"></param>
      <param name="Copies"></param>
      <param name="Preview"></param>
      <param name="ActivePrinter"></param>
      <param name="PrintToFile"></param>
      <param name="Collate"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Password"></param>
      <param name="DrawingObjects"></param>
      <param name="Contents"></param>
      <param name="Scenarios"></param>
      <param name="UserInterfaceOnly"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Filename"></param>
      <param name="FileFormat"></param>
      <param name="Password"></param>
      <param name="WriteResPassword"></param>
      <param name="ReadOnlyRecommended"></param>
      <param name="CreateBackup"></param>
      <param name="AddToMru"></param>
      <param name="TextCodepage"></param>
      <param name="TextVisualLayout"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Activate">
      <summary>Makes the current <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> the active chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.ActivateEvent">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is activated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Application">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application. </summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyChartTemplate(System.String)">
      <summary>Applies a standard or custom chart template to the chart.</summary>
      <param name="Filename">The file name for a chart template.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)">
      <summary>Applies a standard or custom chart type to a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="ChartType">A standard chart type.</param>
      <param name="TypeName">The name of the custom chart type if <paramref name="ChartType" /> specifies a custom chart gallery.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Applies data labels to a point, a series, or all the series in a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="Type">The type of data label to apply.</param>
      <param name="LegendKey">true to show the legend key next to the point. The default value is false.</param>
      <param name="AutoText">true if the object automatically generates appropriate text based on content.</param>
      <param name="HasLeaderLines">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, true if the series has leader lines.</param>
      <param name="ShowSeriesName">The series name for the data label.</param>
      <param name="ShowCategoryName">The category name for the data label.</param>
      <param name="ShowValue">The value for the data label.</param>
      <param name="ShowPercentage">The percentage for the data label.</param>
      <param name="ShowBubbleSize">The bubble size for the data label.</param>
      <param name="Separator">The separator for the data label.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyLayout(System.Int32,System.Object)">
      <summary>Applies the specified layout to the chart.</summary>
      <param name="Layout">An integer from 1 through 10 that specifies the type of layout to apply to the chart. </param>
      <param name="ChartType">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Arcs(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Area3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the area chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the area chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.AreaGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">The chart group number.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.AutoFormat(System.Int32,System.Object)">
      <param name="Gallery"></param>
      <param name="Format"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.AutoScaling">
      <summary>Gets a value that indicates whether Microsoft Office Excel scales a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> so that it is closer in size to the equivalent 2-D chart</summary>
      <returns>true if Microsoft Office Excel scales a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> so that it is closer in size to the equivalent 2-D chart. </returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)">
      <summary>Gets an object that represents either a single axis or a collection of the axes on the chart.</summary>
      <param name="Type">Specifies the axis to return. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />, <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> (<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> is valid only for 3-D charts).</param>
      <param name="AxisGroup">Specifies the axis group. If this argument is omitted, the primary group is used. 3-D charts have only one axis group.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.BackWall">
      <summary>Gets an object that represents the back wall of a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the back wall of a 3-D chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Bar3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the bar chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the bar chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.BarGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.BarShape">
      <summary>Gets or sets the shape used with the 3-D bar or column <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> values.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.BeforeDoubleClick">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.BeforeRightClick">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.BindingContextChanged"></member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Buttons(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.Calculate">
      <summary>Occurs after the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> plots new or changed data.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartArea">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> that represents the complete chart area for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> that represents the complete chart area for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ChartGroups(System.Object)">
      <summary>Gets an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object). </summary>
      <param name="Index">The chart group number.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ChartObjects(System.Object)">
      <summary>Gets an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</summary>
      <param name="Index">The name or number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. This argument can be an array, to specify more than one chart.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartStyle">
      <summary>Gets or sets the style of the chart.</summary>
      <returns>An integer from 1 through 48 that represents the style of the chart.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartTitle">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> that represents the title of the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> that represents the title of the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartType">
      <summary>Gets or sets the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> type.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Modifies the properties of the given <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. </summary>
      <param name="Source">The range that contains the source data for the new chart. If this argument is omitted, Microsoft Office Excel edits the active chart sheet or the selected chart on the active worksheet.</param>
      <param name="Gallery">The chart type.</param>
      <param name="Format">The option number for the built-in autoformats. Can be a number from 1 through 10, depending on the gallery type. If this argument is omitted, Microsoft Office Excel chooses a default value based on the gallery type and data source.</param>
      <param name="PlotBy">Specifies whether the data for each series is in rows or columns. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />.</param>
      <param name="CategoryLabels">An integer specifying the number of rows or columns within the source range that contain category labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
      <param name="SeriesLabels">The number of rows or columns within the source range that contain series labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
      <param name="HasLegend">true to include a legend.</param>
      <param name="Title">The chart title text.</param>
      <param name="CategoryTitle">The category axis title text.</param>
      <param name="ValueTitle">The value axis title text</param>
      <param name="ExtraTitle">The series axis title for 3-D charts or the second value axis title for 2-D charts.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.CheckBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of an <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. </summary>
      <param name="CustomDictionary">A string that indicates the file name of the custom dictionary to be examined if the word is not found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">true to have Microsoft Office Excel ignore words that are all uppercase. false to have Microsoft Office Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
      <param name="AlwaysSuggest">true to have Excel display a list of suggested alternate spellings when an incorrect spelling is found. false to have Excel wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
      <param name="SpellLang">The language of the dictionary being used. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ClearToMatchStyle">
      <summary>Clears the chart elements formatting to automatic.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.CodeName"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Column3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the column chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the column chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ColumnGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Copy(System.Object,System.Object)">
      <summary>Copies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to another location in the workbook.</summary>
      <param name="Before">The sheet before which the copied sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">The sheet after which the copied sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.CopyChartBuild"></member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)">
      <summary>Copies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to the Clipboard as a picture.</summary>
      <param name="Appearance">Specifies how the picture should be copied.</param>
      <param name="Format">The format of the picture.</param>
      <param name="Size">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Corners">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
      <param name="Edition"></param>
      <param name="Appearance"></param>
      <param name="Size"></param>
      <param name="ContainsPICT"></param>
      <param name="ContainsBIFF"></param>
      <param name="ContainsRTF"></param>
      <param name="ContainsVALU"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Creator">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> code that indicates the application in which the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> was created.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.DataHost"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.DataTable">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> data table.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> data table.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.Deactivate">
      <summary>Occurs when the selection moves away from the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, causing the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to become deactivated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.DefaultExtension">
      <summary>Gets the default extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</summary>
      <returns>The default extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Delete">
      <summary>Deletes the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.DepthPercent">
      <summary>Gets or sets the depth of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width. </summary>
      <returns>The depth of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width (between 20 and 2000 percent)</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Deselect">
      <summary>Cancels the selection for the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.DisplayBlanksAs">
      <summary>Gets or sets the way that blank cells are plotted on a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. </summary>
      <returns>One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />, <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.DoughnutGroups(System.Object)">
      <summary>On a 2-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.DrawingObjects(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Drawings(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.DropDowns(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Dummy24"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Dummy25"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Elevation">
      <summary>Gets or sets the elevation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, in degrees.</summary>
      <returns>The elevation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, in degrees.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Evaluate(System.Object)">
      <summary>Converts a Microsoft Office Excel name to an object or a value.</summary>
      <param name="Name">The name of the object, using the naming convention of Microsoft Office Excel.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Export(System.String,System.Object,System.Object)">
      <summary>Exports the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> in a graphic format. </summary>
      <param name="Filename">The name of the exported file.</param>
      <param name="FilterName">The language-independent name of the graphic filter as it appears in the registry.</param>
      <param name="Interactive">true to display the dialog box that contains the filter-specific options. If this argument is false, Microsoft Office Excel uses the default values for the filter. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> in PDF or XPS format.</summary>
      <param name="Type">One of the Microsoft.Office.Interop.Excel.XlFixedFormatType values that specifies whether to save the chart in PDF or XPS format.</param>
      <param name="Filename">The full path of the new PDF or XPS file. If you omit this parameter, Excel saves the file in the current folder.</param>
      <param name="Quality">One of the Microsoft.Office.Interop.Excel.XlFixedFormatQuality values that specifies the quality of the exported file.</param>
      <param name="IncludeDocProperties">true to include document properties in the exported file; otherwise, false.</param>
      <param name="IgnorePrintAreas">true to ignore any print areas set when exporting; otherwise, false.</param>
      <param name="From">The number of the page at which to start exporting. If this parameter is omitted, exporting starts at the beginning.</param>
      <param name="To">The number of the last page to publish. If this parameter is omitted, publishing ends with the last page.</param>
      <param name="OpenAfterPublish">true to open the new file in the viewer immediately; otherwise, false.</param>
      <param name="FixedFormatExtClassPtr">A pointer to an implementation of the IMsoDocExporter interface that enables the chart to be saved in a different fixed format. For more information, see Extending the Office (2007) Fixed-Format Export Feature.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Extension">
      <summary>Gets a custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</summary>
      <returns>A custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Floor">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.GapDepth">
      <summary>Gets or sets the distance between the data series in a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, as a percentage of the marker width. </summary>
      <returns>The distance between the data series in a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, as a percentage of the marker width. The value of this property must be between 0 and 500.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.get_HasAxis(System.Object,System.Object)">
      <param name="Index1"></param>
      <param name="Index2"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Gets information about the chart element at specified X and Y coordinates. </summary>
      <param name="x">The X coordinate of the chart element.</param>
      <param name="y">The Y coordinate of the chart element.</param>
      <param name="ElementID">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates. For more information, see the “Remarks” section.</param>
      <param name="Arg1">When the method returns, this argument contains information related to the chart element. For more information, see the “Remarks” section.</param>
      <param name="Arg2">When the method returns, this argument contains information related to the chart element. For more information, see the “Remarks” section.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.GroupBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.GroupObjects(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis">
      <summary>Gets or sets a value indicating whether a specific axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>true if the specified axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.HasDataTable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a data table.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a data table.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.HasLegend">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a legend.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a legend.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.HasPivotFields">
      <summary>Gets or sets a value that indicates whether the PivotChart controls are displayed on the specified PivotChart report.</summary>
      <returns>true if the PivotChart controls are displayed on the specified PivotChart report. The default value is true. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.HasTitle">
      <summary>Gets or sets a value the indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a visible title.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a visible title.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.HeightPercent">
      <summary>Gets or sets the height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width.</summary>
      <returns>The height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width (between 5 and 500 percent).</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.HostContext"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Hyperlinks">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Index">
      <summary>Gets the index number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>The index number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.InnerObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ItemProvider"></member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Labels(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Legend">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> that represents the legend for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> that represents the legend for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Line3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the line chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the line chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.LineGroups(System.Object)">
      <summary>On a 2-D chart, returns an object that represents either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Lines(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ListBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)">
      <summary>Moves the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to a new location. </summary>
      <param name="Where">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" /> values that specify where to move the chart.</param>
      <param name="Name">The name of the sheet where the chart will be embedded if <paramref name="Where" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> or the name of the new sheet if <paramref name="Where" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.MailEnvelope">
      <summary>Represents an e-mail header for a document.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> values.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.MouseDown">
      <summary>Occurs when a mouse button is pressed when the pointer is over a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.MouseMove">
      <summary>Occurs when the position of the mouse pointer changes over the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.MouseUp">
      <summary>Occurs when a mouse button is released when the pointer is over the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Move(System.Object,System.Object)">
      <summary>Moves the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to another location in the workbook.</summary>
      <param name="Before">The sheet before which the moved sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">The sheet after which the moved sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Next">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.OLEObjects(System.Object)">
      <summary>Gets an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</summary>
      <param name="Index">The name or number of the OLE object.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.OptionButtons(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Ovals(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.PageSetup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Parent">
      <summary>Gets the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>The parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Paste(System.Object)">
      <summary>Pastes chart data from the Clipboard into the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="Type">Specifies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> information to paste if a chart is on the Clipboard. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />, <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />. The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />. If there is data other than a chart on the Clipboard, this argument cannot be used.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Perspective">
      <summary>Gets or sets the perspective for the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. </summary>
      <returns>The perspective for the 3-D chart view. Must be between 0 and 100. </returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Pictures(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Pie3DGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the pie chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> that represents the pie chart group on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.PieGroups(System.Object)">
      <summary>On a 2-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.PivotLayout">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.PlotArea">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.PlotBy">
      <summary>Gets or sets the way columns or rows are used as data series on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. </summary>
      <returns>One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.PlotVisibleOnly">
      <summary>Gets or sets a value that indicates whether only visible cells are plotted. </summary>
      <returns>true if only visible cells are plotted. false if both visible and hidden cells are plotted.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Previous">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.PrintedCommentPages">
      <summary>Gets the number of comment pages that will be printed for the current chart sheet. This property can be used only in Excel 2010 projects.</summary>
      <returns>The number of comment pages that will be printed for the current chart sheet.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">The name of the file to print to. This parameter is used only if <paramref name="PrintToFile" /> is true.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.PrintPreview(System.Object)">
      <summary>Shows a preview of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> as it would look when printed.</summary>
      <param name="EnableChanges"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Protects a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> so that it cannot be modified.</summary>
      <param name="Password">A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot unprotect the worksheet or workbook. It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
      <param name="DrawingObjects">true to protect shapes. The default value is false.</param>
      <param name="Contents">true to protect contents. For a chart, this protects the entire chart. For a worksheet, this protects the locked cells. The default value is true.</param>
      <param name="Scenarios">true to protect scenarios. This argument is valid only for worksheets. The default value is true.</param>
      <param name="UserInterfaceOnly">true to protect the user interface, but not macros. If this argument is omitted, protection applies both to macros and to the user interface.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents">
      <summary>Gets a value that indicates whether the contents of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> are protected.</summary>
      <returns>true if the contents of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> are protected. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectData">
      <summary>Gets or sets a value that indicates whether series formulas cannot be modified by the user.</summary>
      <returns>true if series formulas cannot be modified by the user; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectDrawingObjects">
      <summary>Gets a value that indicates whether shapes are protected on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>true if shapes are protected.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectFormatting">
      <summary>Gets or sets a value that indicates whether <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> formatting cannot be modified by the user.</summary>
      <returns>true if <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> formatting cannot be modified by the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectGoalSeek">
      <summary>Gets or sets a value that indicates whether the user cannot modify chart data points with mouse actions.</summary>
      <returns>true if the user cannot modify chart data points with mouse actions.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectionMode">
      <summary>Gets or sets a value that indicates whether user-interface-only protection is turned on. </summary>
      <returns>true if user-interface-only protection is turned on. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectSelection">
      <summary>Gets or sets a value that indicates whether <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> elements cannot be selected.</summary>
      <returns>true if <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> elements cannot be selected.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.RadarGroups(System.Object)">
      <summary>On a 2-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Rectangles(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Refresh">
      <summary>Updates the cache of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.Resize">
      <summary>Occurs when the size of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is changed.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> axes are at right angles, independent of chart rotation or elevation. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> axes are at right angles, independent of chart rotation or elevation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Rotation">
      <summary>Gets or sets the rotation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>The rotation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> (the rotation of the plot area around the z-axis, in degrees). The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44. The default value is 20. </returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves changes to the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> in a different file.</summary>
      <param name="Filename">The name of the file to be saved. You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</param>
      <param name="FileFormat">The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
      <param name="Password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="WriteResPassword">The write-reservation password for this file. If a file is saved with the password and the password is not supplied when the file is opened, the file is opened as read-only.</param>
      <param name="ReadOnlyRecommended">true to display a message when the file is opened, recommending that the file be opened as read-only.</param>
      <param name="CreateBackup">true to create a backup file.</param>
      <param name="AddToMru">true to add this workbook to the list of recently used files. The default value is false.</param>
      <param name="TextCodepage">Not used in U.S. English Excel.</param>
      <param name="TextVisualLayout">Not used in U.S. English Excel.</param>
      <param name="Local">true saves files against the language of Excel (including control panel settings). false (default) saves files against the language of Visual Basic for Applications (which is typically US English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.SaveChartTemplate(System.String)">
      <summary>Saves the chart on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> as a custom template in the list of available chart templates.</summary>
      <param name="Filename">The name of the new chart template.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Scripts">
      <summary>Gets the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it is saved as a Web page.</summary>
      <returns>The <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it is saved as a Web page.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.ScrollBars(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Select(System.Object)">
      <summary>Selects the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="Replace">The object to replace.</param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.SelectEvent">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is selected.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.SeriesChange">
      <summary>Occurs when the value of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> data point is changed.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.SeriesCollection(System.Object)">
      <summary>Gets an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</summary>
      <param name="Index">The name or number of the series.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.set_HasAxis(System.Object,System.Object,System.Object)">
      <param name="Index1"></param>
      <param name="Index2"></param>
      <param name="RHS"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.SetBackgroundPicture(System.String)">
      <summary>Sets the background graphic for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="Filename">The name of the graphic file.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.SetDefaultChart(System.Object)">
      <summary>Specifies the name of the chart template that Microsoft Office Excel uses when creating new charts.</summary>
      <param name="Name">A string that indicates the name of the default chart template that will be used when creating new charts. This name can identify a chart in the gallery for a user-defined template, or it can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values that specifies a built-in chart template.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.SetElement(Microsoft.Office.Core.MsoChartElementType)">
      <summary>Modifies an element on the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="Element">One of the Microsoft.Office.Core.MsoChartElementType values that specifies the type of element modification.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)">
      <summary>Sets the source data range for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <param name="Source">The range that contains the source data.</param>
      <param name="PlotBy">Specifies the way the data is to be plotted. Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Shapes">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowAllFieldButtons">
      <summary>Gets or sets whether to display all field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display all field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowAxisFieldButtons">
      <summary>Gets or sets whether to display axis field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display axis field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowDataLabelsOverMaximum">
      <summary>Gets or sets a value that indicates whether to show the data labels when the value is greater than the maximum value on the value axis.</summary>
      <returns>true to show the data labels when the value is greater than the maximum value on the value axis; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowLegendFieldButtons">
      <summary>Gets or sets whether to display legend field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display all legend field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowReportFilterFieldButtons">
      <summary>Gets or sets whether to display the report filter field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display the report filter field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowValueFieldButtons">
      <summary>Gets or sets whether to display the value field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. This property can be used only in Excel 2010 projects.</summary>
      <returns>true to display the value field buttons on the specified PivotChart; otherwise, false.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.Shutdown">
      <summary>Occurs when the application domain for the assembly is about to unload.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.SideWall">
      <summary>Gets an object that represents the side wall of a 3-D chart.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the side wall of a 3-D chart.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Spinners(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ChartSheet.Startup">
      <summary>Occurs after the document is running and all the initialization code in the assembly has been run.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.SubType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.SurfaceGroup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Tab">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Tag">
      <summary>Gets or sets the object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>The object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.TextBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Type"></member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect(System.Object)">
      <summary>Removes protection from a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />. This method has no effect if the sheet or workbook is not protected.</summary>
      <param name="Password">The case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook is not protected with a password, this argument is ignored. If you omit this argument for a sheet that is protected with a password, you will be prompted for the password. If you omit this argument for a workbook that is protected with a password, the method fails.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Visible">
      <summary>Determines whether the object is visible.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.Walls">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet.WallsAndGridlines2D">
      <summary>Gets or sets a value that indicates whether gridlines are drawn two-dimensionally on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</summary>
      <returns>true if gridlines are drawn two-dimensionally on a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ChartSheet.XYGroups(System.Object)">
      <summary>On a 2-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</summary>
      <param name="Index">Specifies the chart group.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType.Item(System.Object,System.Object)">
      <param name="Index1"></param>
      <param name="Index2"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ControlCollection">
      <summary>Represents a collection of managed controls on an Excel worksheet in an Office solution.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.AddChart(Microsoft.Office.Interop.Excel.Range,System.String)">
      <summary>Adds a new <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to the worksheet at the range specified.</summary>
      <returns>The <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control that was added to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</returns>
      <param name="range">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that provides the bounds for the control.</param>
      <param name="name">The name of the control that can be used to index the control in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">The name or range argument is null, or the name argument has zero length.</exception>
      <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">A control with the same name is already in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
      <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">The range that was specified is not valid. Multi-area ranges cannot be used. The range should be on the same worksheet as the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.AddChart(System.Double,System.Double,System.Double,System.Double,System.String)">
      <summary>Adds a new <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to the worksheet in the specified size and location.</summary>
      <returns>The <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control that was added to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</returns>
      <param name="left">The distance in points between the left edge of the control and the left edge of the worksheet.</param>
      <param name="top">The distance in points between the top edge of the control and the top edge of the worksheet.</param>
      <param name="width">The width of the control in points.</param>
      <param name="height">The height of the control in points.</param>
      <param name="name">The name of the control.</param>
      <exception cref="T:System.ArgumentNullException">The name argument is null or has zero length.</exception>
      <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">A control with the same name is already in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.AddControl(System.Windows.Forms.Control,Microsoft.Office.Interop.Excel.Range,System.String)">
      <summary>Adds the specified <see cref="T:System.Windows.Forms.Control" /> to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> at the specified range.</summary>
      <returns>An object that represents the control that contains the specified control on the worksheet.</returns>
      <param name="control">The control to be added to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
      <param name="range">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that provides the bounds for the control.</param>
      <param name="name">The name of the control that can be used to index the control in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">The control, name or range argument is null, or the name argument has zero length.</exception>
      <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">A control with the same name is already in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
      <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">The range that was specified is not valid. Multi-area ranges cannot be used. The range should be on the same worksheet as the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.AddControl(System.Windows.Forms.Control,System.Double,System.Double,System.Double,System.Double,System.String)">
      <summary>Adds the specified <see cref="T:System.Windows.Forms.Control" /> to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> at the location and size specified.</summary>
      <returns>An object that represents the control that contains the specified control on the worksheet.</returns>
      <param name="control">The control to be added to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
      <param name="left">The distance in points between the left edge of the control and the left edge of the worksheet.</param>
      <param name="top">The distance in points between the top edge of the control and the top edge of the worksheet.</param>
      <param name="width">The width of the control in points.</param>
      <param name="height">The height of the control in points.</param>
      <param name="name">The name of the control.</param>
      <exception cref="T:System.ArgumentNullException">The control or name argument is null or has zero length.</exception>
      <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">A control with the same name is already in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.AddListObject(Microsoft.Office.Interop.Excel.ListObject)">
      <summary>Adds a Visual Studio <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> to the control collection based on the specified native <see cref="T:Microsoft.Office.Interop.Excel.ListObject" />.</summary>
      <returns>The Visual Studio <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> that was added to the control collection.</returns>
      <param name="listObject">The native <see cref="T:Microsoft.Office.Interop.Excel.ListObject" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="listObject" /> argument is null, or has zero length.</exception>
      <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">A <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control with the same name has already been added to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.AddListObject(Microsoft.Office.Interop.Excel.Range,System.String)">
      <summary>Adds a new <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to the worksheet at the range specified.</summary>
      <returns>The <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control that was added to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</returns>
      <param name="range">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that provides the bounds for the control.</param>
      <param name="name">The name of the control that can be used to index the control in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">The name or range argument is null, or the name argument has zero length.</exception>
      <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">A control with the same name is already in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
      <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">The range that was specified is not valid. Multi-area ranges cannot be used. The range should be on the same worksheet as the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.AddNamedRange(Microsoft.Office.Interop.Excel.Range,System.String)">
      <summary>Adds a new <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to the worksheet at the range specified.</summary>
      <returns>The <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control that was added to the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</returns>
      <param name="range">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that provides the bounds for the control.</param>
      <param name="name">The name of the control that can be used to index the control in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">The name or range argument is null, or the name argument has zero length.</exception>
      <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">A control with the same name is already in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
      <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">The range that was specified is not valid. Multi-area ranges cannot be used. The range should be on the same worksheet as the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.Contains(System.Object)">
      <summary>Determines whether the specified control is a member of the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</summary>
      <returns>true if the control was found in the collection; otherwise, false.</returns>
      <param name="control">The control that you want to search for in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.Contains(System.String)">
      <summary>Determines whether a control with the specified name is a member of the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</summary>
      <returns>true if the control was found in the collection; otherwise, false.</returns>
      <param name="name">The name of the control you want to search for in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlCollection.Count">
      <summary>Gets the number of controls in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" />.</summary>
      <returns>The number of controls in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.IndexOf(System.Object)">
      <summary>Searches for the specified control and returns the zero-based index of the first occurrence in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</summary>
      <returns>The index of the control, or -1 if the control is not in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</returns>
      <param name="control">The control to find the index of.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.IndexOf(System.String)">
      <summary>Searches for the first occurrence of a control with the specified name in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</summary>
      <returns>An integer that is the index of the control, or -1 if the control is not in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</returns>
      <param name="name">The name of the control that you want to find the index of.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlCollection.Item(System.Int32)">
      <summary>Gets the control at the specified index. </summary>
      <returns>The control at the specified index.</returns>
      <param name="index">The zero-based index of the control to get.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlCollection.Item(System.String)">
      <summary>Gets the control with the specified name.</summary>
      <returns>The control with the specified name.</returns>
      <param name="name">The string that represents the name of the control.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.Remove(System.Object)">
      <summary>Removes the specified control from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</summary>
      <param name="control">The control to be removed from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.Remove(System.String)">
      <summary>Removes the control with the specified name from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</summary>
      <param name="name">The name of the control to be removed from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlCollection.RemoveAt(System.Int32)">
      <summary>Removes the control at the specified index in the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</summary>
      <param name="index">The zero-based index of the control to remove from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> instance.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Index is less than zero or index is equal to or greater than count.</exception>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ControlSite">
      <summary>Represents a linked or embedded control on a worksheet. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Activate">
      <summary>Activates the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> was successfully activated; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.AltHTML"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Application">
      <summary>Gets the creator of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.AutoLoad">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is automatically loaded when the workbook that contains it is opened.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is automatically loaded when the workbook that contains it is opened; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.AutoUpdate">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is updated automatically when the source changes. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is updated automatically when the source changes; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Border">
      <summary>Gets the border of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Border" /> that represents the border of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.BottomRightCell">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell that lies under the lower-right corner of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell that lies under the lower-right corner of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.BringToFront">
      <summary>Brings the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the front of the z-order.</summary>
      <returns>true if the z-order is successfully changed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Copy">
      <summary>Copies the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the Clipboard.</summary>
      <returns>true if the copy is successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the Clipboard as a picture.</summary>
      <returns>true if the copy is successful; otherwise, false.</returns>
      <param name="Appearance">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> values that specifies how the picture should be copied.</param>
      <param name="Format">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> values that specifies the format of the picture.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Creator">
      <summary>Gets a value that indicates the application in which the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> was created. </summary>
      <returns>A 32-bit integer that indicates the application in which the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> was created. If the object was created in Microsoft Office Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C, or the value <see cref="F:Microsoft.Office.Interop.Excel.XlCreator.xlCreatorCode" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Cut">
      <summary>Cuts the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the Clipboard.</summary>
      <returns>true if the cut is successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Delete">
      <summary>Deletes the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>true if the deletion is successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Duplicate">
      <summary>Duplicates the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> and returns a reference to the new copy.</summary>
      <returns>The new copy of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Enabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is enabled. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Height">
      <summary>Gets or sets the height, in points, of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>The height, in points, of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Index">
      <summary>Gets the index number of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> within the collection of similar objects.</summary>
      <returns>The index number of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> within the collection of similar objects.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Interior">
      <summary>Gets the interior of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> that represents the interior of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Left">
      <summary>Gets or sets the distance, in points, from the left edge of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart). </summary>
      <returns>The distance, in points, from the left edge of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.LinkedCell">
      <summary>Gets or sets a value that identifies the range linked to the value of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>A value that identifies the range linked to the value of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.ListFillRange">
      <summary>Gets or sets a value that identifies the range used to fill the specified list box. </summary>
      <returns>A value that identifies the range used to fill the specified list box.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Locked">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is locked.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is locked; false if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> can be modified when the sheet is protected.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>A value that identifies the name of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Object">
      <summary>Gets the OLE Automation object associated with the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>The OLE Automation object associated with the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.OLEType">
      <summary>Gets the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> type. </summary>
      <returns>One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlOLEType" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLELink" /> if the object is linked (it exists outside of the file), or <see cref="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLEEmbed" /> if the object is embedded (it is entirely contained within the file).</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.OnAction"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Parent">
      <summary>Gets the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Placement">
      <summary>Gets or sets a value that indicates how the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is attached to the cells below it. </summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.PrintObject">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is printed when the document is printed. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is printed when the document is printed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.progID">
      <summary>Gets the programmatic identifiers for the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>A value that represents the programmatic identifiers for the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Select(System.Object)">
      <summary>Selects the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>true if the selection is successful; otherwise, false.</returns>
      <param name="Replace">true to replace the current selection with the specified object. false to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.SendToBack">
      <summary>Sends the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the back of the z-order.</summary>
      <returns>true if the z-order is successfully changed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Shadow">
      <summary>Gets or sets a value that indicates whether the font is a shadow font or if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> has a shadow.</summary>
      <returns>true if the font is a shadow font or if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> has a shadow; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.ShapeRange">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> that represents the specified <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> that represents the specified <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.SourceName">
      <summary>Gets or sets the link source name of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>A value that represents the link source name of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Top">
      <summary>Gets or sets the distance, in points, from the top edge of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the top of row 1 (on a worksheet) or the top of the chart area (on a chart). </summary>
      <returns>The distance, in points, from the top edge of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.TopLeftCell">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell that lies under the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell that lies under the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Update">
      <summary>Updates the link.</summary>
      <returns>true if the link is successfully updated; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ControlSite.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)">
      <summary>Sends a verb to the server of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</summary>
      <returns>If the <paramref name="Verb" /> parameter is omitted, the default verb is sent. The available verbs are determined by the object's source application. Typical verbs for an <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> are Open and Primary (represented by the <see cref="F:Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbOpen" /> and <see cref="F:Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbPrimary" /> values).</returns>
      <param name="Verb">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlOLEVerb" /> values that represents the verb that the server of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> should act on. </param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Visible">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is visible.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" /> is visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.Width">
      <summary>Gets or sets the width, in points, of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>The width, in points, of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ControlSite.ZOrder">
      <summary>Gets the z-order position of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />. </summary>
      <returns>The z-order position of the <see cref="T:Microsoft.Office.Tools.Excel.ControlSite" />.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventArgs">
      <summary>Provides information for the <see cref="E:Microsoft.Office.Tools.Excel.ListObject.ErrorAddDataBoundRow" /> event. </summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventArgs.InnerException">
      <summary>Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</summary>
      <returns>An instance of <see cref="T:System.Exception" /> that describes the error that caused the current exception.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventArgs.Item">
      <summary>Gets the new item that the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> attempted to add to the data source.</summary>
      <returns>The item to be added.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventArgs.Retry">
      <summary>Gets or sets a value indicating whether the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> should attempt to add the item again.</summary>
      <returns>true if another attempt should be made; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventHandler">
      <summary>Represents the method that handles an <see cref="E:Microsoft.Office.Tools.Excel.ListObject.ErrorAddDataBoundRow" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.Factory">
      <summary>Provides methods you can use to perform miscellaneous tasks in a document-level customization, such as creating Ribbon controls at run time and adding smart tags to worksheets.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateAction(System.String)">
      <summary>Creates a <see cref="T:Microsoft.Office.Tools.Excel.Action" /> object that represents an action for a smart tag.</summary>
      <returns>The new smart tag action.</returns>
      <param name="caption">The name of the action, which is displayed by the smart tag menu.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateActionsPane(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateChart(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateChartSheet(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object,Microsoft.Office.Tools.Excel.IChartSheetExtension)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
      <param name="extension"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateControlSite(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object,System.Windows.Forms.Control)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
      <param name="control"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateListObject(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateNamedRange(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateSmartTag(System.String,System.String,Microsoft.Office.Tools.Excel.ISmartTagExtension)">
      <summary>Creates a <see cref="T:Microsoft.Office.Tools.Excel.SmartTag" /> object that represents a smart tag on a worksheet.</summary>
      <returns>The new smart tag.</returns>
      <param name="smartTagType">A unique identifier for the smart tag, composed of a namespace URI and a tag type name separated by a number sign (#).</param>
      <param name="caption">The name of the smart tag, which is displayed on the smart tag menu.</param>
      <param name="extension">Optional. An extension object that defines a custom recognizer for the smart tag.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="smartTagType" /> or <paramref name="caption" /> is either null or empty, or <paramref name="smartTagType" /> is not valid.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateWorkbook(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object,Microsoft.Office.Tools.Excel.IWorkbookExtension)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
      <param name="extension"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateWorksheet(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object,Microsoft.Office.Tools.Excel.IWorksheetExtension)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
      <param name="extension"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.CreateXmlMappedRange(System.IServiceProvider,Microsoft.Office.Tools.IHostItemProvider,System.String,System.String,System.Object)">
      <param name="serviceProvider"></param>
      <param name="hostItemProvider"></param>
      <param name="primaryCookie"></param>
      <param name="identifier"></param>
      <param name="containerComponent"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.GetRibbonFactory">
      <summary>Returns an object that you can use to create Ribbon controls at run time.</summary>
      <returns>An object that you can use to create Ribbon controls at run time.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.GetVstoObject(Microsoft.Office.Interop.Excel._Workbook)">
      <summary>Returns a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> host item that extends the functionality of the specified native workbook object.</summary>
      <returns>The host item that extends the functionality of the native workbook object, if the native workbook is the underlying object of a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> object in the current document-level customization; otherwise, null.</returns>
      <param name="workbook">The native workbook object for which to retrieve the extended object. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.GetVstoObject(Microsoft.Office.Interop.Excel._Worksheet)">
      <summary>Returns a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> host item that extends the functionality of the specified native workbook object.</summary>
      <returns>The host item that extends the functionality of the native worksheet object, if the native worksheet is the underlying object of a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> object in the current document-level customization; otherwise, null.</returns>
      <param name="worksheet">The native worksheet object for which to retrieve the extended object. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Worksheet" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.GetVstoObject(Microsoft.Office.Interop.Excel.ListObject)">
      <summary>Returns a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> that extends the functionality of the specified native list object.</summary>
      <returns>The object that extends the functionality of the native list object, if the list object is the underlying object of a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> object in the current document-level customization; otherwise, null.</returns>
      <param name="listObject">The native list object for which to retrieve the extended object.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.HasVstoObject(Microsoft.Office.Interop.Excel._Workbook)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> host item exists for the specified Excel workbook object.</summary>
      <returns>true if a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> host item exists for the specified <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object; otherwise, false.</returns>
      <param name="workbook">The native workbook object to test. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.HasVstoObject(Microsoft.Office.Interop.Excel._Worksheet)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> host item exists for the specified Excel worksheet object.</summary>
      <returns>true if a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> host item exists for the specified <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object; otherwise, false.</returns>
      <param name="worksheet">The native worksheet object to test. Although this parameter is of type <see cref="T:Microsoft.Office.Interop.Excel._Worksheet" />, you typically pass a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to this method.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Factory.HasVstoObject(Microsoft.Office.Interop.Excel.ListObject)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> exists for the specified native list object.</summary>
      <returns>true if a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> exists for the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object; otherwise, false.</returns>
      <param name="listObject">The native Excel list object to test. </param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.FormatSettings">
      <summary>Specifies the type of formatting that is applied to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> when it is bound to data.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.FormatSettings.Number">
      <summary>Indicates whether to include the number formats in the predefined <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.FormatSettings.Font">
      <summary>Indicates whether to include font formats in the predefined <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /></summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.FormatSettings.Alignment">
      <summary>Indicates whether to include an alignment in the predefined <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.FormatSettings.Border">
      <summary>Indicates whether to include border formats in the predefined <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.FormatSettings.Pattern">
      <summary>Indicates whether to include the pattern formats in the predefined <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.FormatSettings.Width">
      <summary>Indicates whether to include the column width and row height in the predefined <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</summary>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.IChartSheetExtension">
      <summary>Represents an extension of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IChartSheetExtension.GetAutomationObject">
      <summary>Called by the Visual Studio Tools for Office runtime to get an object that can be used by VBA code in the chart sheet that is associated with a document-level project.</summary>
      <returns>An object in a document-level customization that can be used by VBA code in the chart sheet.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ISmartTagExtension">
      <summary>Represents an extension of a smart tag in an Excel worksheet that is customized by using Office development tools in Visual Studio. The extension defines a custom recognizer for the smart tag.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ISmartTagExtension.Recognize(System.String,Microsoft.Office.Interop.SmartTag.ISmartTagRecognizerSite,Microsoft.Office.Interop.SmartTag.ISmartTagTokenList,Microsoft.Office.Tools.Excel.SmartTagRecognizeContext)">
      <summary>Searches text in the cell for recognized terms.</summary>
      <param name="text">The text to search for recognized terms.</param>
      <param name="site">The location of the text in the workbook or document.</param>
      <param name="tokenList">The text to search for recognized terms, broken down into a list of tokens.</param>
      <param name="context">An object that provides the text from the cell that is sent to the recognizer and a method you can call to indicate that the smart tag was found.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.IWorkbookExtension">
      <summary>Represents an extension of a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IWorkbookExtension.CreateRibbonExtensibilityObject">
      <summary>Returns an object that implements the Microsoft.Office.Core.IRibbonExtensibility interface.</summary>
      <returns>An object that implements the Microsoft.Office.Core.IRibbonExtensibility interface.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IWorkbookExtension.CreateRibbonObjects">
      <summary>Returns an array of <see cref="T:Microsoft.Office.Tools.Ribbon.IRibbonExtension" /> objects that represent the Ribbon (Visual Designer) items to display in Excel at run time.</summary>
      <returns>An array of <see cref="T:Microsoft.Office.Tools.Ribbon.IRibbonExtension" /> objects that represent the Ribbon (Visual Designer) items to display in Excel at run time.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IWorkbookExtension.GetAutomationObject">
      <summary>Called by the Visual Studio Tools for Office runtime to get an object that can be used by VBA code in the workbook that is associated with a document-level project.</summary>
      <returns>An object in a document-level customization that can be used by VBA code in the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IWorkbookExtension.ProtectDocument">
      <summary>Called by the Visual Studio Tools for Office runtime to give developers an opportunity to reapply password protection to the workbook in a document-level project after the cached data has been saved.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IWorkbookExtension.RequestService(System.Guid)">
      <summary>Returns an object that implements the Microsoft.Office.Core.IRibbonExtensibility interface.</summary>
      <returns>For more information about this method, see <see cref="M:Microsoft.Office.Tools.Excel.WorkbookBase.RequestService(System.Guid)" />.</returns>
      <param name="serviceGuid">A <see cref="T:System.Guid" /> that identifies the Microsoft.Office.Core.IRibbonExtensibility interface.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IWorkbookExtension.UnprotectDocument">
      <summary>Called by the Visual Studio Tools for Office runtime to give developers an opportunity to remove password protection from the workbook in a document-level project and enable cached data to be saved.</summary>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.IWorksheetExtension">
      <summary>Represents an extension of a <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> object.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.IWorksheetExtension.GetAutomationObject">
      <summary>Called by the Visual Studio Tools for Office runtime to get an object that can be used by VBA code in the worksheet that is associated with a document-level project.</summary>
      <returns>An object in a document-level customization that can be used by VBA code in the worksheet.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ListObject">
      <summary>The <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control displays data in a series of rows and columns.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject._Default"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Active">
      <summary>Gets a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control on a worksheet is active; that is, whether the active cell is inside the range of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control. </summary>
      <returns>true if the active cell is inside the range of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.AlternativeText">
      <summary>Gets or sets the descriptive (alternative) text string for the specified table. This property can be used only in Excel 2010 projects.</summary>
      <returns>A string that represents the descriptive (alternative) text string for the specified table.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Application">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents either the Microsoft Office Excel application or the creator of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the creator of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.AutoFilter">
      <summary>Gets a filtered table.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> that contains a filtered table.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows">
      <summary>Gets or sets a value that indicates whether the entire row is selected when the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex" /> changes.</summary>
      <returns>true to select the entire row; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.AutoSetDataBoundColumnHeaders">
      <summary>Gets or sets a value that determines whether the column headers are automatically set to match the data source.</summary>
      <returns>true to automatically set the column names; otherwise, false. The default is false.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.BeforeAddDataBoundRow">
      <summary>Occurs just before an attempt to add a new row to a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control that is bound to data.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.BeforeDoubleClick">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.BeforeRightClick">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.BindingContextChanged"></member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.Change">
      <summary>Occurs when something changes in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Comment">
      <summary>Gets or sets a comment that is associated with the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
      <returns>A string that represents a comment that is associated with the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Container"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Creator">
      <summary>Gets the application in which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> was created.</summary>
      <returns>The application in which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> was created.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.DataBindingFailure">
      <summary>Occurs when a condition causes the data binding of a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to fail.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DataBodyRange">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range that contains the data area in the list between the header row and the insert row.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range that contains the data area in the list between the header row and the insert row.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat">
      <summary>Gets or sets the format style for data-bound <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> controls.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings">
      <summary>Gets or sets which <see cref="T:Microsoft.Office.Tools.Excel.FormatSettings" /> of the specified <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> are applied to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
      <returns>A bitwise combination of the <see cref="T:Microsoft.Office.Tools.Excel.FormatSettings" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DataMember">
      <summary>Gets or sets the specific data member in a multimember data source to bind to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
      <returns>A data member from a multimember data source. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.DataMemberChanged">
      <summary>Occurs when the value of the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DataSource">
      <summary>Gets or sets the source that contains a list of values that are used to populate the items within the control.</summary>
      <returns>The source that contains a list of values that are used to populate the items within the control. The default value is null.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DefaultDataSourceUpdateMode">
      <summary>Gets or sets the default <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values. The default is <see cref="F:System.Windows.Forms.DataSourceUpdateMode.Never" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.Delete">
      <summary>Deletes a dynamically created <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control, clears the cell data from the worksheet, and removes the control from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.Deselected">
      <summary>Occurs when selection moves from the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to outside of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.Disconnect">
      <summary>Removes data binding from the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DisplayName">
      <summary>Gets or sets the displayed name.</summary>
      <returns>A string that represents the display name of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.DisplayRightToLeft">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is displayed from right to left instead of from left to right.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is displayed from right to left instead of from left to right; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.ErrorAddDataBoundRow">
      <summary>Occurs when a user tries to add a row to a data-bound <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control, but the row cannot be added.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.ExportToVisio">
      <summary>Exports a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> to Visio.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.HeaderRowRange">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range of the header row.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range of the header row.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.InnerObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.InsertRowRange">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Insert row, if any, of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Insert row, if any, of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.IsBinding">
      <summary>Gets a value that indicates whether data binding is active.</summary>
      <returns>true if data binding is active; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.IsSelected">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is selected.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is selected, or if any range that includes part of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is selected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ListColumns">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection that represents all the columns in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection that represents all the columns in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ListRows">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> object that represents all the rows of data in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> object that represents all the rows of data in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.MappedColumns"></member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
      <returns>The name of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.OriginalDataRestored">
      <summary>Occurs when a user performs an action that is not allowed, and the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control then reverts back to its original state.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Parent">
      <summary>Gets the parent object of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control. </summary>
      <returns>The parent object of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.Publish(System.Object,System.Boolean)">
      <summary>Publishes the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a server that is running Microsoft Windows SharePoint Services.</summary>
      <returns>The URL of the published list on the SharePoint site.</returns>
      <param name="Target">Contains an array of strings. The following table describes the elements of this array.Element#Contents0URL of SharePoint server.1ListName (Display Name).2Description of the list.</param>
      <param name="LinkSource">Boolean. (See Remarks section.)</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.QueryTable">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that provides a link for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to the list server.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that provides a link for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to the list server.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Range">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range to which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> applies. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range to which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> applies.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.Refresh">
      <summary>Updates the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control with current data and schema from a server that is running Microsoft Windows SharePoint Services. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.RefreshDataRow(System.Int32)">
      <summary>Updates the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> data row that is associated with the specified data row.</summary>
      <param name="dataRowIndex">The index of the data row in the data source.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.RefreshDataRows">
      <summary>Updates all of the rows in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> with data from the data source.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.ResetPersistedBindingInformation">
      <summary>Clears information about changes made to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control by the user.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.Resize(Microsoft.Office.Interop.Excel.Range)">
      <summary>Enables a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to be resized over a new range. </summary>
      <param name="Range">The new range for the list.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.SaveSortOrder">
      <summary>Gets or sets a value that indicates whether the row order of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is saved in the worksheet.</summary>
      <returns>true to save the row order in the worksheet; otherwise, false. The default is false.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.Selected">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is selected.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex">
      <summary>Gets or sets the index of the row that is currently selected.</summary>
      <returns>The index number of the currently selected row.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged">
      <summary>Occurs when the value of the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.ListObject.SelectionChange">
      <summary>Occurs when the selection changes inside the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding(System.Object)">
      <summary>Binds a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a data source.</summary>
      <param name="dataSource">The object to use as a data source for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</param>
      <exception cref="T:Microsoft.Office.Tools.Excel.SetDataBindingFailedException">Could not bind to the specified data source.</exception>
      <exception cref="T:System.ArgumentException">The argument is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSource" /> argument is null. </exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding(System.Object,System.String)">
      <summary>Binds a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a specified data member of a data source.</summary>
      <param name="dataSource">The object to use as a data source for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</param>
      <param name="dataMember">The <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> that specifies the property to bind to within the object returned by the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" />.</param>
      <exception cref="T:Microsoft.Office.Tools.Excel.SetDataBindingFailedException">Could not bind to the specified data source.</exception>
      <exception cref="T:System.ArgumentException">One or more of the arguments are invalid.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSource" /> argument is null. </exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding(System.Object,System.String,System.String[])">
      <summary>Binds a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a specified data member of a data source, and shows only specified columns of that data member.</summary>
      <param name="dataSource">The object to use as a data source for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</param>
      <param name="dataMember">The <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> that specifies the property to bind to within the object returned by the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" />.</param>
      <param name="mappedColumns">Names of columns in the data member that you want to display in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control. To add an unmapped column, include an empty string in the array.</param>
      <exception cref="T:Microsoft.Office.Tools.Excel.SetDataBindingFailedException">Could not bind to the specified data source.</exception>
      <exception cref="T:System.ArgumentException">One or more of the arguments are invalid.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSource" /> argument is null. </exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.SharePointURL">
      <summary>Gets the URL of the SharePoint list for a given <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control. </summary>
      <returns>The URL of the SharePoint list for a given <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ShowAutoFilter">
      <summary>Gets or sets a value that indicates whether the AutoFilter is displayed.</summary>
      <returns>true if the AutoFilter is displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ShowHeaders">
      <summary>Gets or sets a value that indicates whether the header information should be displayed.</summary>
      <returns>true if the header information should be displayed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleColumnStripes">
      <summary>Gets or sets a value that indicates whether the Column Stripes table style is used.</summary>
      <returns>true if the Column Stripes table style is used; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleFirstColumn">
      <summary>Gets or sets a value that indicates whether the first column is formatted.</summary>
      <returns>true if the first column is formatted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleLastColumn">
      <summary>Gets or sets a value that indicates whether the last column is formatted.</summary>
      <returns>true if the last column is formatted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleRowStripes">
      <summary>Gets or sets a value that indicates whether the Row Stripes table style is used.</summary>
      <returns>true if the Row Stripes table style is used; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.ShowTotals">
      <summary>Gets or sets a value that indicates whether the Total row is visible.</summary>
      <returns>true if the Total row is visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Sort">
      <summary>Gets the sort column or columns, and the sort order for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> collection. </summary>
      <returns>A Microsoft.Office.Interop.Excel.Sort that represents the sort column or columns, and the sort order for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> collection.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.SourceType">
      <summary>Gets the current source of the list. </summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlListObjectSourceType" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Summary">
      <summary>Gets or sets the description associated with the alternative text string for the specified table. This property can be used only in Excel 2010 projects.</summary>
      <returns>A string that represents the description associated with the alternative text string for the specified table.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.TableStyle">
      <summary>Gets or sets the table style.</summary>
      <returns>An object that represents the table style.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.Tag">
      <summary>Gets or sets the object that contains data about the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.Tag" /> control.</summary>
      <returns>An object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.TotalsRowRange">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Total row of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Total row of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.Unlink">
      <summary>Removes the link to a Microsoft Windows SharePoint Services site from a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.Unlist">
      <summary>Removes the list functionality from a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.ListObject.UpdateChanges(Microsoft.Office.Interop.Excel.XlListConflict)">
      <summary>Updates the list on a Microsoft Windows SharePoint Services site with the changes made to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control in the worksheet. </summary>
      <param name="iConflictType">
        <see cref="T:Microsoft.Office.Interop.Excel.XlListConflict" />. Conflict resolution options.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.ListObject.XmlMap">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> that represents the schema map used for the list. </summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> that represents the schema map used for the list.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ListObjectChangeHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Office.Tools.Excel.ListObject.Change" /> event of a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
      <param name="targetRange">The <see cref="T:Microsoft.Office.Interop.Word.Range" /> that the change occurred in.</param>
      <param name="changedRanges">The areas of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> that contain changes.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.ListRanges">
      <summary>Specifies the range of a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> that has changes.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ListRanges.None">
      <summary>The change did not occur in the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataBodyRange" />, <see cref="P:Microsoft.Office.Tools.Excel.ListObject.HeaderRowRange" />, or <see cref="P:Microsoft.Office.Tools.Excel.ListObject.TotalsRowRange" />.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ListRanges.HeaderRowRange">
      <summary>The change occurred in the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.HeaderRowRange" /> of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ListRanges.DataBodyRange">
      <summary>The change occurred in the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataBodyRange" /> of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
    </member>
    <member name="F:Microsoft.Office.Tools.Excel.ListRanges.TotalsRowRange">
      <summary>The change occurred in the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.TotalsRowRange" /> of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</summary>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange">
      <summary>A <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is a range that has a unique name, exposes events, and can be bound to data. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
      <param name="Paste"></param>
      <param name="Operation"></param>
      <param name="SkipBlanks"></param>
      <param name="Transpose"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="From"></param>
      <param name="To"></param>
      <param name="Copies"></param>
      <param name="Preview"></param>
      <param name="ActivePrinter"></param>
      <param name="PrintToFile"></param>
      <param name="Collate"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Activate">
      <summary>Activates a single-cell <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AddComment(System.Object)">
      <summary>Adds a comment to the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Text">The comment text.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.AddIndent">
      <summary>Gets or sets a value that determines whether text is automatically indented when the text alignment in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is set to equal distribution either horizontally or vertically. </summary>
      <returns>true if text is automatically indented when the text alignment in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is set to equal distribution either horizontally or vertically; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Address">
      <summary>Gets the range reference for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A string that represents the range reference of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in R1C1-stye or A1-style notation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.AddressLocal">
      <summary>Gets the range reference for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in the language of the user.</summary>
      <returns>A string that represents the range reference of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in the language of the user and in R1C1-stye or A1-style notation.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)">
      <summary>Filters or copies data from a list based on a criteria range. </summary>
      <param name="Action">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlFilterAction.xlFilterCopy" /><see cref="F:Microsoft.Office.Interop.Excel.XlFilterAction.xlFilterInPlace" /></param>
      <param name="CriteriaRange">The criteria range. If this argument is omitted, there are no criteria.</param>
      <param name="CopyToRange">The destination range for the copied rows if <paramref name="Action" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlFilterAction.xlFilterCopy" />. Otherwise, this argument is ignored.</param>
      <param name="Unique">true to filter unique records only; false to filter all records that meet the criteria. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AllocateChanges">
      <summary>Performs a writeback operation for all edited cells in a named range based on an OLAP data source. This method can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This method is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.AllowEdit">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control can be edited on a protected worksheet.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control can be edited on a protected worksheet; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Application">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the creator of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the creator of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)">
      <summary>Applies names to the cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Names">An array of the names to be applied. If this argument is omitted, all names on the sheet are applied to the range.</param>
      <param name="IgnoreRelativeAbsolute">true to replace references with names, regardless of the reference types of either the names or references; false to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names. The default value is true.</param>
      <param name="UseRowColumnNames">true to use the names of row and column ranges that contain the specified range if names for the range cannot be found; false to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments. The default value is true.</param>
      <param name="OmitColumn">true to replace the entire reference with the row-oriented name. The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range. The default value is true.</param>
      <param name="OmitRow">true to replace the entire reference with the column-oriented name. The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range. The default value is true.</param>
      <param name="Order">Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlColumnThenRow" /><see cref="F:Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn" /></param>
      <param name="AppendLast">true to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; false to replace the definitions of the names in <paramref name="Names" /> only. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ApplyOutlineStyles">
      <summary>Applies outlining styles to the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Areas">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AutoComplete(System.String)">
      <summary>Gets an AutoComplete match from the list. </summary>
      <returns>An AutoComplete match from the list.</returns>
      <param name="String">The string to complete.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)">
      <summary>Automatically fills the cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <param name="Destination">The cells to be filled. The destination must include the source range.</param>
      <param name="Type">Specifies the fill type.Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDays" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillFormats" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillSeries" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillWeekdays" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlGrowthTrend" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillCopy" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillMonths" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillValues" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillYears" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlLinearTrend" />If this argument is <see cref="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault" /> or omitted, Microsoft Office Excel selects the most appropriate fill type, based on the source range.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)">
      <summary>Filters a list using the AutoFilter.</summary>
      <param name="Field">The offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field 1 (one)).</param>
      <param name="Criteria1">The criteria (a string; for example, "101"). Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields. If this argument is omitted, the criteria is All. If <paramref name="Operator" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Items" />, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</param>
      <param name="Operator">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Items" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Percent" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlOr" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Items" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Percent" />Use <see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd" /> and <see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlOr" /> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</param>
      <param name="Criteria2">The second criteria (a string). Used with <paramref name="Criteria1" /> and <paramref name="Operator" /> to construct compound criteria.</param>
      <param name="VisibleDropDown">true to display the AutoFilter drop-down arrow for the filtered field; false to hide the AutoFilter drop-down arrow for the filtered field. true by default.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AutoFit">
      <summary>Changes the width of the columns or the height of the rows in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to achieve the best fit.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Automatically formats the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, using a predefined format.</summary>
      <param name="Format">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting3" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting4" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic3" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassicPivotTable" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor3" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList3" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat3" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat4" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatNone" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatPTNone" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport10" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport3" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport4" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport5" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport6" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport7" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport8" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport9" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatSimple" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable1" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable10" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable2" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable3" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable4" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable5" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable6" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable7" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable8" /><see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable9" />The default constant is <see cref="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1" />.Some of these constants might not be available to you, depending on the language support (U.S. English, for example) that you selected or installed.</param>
      <param name="Number">true to include number formats in the AutoFormat. The default value is true.</param>
      <param name="Font">true to include font formats in the AutoFormat. The default value is true.</param>
      <param name="Alignment">true to include alignment in the AutoFormat. The default value is true.</param>
      <param name="Border">true to include border formats in the AutoFormat. The default value is true.</param>
      <param name="Pattern">true to include pattern formats in the AutoFormat. The default value is true.</param>
      <param name="Width">true to include column width and row height in the AutoFormat. The default value is true.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.AutoOutline">
      <summary>Automatically creates an outline for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.NamedRange.BeforeDoubleClick">
      <summary>Occurs when a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.NamedRange.BeforeRightClick">
      <summary>Occurs when a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.NamedRange.BindingContextChanged"></member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)">
      <summary>Adds a border to a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</summary>
      <param name="LineStyle">The line style for the border. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDash" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDotDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDouble" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlSlantDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlLineStyleNone" /></param>
      <param name="Weight">The border weight. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlHairline" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlMedium" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThick" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin" /></param>
      <param name="ColorIndex">The border color, as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic" /><see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexNone" /></param>
      <param name="Color">The border color, as an RGB value.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)">
      <summary>Adds a border to a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</summary>
      <param name="LineStyle">The line style for the border. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDash" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDotDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDouble" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlSlantDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlLineStyleNone" /></param>
      <param name="Weight">The border weight. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlHairline" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlMedium" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThick" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin" /></param>
      <param name="ColorIndex">The border color, as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic" /><see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexNone" /></param>
      <param name="Color">The border color, as an RGB value.</param>
      <param name="ThemeColor">The theme color, as an index into the current color theme or as an <see cref="F:Microsoft.Office.Interop.Excel.XlThemeColor" /> value.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Borders">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Calculate">
      <summary>Calculates the values of cells in a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.CalculateRowMajorOrder">
      <summary>Calculates a specific range of cells.</summary>
      <returns>An object that represents the calculation of a specific range of cells.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Cells">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.NamedRange.Change">
      <summary>Occurs when something changes in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Characters">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of text in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="CustomDictionary">Indicates the file name of the custom dictionary to be examined if the word is not found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">true to have Microsoft Office Excel ignore words that are all uppercase; false to have Excel check words that are all uppercase. If this argument is omitted, the current setting is used.</param>
      <param name="AlwaysSuggest">true to have Excel display a list of suggested alternate spellings when an incorrect spelling is found; false to have Excel pause while you input the correct spelling. If this argument is omitted, the current setting is used.</param>
      <param name="SpellLang">The language of the dictionary being used. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Clear">
      <summary>Clears the entire <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ClearComments">
      <summary>Clears all cell comments from the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ClearContents">
      <summary>Clears the formulas from the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ClearFormats">
      <summary>Clears the formatting of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ClearHyperlinks">
      <summary>Removes all hyperlinks from the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ClearNotes">
      <summary>Clears notes from all the cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ClearOutline">
      <summary>Clears the outline for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Column">
      <summary>Gets the number of the first column in the first area of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The number of the first column in the first area of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. Column A returns 1, column B returns 2, and so on.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ColumnDifferences(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the cells whose contents are different from the comparison cell in each column.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the cells whose contents are different from the comparison cell in each column.</returns>
      <param name="Comparison">A single cell to compare to the specified range.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Columns">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the one or more columns in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents one or more columns in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ColumnWidth">
      <summary>Gets or sets the width of all columns in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>If all columns in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control have the same width, this property returns an object that represents the width. If columns in the range have different widths, this property returns null.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Comment">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> that represents the comment associated with the cell in the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> that represents the comment associated with the cell in the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Consolidates data from multiple ranges on multiple worksheets into the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <param name="Sources">The sources of the consolidation as an array of text reference strings in R1C1-style notation. The references must include the full path of sheets to be consolidated.</param>
      <param name="Function">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlAverage" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCount" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCountNums" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMax" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMin" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlProduct" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDev" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDevP" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlSum" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVar" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVarP" /></param>
      <param name="TopRow">true to consolidate data based on column titles in the top row of the consolidation ranges; false to consolidate data by position. The default value is false.</param>
      <param name="LeftColumn">true to consolidate data based on row titles in the left column of the consolidation ranges; false to consolidate data by position. The default value is false.</param>
      <param name="CreateLinks">true to have the consolidation use worksheet links; false to have the consolidation copy the data. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Container"></member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Copy(System.Object)">
      <summary>Copies the contents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to the specified range or to the Clipboard.</summary>
      <param name="Destination">Specifies the new range to which the contents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control will be copied. If this argument is omitted, Microsoft Office Excel copies the range to the Clipboard.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.CopyFromRecordset(System.Object,System.Object,System.Object)">
      <summary>Copies the contents of an ADO or DAO recordset into a worksheet, beginning at the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Data">The recordset to copy into the range.</param>
      <param name="MaxRows">The maximum number of records to copy into the worksheet. If this argument is omitted, all the records in the recordset object are copied.</param>
      <param name="MaxColumns">The maximum number of fields to copy into the worksheet. If this argument is omitted, all the fields in the recordset object are copied.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to the Clipboard as a picture.</summary>
      <param name="Appearance">Specifies how the picture should be copied.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter" /><see cref="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen" /></param>
      <param name="Format">The format of the picture.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlBitmap" /><see cref="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture" /></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Count">
      <summary>Gets the number of cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The number of cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.CountLarge">
      <summary>Gets the number of occurrences of the largest value in a range of values.</summary>
      <returns>An object that represents the number of occurrences of the largest value in a range of values.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.CreateNames(System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates names in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, based on text labels in the sheet.</summary>
      <param name="Top">true to create names by using labels in the top row. The default value is false.</param>
      <param name="Left">true to create names by using labels in the left column. The default value is false.</param>
      <param name="Bottom">true to create names by using labels in the bottom row. The default value is false.</param>
      <param name="Right">true to create names by using labels in the right column. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
      <param name="Edition"></param>
      <param name="Appearance"></param>
      <param name="ContainsPICT"></param>
      <param name="ContainsBIFF"></param>
      <param name="ContainsRTF"></param>
      <param name="ContainsVALU"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Creator">
      <summary>Gets a 32-bit integer that indicates the application in which the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control was created. </summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.CurrentArray">
      <summary>If the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is part of an array, gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire array.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents an array, if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is part of an array.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.CurrentRegion">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the current region.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the current region.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Cut(System.Object)">
      <summary>Cuts the contents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to the Clipboard or pastes it into a specified destination.</summary>
      <param name="Destination">The range where the data should be pasted. If this argument is omitted, the object is cut to the Clipboard.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)">
      <summary>Creates a data series in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <param name="Rowcol">Can be the <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> constant to have the data series entered in rows or columns, respectively. If this argument is omitted, the size and shape of the range is used.</param>
      <param name="Type">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlAutoFill" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlChronological" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlGrowth" /></param>
      <param name="Date">If the <paramref name="Type" /> argument is <see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlChronological" />, the <paramref name="Date" /> argument indicates the step date unit.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlWeekday" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlMonth" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlYear" /></param>
      <param name="Step">The step value for the series. The default value is 1 (one).</param>
      <param name="Stop">The stop value for the series. If this argument is omitted, Microsoft Office Excel fills to the end of the range.</param>
      <param name="Trend">true to create a linear trend or growth trend; false to create a standard data series. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.DefaultDataSourceUpdateMode">
      <summary>Gets or sets the default <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values. The default is <see cref="F:System.Windows.Forms.DataSourceUpdateMode.Never" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Delete">
      <summary>Deletes a dynamically created <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control and removes it from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" />.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Dependents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the dependents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the dependents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.NamedRange.Deselected">
      <summary>Occurs when selection moves from the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to an area outside of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.DialogBox">
      <summary>Displays a dialog box defined by a dialog box definition table on a Microsoft Office Excel 4.0 macro sheet. </summary>
      <returns>The number of the chosen control, or false if the user clicks the Cancel button.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.DirectDependents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct dependents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct dependents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.DirectPrecedents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct precedents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct precedents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Dirty">
      <summary>Designates the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to be recalculated when the next recalculation occurs.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.DiscardChanges">
      <summary>Discards all changes in the edited cells of the range. This method can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This method is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.DisplayFormat">
      <summary>Gets an object that represents the display settings for the specified range.</summary>
      <returns>An object that represents the display settings for the specified range.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)">
      <param name="Type"></param>
      <param name="Option"></param>
      <param name="Name"></param>
      <param name="Reference"></param>
      <param name="Appearance"></param>
      <param name="ChartSize"></param>
      <param name="Format"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.End">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell at the end of the region that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell at the end of the region that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.EntireColumn">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire column (or columns) that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire column (or columns) that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.EntireRow">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire row (or rows) that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire row (or rows) that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Errors">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object that enables you to access error checking options.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object that enables you to access error checking options.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Exports to a file of the specified format.</summary>
      <param name="Type">The type of file format to export to.</param>
      <param name="Filename">The file name of the file to be saved. You can include a full path, or Excel saves the file in the current folder.</param>
      <param name="Quality">Optional XlFixedFormatQuality. Specifies the quality of the published file.</param>
      <param name="IncludeDocProperties">true to include the document properties; otherwise, false.</param>
      <param name="IgnorePrintAreas">true to ignore any print areas set when exporting; otherwise, false.</param>
      <param name="From">The number of the first page to start exporting. By default, exporting starts at the beginning.</param>
      <param name="To">The number of the last page to export. By default, exporting ends at the last page.</param>
      <param name="OpenAfterPublish">true to display the file in the viewer immediately; otherwise, false.</param>
      <param name="FixedFormatExtClassPtr">A pointer to an implementation of the IMsoDocExporter interface that enables the workbook to be saved in a different fixed format. For more information, see Extending the Office (2007) Fixed-Format Export Feature.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.FillDown">
      <summary>Fills down from the top cell or cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to the bottom of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.FillLeft">
      <summary>Fills left from the rightmost cell or cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.FillRight">
      <summary>Fills right from the leftmost cell or cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.FillUp">
      <summary>Fills up from the bottom cell or cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to the top of the range. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)">
      <summary>Finds specific information in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where the information is found.</returns>
      <param name="What">The data to search for. Can be a string or any Microsoft Office Excel data type.</param>
      <param name="After">The cell after which you want the search to begin. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the range. Remember that the search begins after this cell; the specified cell is not searched until the method wraps back around to this cell. If you do not specify this argument, the search starts after the cell in the upper-left corner of the range.</param>
      <param name="LookIn">The type of information.</param>
      <param name="LookAt">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlWhole" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlPart" />.</param>
      <param name="SearchOrder">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByColumns" />.</param>
      <param name="SearchDirection">The search direction.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlPrevious" />.</param>
      <param name="MatchCase">true to make the search case-sensitive. The default value is false.</param>
      <param name="MatchByte">Used only if you have selected or installed double-byte language support. true to have double-byte characters match only double-byte characters; false to have double-byte characters match their single-byte equivalents.</param>
      <param name="SearchFormat">The search format.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.FindNext(System.Object)">
      <summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Tools.Excel.NamedRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell containing the specified information.</returns>
      <param name="After">The cell after which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. Remember that the search begins after this cell; the specified cell is not searched until the method wraps back around to this cell. If this argument is not specified, the search starts after the cell in the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.FindPrevious(System.Object)">
      <summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Tools.Excel.NamedRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell containing the specified information.</returns>
      <param name="After">The cell before which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. Remember that the search begins before this cell; the specified cell is not searched until the method wraps back around to this cell. If this argument is not specified, the search starts before the upper-left cell in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Font">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> that represents the font of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Font" /> that represents the font of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.FormatConditions">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Formula">
      <summary>Gets or sets the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control's formula in A1-style notation.</summary>
      <returns>The <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control's formula in A1-style notation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaArray">
      <summary>Gets or sets the array formula of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>The array formula of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaHidden">
      <summary>Gets or sets a value that indicates whether the formula in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control will be hidden when the worksheet is protected.</summary>
      <returns>true if the formula will be hidden when the worksheet is protected; null if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contains some cells with <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaHidden" /> equal to true and some cells with <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaHidden" /> equal to false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaLabel">
      <summary>Gets or sets the formula label type for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormulaLabel" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaLocal">
      <summary>Gets or sets the formula for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, using A1-style references in the language of the user. </summary>
      <returns>The formula for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, using A1-style references in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaR1C1">
      <summary>Gets or sets the formula for the object, using R1C1-style notation.</summary>
      <returns>The formula for the object, using R1C1-style notation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.FormulaR1C1Local">
      <summary>Gets or sets the formula for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, using R1C1-style notation in the language of the user.</summary>
      <returns>The formula for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, using R1C1-style notation in the language of the user.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.FunctionWizard">
      <summary>Starts the Function Wizard for the upper-left cell of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.Address" /> property instead of this method.</summary>
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.AddressLocal" /> property instead of this method.</summary>
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_Characters(System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.Characters" /> property instead of this method.</summary>
      <param name="Start"></param>
      <param name="Length"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_End(Microsoft.Office.Interop.Excel.XlDirection)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.End" /> property instead of this method.</summary>
      <param name="Direction"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_Item(System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.Item" /> property instead of this method.</summary>
      <param name="RowIndex"></param>
      <param name="ColumnIndex"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_Offset(System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.Offset" /> property instead of this method.</summary>
      <param name="RowOffset"></param>
      <param name="ColumnOffset"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_Range(System.Object,System.Object)">
      <param name="Cell1"></param>
      <param name="Cell2"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_Resize(System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.Resize" /> property instead of this method.</summary>
      <param name="RowSize"></param>
      <param name="ColumnSize"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.get_Value(System.Object)">
      <summary>Gets the value of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The value of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
      <param name="rangeValueDataType">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> values that specifies the data type of the range value. The default is <see cref="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueDefault" />. This parameter is optional in Visual Basic.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate over the cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)">
      <summary>Calculates the values necessary to achieve a specific goal. </summary>
      <returns>true if the goal seek is successful; otherwise, false.</returns>
      <param name="Goal">The value you want returned in this cell.</param>
      <param name="ChangingCell">Specifies which cell should be changed to achieve the target value.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Group(System.Object,System.Object,System.Object,System.Object)">
      <summary>When the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control represents a single cell in a PivotTable field’s data range, the <see cref="M:Microsoft.Office.Tools.Excel.NamedRange.Group(System.Object,System.Object,System.Object,System.Object)" /> method performs numeric or date-based grouping in that field.</summary>
      <param name="Start">The first value to be grouped. If this argument is omitted or true, the first value in the field is used.</param>
      <param name="End">The last value to be grouped. If this argument is omitted or true, the last value in the field is used.</param>
      <param name="By">If the field is numeric, this argument specifies the size of each group. If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is true and all the other elements are false. Otherwise, this argument is ignored. If this argument is omitted, Microsoft Office Excel automatically chooses a default group size.</param>
      <param name="Periods">An array of seven Boolean values that specify the period for the group, as shown:1 - Seconds2 - Minutes3 - Hours4 - Days5 - Months6 - Quarters7 - YearsIf an element in the array is true, a group is created for the corresponding time; if the element is false, no group is created. If the field is not a date field, this argument is ignored.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.HasArray">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is part of an array formula.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is part of an array formula; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.HasFormula">
      <summary>Gets a value that indicates whether all cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contain formulas.</summary>
      <returns>true if all cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contain formulas; false if none of the cells in the range contains a formula; null otherwise.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Height">
      <summary>Gets the height of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The height of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Hidden">
      <summary>Gets or sets an object that indicates whether the rows or columns are hidden. </summary>
      <returns>true if the rows or columns are hidden; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Hyperlinks">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ID">
      <summary>Gets or sets the identifying label for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control when the page is saved as a Web page.</summary>
      <returns>The identifying label for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control when the page is saved as a Web page.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.IndentLevel">
      <summary>Gets or sets the indent level for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The indent level for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.InnerObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Insert(System.Object,System.Object)">
      <summary>Inserts a cell or a range of cells into the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control and shifts other cells away to make space.</summary>
      <param name="Shift">Specifies which way to shift the cells. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftToRight" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftDown" />. If this argument is omitted, Microsoft Office Excel decides based on the shape of the range.</param>
      <param name="CopyOrigin">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlInsertFormatOrigin" /> values that specifies where to obtain the format to apply to the new cells.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.InsertIndent(System.Int32)">
      <summary>Adds an indent to the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="InsertAmount">The amount to be added to the current indent.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Interior">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> that represents the interior of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> that represents the interior of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Item">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a range at an offset to the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a range at an offset to the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Justify">
      <summary>Rearranges the text in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control so that it fills the range evenly.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Left">
      <summary>Gets the distance from the left edge of column A to the left edge of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>The distance from the left edge of column A to the left edge of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ListHeaderRows">
      <summary>Gets the number of header rows for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The number of header rows for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ListNames">
      <summary>Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ListObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.LocationInTable">
      <summary>Gets a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Locked">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is locked.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is locked; false if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control can be modified when the sheet is protected; null if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contains both locked and unlocked cells. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.MDX">
      <summary>Gets the MDX name for the specified <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> object.</summary>
      <returns>A string that represents the MDX name for the specified <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Merge(System.Object)">
      <summary>Creates a merged cell from the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Across">true to merge cells in each row of the specified range as separate merged cells. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.MergeArea">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the merged range containing the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the merged range containing the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. If the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is not in a merged range, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.MergeCells">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contains merged cells. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contains merged cells; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Name">
      <summary>Gets or sets a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.NavigateArrow(System.Object,System.Object,System.Object)">
      <summary>Navigates a tracer arrow for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to the precedent, dependent, or error-causing cell or cells. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the new selection.</returns>
      <param name="TowardPrecedent">Specifies the direction to navigate: true to navigate toward precedents; false to navigate toward dependents.</param>
      <param name="ArrowNumber">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</param>
      <param name="LinkNumber">If the arrow is an external reference arrow, this argument indicates which external reference to follow. If this argument is omitted, the first external reference is followed.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Next">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the next cell.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the next cell.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.NoteText(System.Object,System.Object,System.Object)">
      <summary>Gets or sets the cell note associated with the cell in the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Text">The text to add to the note (up to 255 characters). The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note. If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</param>
      <param name="Start">The starting position for the text that is set or returned. If this argument is omitted, this method starts at the first character. To append text to the note, specify a number larger than the number of characters in the existing note.</param>
      <param name="Length">The number of characters to be set or returned. If this argument is omitted, Microsoft Office Excel sets or returns characters from the starting position to the end of the note (up to 255 characters). If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.NumberFormat">
      <summary>Gets or sets the format code for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The format code for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.NumberFormatLocal">
      <summary>Gets or sets the format code for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in the language of the user. </summary>
      <returns>The format code for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Offset">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that is offset from the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that is offset from the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Orientation">
      <summary>Gets or sets the text orientation. </summary>
      <returns>An integer value in the range of -90 to 90 degrees.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.OutlineLevel">
      <summary>Gets or sets the current outline level of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>The current outline level of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.PageBreak">
      <summary>Gets or sets the location of a page break.</summary>
      <returns>The location of a page break.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Parent">
      <summary>Gets the parent object of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The parent object of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Parse(System.Object,System.Object)">
      <summary>Parses a range of data and breaks it into multiple cells.</summary>
      <param name="ParseLine">A string that contains left and right brackets to indicate where the cells should be split. For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column. If this argument is omitted, Microsoft Office Excel guesses where to split the columns based on the spacing of the top left cell in the range. If you want to use a different range to guess the parse line, use a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as the <paramref name="ParseLine" /> argument. That range must be one of the cells that is being parsed. The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</param>
      <param name="Destination">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data. If this argument is omitted, Excel parses in place.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
      <summary>Pastes the contents of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object from the Clipboard into the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Paste">The part of the range to be pasted.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAllExceptBorders" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteColumnWidths" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteComments" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulasAndNumberFormats" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValidation" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValuesAndNumberFormats" /></param>
      <param name="Operation">The paste operation.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationDivide" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationMultiply" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationSubtract" /></param>
      <param name="SkipBlanks">true to not have blank cells in the range on the Clipboard pasted into the destination range. The default value is false.</param>
      <param name="Transpose">true to transpose rows and columns when the range is pasted. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Phonetic">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, which contains information about a specific phonetic text string in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, which contains information about a specific phonetic text string in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Phonetics">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.PivotCell">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> that represents a cell in a PivotTable report.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> that represents a cell in a PivotTable report.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.PivotField">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> that represents the PivotTable field containing the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> that represents the PivotTable field containing the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.PivotItem">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> that represents the PivotTable item containing the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> that represents the PivotTable item containing the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.PivotTable">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> that represents the PivotTable report containing the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, or the PivotTable report associated with the PivotChart report.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> that represents the PivotTable report containing the upper left corner of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, or the PivotTable report associated with the PivotChart report.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Precedents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the precedents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the precedents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.PrefixCharacter">
      <summary>Gets the prefix character for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The prefix character for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Previous">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the previous cell.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the previous cell.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object; false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <returns>An <see cref="T:System.Object" /> that represents a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> object.</returns>
      <param name="From">The number of the first page to start printing. By default, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. By default, printing ends at the last page.</param>
      <param name="Copies">The number of copies to print. By default, one copy is printed.</param>
      <param name="Preview">true to have Excel invoke print preview before printing the object. false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If PrToFileName is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.PrintPreview(System.Object)">
      <summary>Shows a preview of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control as it would look when printed.</summary>
      <param name="EnableChanges">true to enable changes while print preview is displayed; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.QueryTable">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that represents the query table that intersects the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that represents the query table that intersects the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ReadingOrder">
      <summary>Gets or sets the reading order for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>One of the following values: <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> (right-to-left), <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> (left-to-right), or <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" />. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.RefersTo">
      <summary>Gets or sets the formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to, using A1-style notation.</summary>
      <returns>The formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to. The formula uses A1-style notation and begins with an equal sign.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.RefersToLocal">
      <summary>Gets or sets the formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to, using A1-style notation in the language of the user.</summary>
      <returns>The formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to. The formula uses A1-style notation in the language of the user, and begins with an equal sign.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.RefersToR1C1">
      <summary>Gets or sets the formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to, using R1C1-style notation.</summary>
      <returns>The formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to. The formula uses R1C1-style notation and begins with an equal sign.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.RefersToR1C1Local">
      <summary>Gets or sets the formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to, using R1C1-style notation in the language of the user.</summary>
      <returns>The formula that the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is defined to refer to. The formula uses R1C1-style notation in the language of the user, and begins with an equal sign.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.RefersToRange">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> referred to by a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> referred to by a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)">
      <summary>Removes duplicate values from a range of values.</summary>
      <param name="Columns">Optional. Array of indices of the columns that contain the duplicate values. If blank, all columns will be searched for duplicate information.</param>
      <param name="Header">Optional. Specifies whether the first row contains header information. The default is xlNo. Use xlGuess if you want Excel to attempt to determine the header.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.RemoveSubtotal">
      <summary>Removes subtotals from the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Replaces the specified characters in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control with a new string.</summary>
      <returns>true if the specified characters are in cells within the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control; otherwise, false.</returns>
      <param name="What">The string you want Microsoft Office Excel to search for.</param>
      <param name="Replacement">The replacement string.</param>
      <param name="LookAt">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlWhole" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlPart" />.</param>
      <param name="SearchOrder">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByColumns" />.</param>
      <param name="MatchCase">true to make the search case sensitive.</param>
      <param name="MatchByte">You can use this argument only if you have selected or installed double-byte language support in Excel. true to have double-byte characters match only double-byte characters; false to have double-byte characters match their single-byte equivalents.</param>
      <param name="SearchFormat">The search format for the method.</param>
      <param name="ReplaceFormat">The replace format for the method.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Resize">
      <summary>Gets a resized <see cref="T:Microsoft.Office.Interop.Excel.Range" /> based on the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A resized <see cref="T:Microsoft.Office.Interop.Excel.Range" /> based on the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Row">
      <summary>Gets the number of the first row of the first area in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The number of the first row of the first area in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.RowDifferences(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</returns>
      <param name="Comparison">A single cell to compare with the other cells in the row.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.RowHeight">
      <summary>Gets or sets the height of all the rows in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, measured in points. </summary>
      <returns>The height of all the rows in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control, measured in points. Returns null if the rows in the specified range are not all the same height. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Rows">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents one or more rows in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents one or more rows in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Arg1"></param>
      <param name="Arg2"></param>
      <param name="Arg3"></param>
      <param name="Arg4"></param>
      <param name="Arg5"></param>
      <param name="Arg6"></param>
      <param name="Arg7"></param>
      <param name="Arg8"></param>
      <param name="Arg9"></param>
      <param name="Arg10"></param>
      <param name="Arg11"></param>
      <param name="Arg12"></param>
      <param name="Arg13"></param>
      <param name="Arg14"></param>
      <param name="Arg15"></param>
      <param name="Arg16"></param>
      <param name="Arg17"></param>
      <param name="Arg18"></param>
      <param name="Arg19"></param>
      <param name="Arg20"></param>
      <param name="Arg21"></param>
      <param name="Arg22"></param>
      <param name="Arg23"></param>
      <param name="Arg24"></param>
      <param name="Arg25"></param>
      <param name="Arg26"></param>
      <param name="Arg27"></param>
      <param name="Arg28"></param>
      <param name="Arg29"></param>
      <param name="Arg30"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Select">
      <summary>Selects the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.NamedRange.Selected">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control is selected.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.NamedRange.SelectionChange">
      <summary>Occurs when the selection inside the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control changes.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ServerActions">
      <summary>Gets the actions that can be performed on the Microsoft Office SharePoint server for a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> object.</summary>
      <returns>An Microsoft.Office.Interop.Excel.Actions object that represents the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.set_Item(System.Object,System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.Item" /> property instead of this method.</summary>
      <param name="RowIndex"></param>
      <param name="ColumnIndex"></param>
      <param name="_arg2"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.set_Value(System.Object,System.Object)">
      <summary>Sets the value of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="rangeValueDataType">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> values that specifies the data type of the range value. The default is <see cref="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueDefault" />. This parameter is optional in Visual Basic.</param>
      <param name="arg1"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.SetPhonetic">
      <summary>Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Show">
      <summary>Scrolls through the contents of the active window to move the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control into view.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ShowDependents(System.Object)">
      <summary>Draws tracer arrows to the direct dependents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Remove">true to remove one level of tracer arrows to direct dependents; false to expand one level of tracer arrows. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ShowDetail">
      <summary>Gets or sets an object that indicates whether the outline is expanded for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control (so that the detail of the column or row is visible). </summary>
      <returns>true if the outline is expanded for the specified range (so that the detail of the column or row is visible); otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ShowErrors">
      <summary>Draws tracer arrows through the precedents tree to the cell that is the source of the error, and returns the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains that cell.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains the cell that is the source of the error.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.ShowPrecedents(System.Object)">
      <summary>Draws tracer arrows to the direct precedents of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Remove">true to remove one level of tracer arrows to direct precedents; false to expand one level of tracer arrows. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.ShrinkToFit">
      <summary>Gets or sets a value that indicates whether text automatically shrinks to fit in the available column width.</summary>
      <returns>true if text automatically shrinks to fit in the available column width; null if this property is not set to the same value for all cells in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.SmartTags">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object that represents the identifier for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object that represents the identifier for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
      <summary>Sorts the data in a <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="Key1">The first sort field, as either text (a range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</param>
      <param name="Order1">The sort order for the field or range specified in <paramref name="Key1" />.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending" />. Sorts <paramref name="Key1" /> in descending order.<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending" />. Sorts <paramref name="Key1" /> in ascending order.</param>
      <param name="Key2">The second sort field, as either text (a range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. If you omit this argument, there is no second sort field.</param>
      <param name="Type">Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortType.xlSortLabels" />. Sorts the PivotTable report by labels. <see cref="F:Microsoft.Office.Interop.Excel.XlSortType.xlSortValues" />. Sorts the PivotTable report by values. </param>
      <param name="Order2">The sort order for the range specified in <paramref name="Key2" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending" />. Sorts <paramref name="Key2" /> in descending order. <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending" />. Sorts <paramref name="Key2" /> in ascending order. </param>
      <param name="Key3">The third sort field, as either text (a range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. If you omit this argument, there is no third sort field. Cannot be used when sorting PivotTable reports.</param>
      <param name="Order3">The sort order for the field or range specified in <paramref name="Key3" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending" />. Sorts <paramref name="Key3" /> in descending order. <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending" />. Sorts <paramref name="Key3" /> in ascending order. </param>
      <param name="Header">Specifies whether or not the first row contains headers. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" />. Let Microsoft Office Excel determine whether there is a header, and to determine where it is, if there is one. <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" />. (The entire range should be sorted). <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlYes" />. (The entire range should not be sorted).</param>
      <param name="OrderCustom">This argument is a one-based integer offset to the list of custom sort orders. If you omit <paramref name="OrderCustom" />, a normal sort is used.</param>
      <param name="MatchCase">true to do a case-sensitive sort; false to do a sort that is not case sensitive. Cannot be used when sorting PivotTable reports.</param>
      <param name="Orientation">The sort orientation.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows" />. Sorts by row. <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortColumns" />. Sorts by column.</param>
      <param name="SortMethod">The type of sort. Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlStroke" />. Sorting by the quantity of strokes in each character. <see cref="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin" />. Phonetic Chinese sort order for characters. </param>
      <param name="DataOption1">Specifies how to sort text in <paramref name="key1" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers" />. Treat text as numeric data for the sort. <see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal" />. Sorts numeric and text data separately. </param>
      <param name="DataOption2">Specifies how to sort text in <paramref name="key2" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers" />. Treats text as numeric data for the sort. <see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal" />. Sorts numeric and text data separately. </param>
      <param name="DataOption3">Specifies how to sort text in <paramref name="key3" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers" />. Treats text as numeric data for the sort. <see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal" />. Sorts numeric and text data separately.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
      <summary>Uses East Asian sorting methods to sort the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. For example, Japanese sorts in the order of the Kana syllabary. For more information, see the parameters list.</summary>
      <param name="SortMethod">The type of sort. Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you have selected or installed.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlStroke" />. Sorting by the quantity of strokes in each character. <see cref="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin" /> (default). Phonetic Chinese sort order for characters.</param>
      <param name="Key1">The first sort field, as either text (a range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</param>
      <param name="Order1">The sort order for the field or range specified in <paramref name="Key1" />.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending" />. Sorts <paramref name="Key1" /> in descending order. <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending" /> (default). Sorts <paramref name="Key1" /> in ascending order.</param>
      <param name="Type">Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports.</param>
      <param name="Key2">The second sort field, as either text (a range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. If you omit this argument, there is no second sort field. Cannot be used when sorting PivotTable reports.</param>
      <param name="Order2">The sort order for the field or range specified in the <paramref name="Key2" /> argument. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending" />. Sorts <paramref name="Key2" /> in descending order. <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending" /> (default). Sorts <paramref name="Key2" /> in ascending order.</param>
      <param name="Key3">The third sort field, as either text (a range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. If you omit this argument, there is no third sort field. Cannot be used when sorting PivotTable reports.</param>
      <param name="Order3">The sort order for the field or range specified in the <paramref name="Key3" /> argument. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending" />. Sorts <paramref name="Key3" /> in descending order. <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending" /> (default). Sorts <paramref name="Key3" /> in ascending order.</param>
      <param name="Header">Specifies whether or not the first row contains headers. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" />. Lets Microsoft Office Excel determine whether there is a header, and to determine where it is, if there is one. <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> (default). The entire range should be sorted. <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlYes" />. The entire range should not be sorted.</param>
      <param name="OrderCustom">This argument is a one-based integer offset to the list of custom sort orders. If you omit <paramref name="OrderCustom" />, normal sort order is used.</param>
      <param name="MatchCase">true to do a case-sensitive sort; false to do a sort that is not case sensitive. Cannot be used when sorting PivotTable reports.</param>
      <param name="Orientation">The sort orientation.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows" /> (default). The sort is done by row. <see cref="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortColumns" />. The sort is done by column.</param>
      <param name="DataOption1">Specifies how to sort text in <paramref name="key1" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers" />. Treats text as numeric data for the sort. <see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal" /> (default). Sorts numeric and text data separately.</param>
      <param name="DataOption2">Specifies how to sort text in <paramref name="key2" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers" />. Treats text as numeric data for the sort. <see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal" /> (default). Sorts numeric and text data separately.</param>
      <param name="DataOption3">Specifies how to sort text in <paramref name="key3" />. Cannot be used when sorting PivotTable reports.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers" />. Treats text as numeric data for the sort. <see cref="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal" /> (default). Sorts numeric and text data separately.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.SoundNote"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.SparklineGroups">
      <summary>Gets an object that represents an existing group of sparklines from the specified range.</summary>
      <returns>An object that represents an existing group of sparklines from the specified range.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Speak(System.Object,System.Object)">
      <summary>Causes the cells of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control to be spoken in row order or column order.</summary>
      <param name="SpeakDirection">The speak direction, by rows or columns.</param>
      <param name="SpeakFormulas">true will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas. The value is sent if the cells do not have formulas; false (default) will cause values to always be sent to the TTS engine.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</returns>
      <param name="Type">The cells to include.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllFormatConditions" />. Cells of any format.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllValidation" />. Cells that have validation criteria.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeBlanks" />. Empty cells.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeComments" />. Cells that contain notes.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeConstants" />. Cells that contain constants.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeFormulas" />. Cells that contain formulas.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeLastCell" />. The last cell in the used range.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameFormatConditions" />. Cells that have the same format.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameValidation" />. Cells that have the same validation criteria.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeVisible" />. All visible cells.</param>
      <param name="Value">If <paramref name="Type" /> is either <see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeConstants" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeFormulas" />, this argument is used to determine which types of cells to include in the result. These values can be added together to return more than one type. The default is to select all constants or formulas, no matter what the type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlErrors" /><see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlLogical" /><see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlNumbers" /><see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlTextValues" /></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Style">
      <summary>Gets or sets a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> that represents the style of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Style" /> that represents the style of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)">
      <param name="Edition"></param>
      <param name="Format"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)">
      <summary>Creates subtotals for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <param name="GroupBy">The field to group by, as a one-based integer offset.</param>
      <param name="Function">The subtotal function.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlAverage" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCount" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCountNums" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMax" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMin" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlProduct" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDev" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDevP" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlSum" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlUnknown" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVar" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVarP" /></param>
      <param name="TotalList">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</param>
      <param name="Replace">true to replace existing subtotals. The default value is false.</param>
      <param name="PageBreaks">true to add page breaks after each group. The default value is false.</param>
      <param name="SummaryBelowData">Places the summary data relative to the subtotal.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryAbove" /><see cref="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow" /> (default)</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Summary">
      <summary>Gets a value that indicates whether the range is an outlining summary row or column. </summary>
      <returns>true if the range is an outlining summary row or column; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Table(System.Object,System.Object)">
      <summary>Creates a data table based on input values and formulas that you define in a worksheet.</summary>
      <param name="RowInput">A single cell to use as the row input for your table.</param>
      <param name="ColumnInput">A single cell to use as the column input for your table.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Tag">
      <summary>Gets or sets the object that contains data about the <see cref="P:Microsoft.Office.Tools.Excel.NamedRange.Tag" /> control.</summary>
      <returns>An object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Text">
      <summary>Gets the text for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The text for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Parses a column of cells that contain text into several columns.</summary>
      <param name="Destination">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Office Excel will place the results. If the range is larger than a single cell, the top left cell is used.</param>
      <param name="DataType">The format of the text to be split into columns.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> (default)<see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlFixedWidth" /></param>
      <param name="TextQualifier">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote" /> (default)<see cref="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierNone" /><see cref="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierSingleQuote" /></param>
      <param name="ConsecutiveDelimiter">true to have Excel consider consecutive delimiters as one delimiter. The default value is false.</param>
      <param name="Tab">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the tab character be a delimiter. The default value is false.</param>
      <param name="Semicolon">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the semicolon be a delimiter. The default value is false.</param>
      <param name="Comma">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the comma be a delimiter. The default value is false.</param>
      <param name="Space">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the space character be a delimiter. The default value is false.</param>
      <param name="Other">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter. The default value is false.</param>
      <param name="OtherChar">The delimiter character when <paramref name="Other" /> is true. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
      <param name="FieldInfo">An array containing parse information for the individual columns of data. The interpretation depends on the value of <paramref name="DataType" />. When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column. The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlGeneralFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlTextFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMDYFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDMYFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYMDFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMYDFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDYMFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYDMFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlSkipColumn" />You can use <see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat" /> only if Taiwanese language support is installed and selected. <see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat" /> specifies that Taiwanese era dates are being used.The column specifiers can be in any order. If a given column specifier is not present for a particular column in the input data, the column is parsed with the <see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlGeneralFormat" /> setting. If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character). The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</param>
      <param name="DecimalSeparator">The decimal separator that Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="ThousandsSeparator">The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="TrailingMinusNumbers">Numbers that begin with a minus character.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Top">
      <summary>Gets the distance, in points, from the top edge of row 1 (one) to the top edge of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>The distance, in points, from the top edge of row 1 (one) to the top edge of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.Ungroup">
      <summary>Promotes the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in an outline (that is, decreases its outline level). </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.NamedRange.UnMerge">
      <summary>Separates a merged area into individual cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.UseStandardHeight">
      <summary>Gets or sets a value that indicates whether the row height of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control equals the standard height of the sheet. </summary>
      <returns>true if the row height of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control equals the standard height of the sheet; null if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contains more than one row and the rows are not all the same height. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.UseStandardWidth">
      <summary>Gets or sets a value that indicates whether the column width of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control equals the standard width of the sheet. </summary>
      <returns>true if the column width of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control equals the standard width of the sheet; null if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contains more than one column and the columns are not all the same width.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Validation">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Value">
      <summary>Gets or sets the value of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The value of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Value2">
      <summary>Gets or sets the value of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>The value of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Width">
      <summary>Gets the width of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in points.</summary>
      <returns>The width of the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control in points.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.Worksheet">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the worksheet that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the worksheet that contains the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.WrapText">
      <summary>Gets or sets a value that indicates whether Microsoft Office Excel wraps the text in the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control. </summary>
      <returns>true if Excel wraps the text in the object; null if the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control contains some cells that wrap text and other cells that do not wrap text. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange.XPath">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> that represents the Xpath of the element mapped to the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> that represents the Xpath of the element mapped to the <see cref="T:Microsoft.Office.Tools.Excel.NamedRange" /> control.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange_AddressLocalType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_AddressLocalType.Item(System.Boolean,System.Boolean,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Boolean,System.Object)">
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange_AddressType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_AddressType.Item(System.Boolean,System.Boolean,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Boolean,System.Object)">
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange_CharactersType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_CharactersType.Item(System.Int32,System.Int32)">
      <param name="Start"></param>
      <param name="Length"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange_EndType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_EndType.Item(Microsoft.Office.Interop.Excel.XlDirection)">
      <param name="Direction"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange_ItemType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_ItemType.Item(System.Int32)">
      <param name="RowIndex"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_ItemType.Item(System.Int32,System.Int32)">
      <param name="RowIndex"></param>
      <param name="ColumnIndex"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange_OffsetType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_OffsetType.Item(System.Int32,System.Int32)">
      <param name="RowOffset"></param>
      <param name="ColumnOffset"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.NamedRange_ResizeType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.NamedRange_ResizeType.Item(System.Int32,System.Int32)">
      <param name="RowSize"></param>
      <param name="ColumnSize"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.OriginalDataRestoredEventArgs">
      <summary>Provides data for an <see cref="E:Microsoft.Office.Tools.Excel.ListObject.OriginalDataRestored" /> event.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.OriginalDataRestoredEventArgs.ChangeReason">
      <summary>Gets a value indicating the reason that the original data was restored.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Tools.Excel.ChangeReason" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.OriginalDataRestoredEventArgs.ChangeType">
      <summary>Gets a value indicating the kind of restoration performed by a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</summary>
      <returns>One of the <see cref="P:Microsoft.Office.Tools.Excel.OriginalDataRestoredEventArgs.ChangeType" /> values.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.OriginalDataRestoredEventHandler">
      <summary>Represents a method that handles the <see cref="E:Microsoft.Office.Tools.Excel.ListObject.OriginalDataRestored" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:Microsoft.Office.Tools.Excel.OriginalDataRestoredEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.SmartTag">
      <summary>Represents a smart tag in an Excel workbook that is customized by using the Office development tools in Visual Studio.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.SmartTag.DefaultExtension">
      <summary>Gets the default extension for this <see cref="T:Microsoft.Office.Tools.Excel.SmartTag" /> object.</summary>
      <returns>The default extension for this <see cref="T:Microsoft.Office.Tools.Excel.SmartTag" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.SmartTag.Extension">
      <summary>Gets a custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.SmartTag" /> object.</summary>
      <returns>A custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.SmartTag" /> object.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.SmartTagRecognizeContext">
      <summary>Provides the context of a call to a custom smart tag recognizer.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.SmartTagRecognizeContext.CellText">
      <summary>Gets the text from the cell that is sent to the <see cref="M:Microsoft.Office.Tools.Excel.ISmartTagExtension.Recognize(System.String,Microsoft.Office.Interop.SmartTag.ISmartTagRecognizerSite,Microsoft.Office.Interop.SmartTag.ISmartTagTokenList,Microsoft.Office.Tools.Excel.SmartTagRecognizeContext)" /> method.</summary>
      <returns>The text from the cell that is sent to the <see cref="M:Microsoft.Office.Tools.Excel.ISmartTagExtension.Recognize(System.String,Microsoft.Office.Interop.SmartTag.ISmartTagRecognizerSite,Microsoft.Office.Interop.SmartTag.ISmartTagTokenList,Microsoft.Office.Tools.Excel.SmartTagRecognizeContext)" /> method. </returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.SmartTagRecognizeContext.PersistTag(Microsoft.Office.Interop.SmartTag.ISmartTagProperties)">
      <summary>Stores information about the smart tag.</summary>
      <param name="propertyBag">A property bag containing key and value pairs for the token. Can be null.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Microsoft.Office.Tools.Excel.SmartTagRecognizeContext.PersistTag(Microsoft.Office.Interop.SmartTag.ISmartTagProperties)" /> was not called from the <see cref="M:Microsoft.Office.Tools.Excel.ISmartTagExtension.Recognize(System.String,Microsoft.Office.Interop.SmartTag.ISmartTagRecognizerSite,Microsoft.Office.Interop.SmartTag.ISmartTagTokenList,Microsoft.Office.Tools.Excel.SmartTagRecognizeContext)" /> method.</exception>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.Workbook">
      <summary>Represents a workbook in Excel projects created by using the Office development tools in Visual Studio.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook._CodeName"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="From"></param>
      <param name="To"></param>
      <param name="Copies"></param>
      <param name="Preview"></param>
      <param name="ActivePrinter"></param>
      <param name="PrintToFile"></param>
      <param name="Collate"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook._Protect(System.Object,System.Object,System.Object)">
      <param name="Password"></param>
      <param name="Structure"></param>
      <param name="Windows"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook._ReadOnlyRecommended"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)">
      <param name="Filename"></param>
      <param name="FileFormat"></param>
      <param name="Password"></param>
      <param name="WriteResPassword"></param>
      <param name="ReadOnlyRecommended"></param>
      <param name="CreateBackup"></param>
      <param name="AccessMode"></param>
      <param name="ConflictResolution"></param>
      <param name="AddToMru"></param>
      <param name="TextCodepage"></param>
      <param name="TextVisualLayout"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)">
      <summary>Accepts all changes in the shared workbook.</summary>
      <param name="When">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlHighlightChangesTime" /> values that specifies when the changes to be accepted were made.</param>
      <param name="Who">A string that identifies who made the changes to be accepted. Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</param>
      <param name="Where">An A1-style range reference that specifies the location of the changes to be accepted. </param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.AcceptLabelsInFormulas">
      <summary>Gets or sets a value that indicates whether labels can be used in worksheet formulas.</summary>
      <returns>true if labels can be used in worksheet formulas. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.AccuracyVersion">
      <summary>Specifies whether certain worksheet functions use the latest accuracy algorithms to calculate their results. This property can be used only in Excel 2010 projects.</summary>
      <returns>A value that specifies whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Activate">
      <summary>Activates the first window associated with the workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.ActivateEvent">
      <summary>Occurs when the workbook is activated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ActiveChart">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet). An embedded chart is considered active when it is either selected or activated. When no chart is active, this property returns null.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart; null if no chart is active.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ActiveSheet">
      <summary>Gets the active sheet (the sheet on top).</summary>
      <returns>The active sheet (the sheet on top); null if no sheet is active.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ActiveSlicer">
      <summary>Gets an object that represents the active slicer in the active workbook or in the specified workbook. This property can be used only in Excel 2010 projects.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> that represents the active slicer in the active workbook or in the specified workbook.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.AddinInstall">
      <summary>Occurs when the workbook is installed as an add-in.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.AddinUninstall">
      <summary>Occurs when the workbook is uninstalled as an add-in.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.AddToFavorites">
      <summary>Adds a shortcut to the workbook to the Favorites folder.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.AfterSave">
      <summary>Occurs after the workbook is saved. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.AfterXmlExport">
      <summary>Occurs after Microsoft Office Excel saves or exports data from the workbook to an XML data file.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.AfterXmlImport">
      <summary>Occurs after an existing XML data connection is refreshed or after new XML data is imported into the workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Application">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the creator of the workbook.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the creator of the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ApplyTheme(System.String)">
      <summary>Applies the specified theme to the workbook.</summary>
      <param name="Filename">The full file path of the theme to apply.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Author">
      <summary>Gets or sets the author of the workbook.</summary>
      <returns>The author of the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.AutoUpdateFrequency">
      <summary>Gets or sets the number of minutes between automatic updates to the shared workbook.</summary>
      <returns>The number of minutes between automatic updates to the shared workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.AutoUpdateSaveChanges">
      <summary>Gets or sets a value that indicates whether current changes to the shared workbook are posted to other users whenever the workbook is automatically updated.</summary>
      <returns>true if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated. false if changes are not posted (this workbook is still synchronized with changes made by other users). The default value is true.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.BeforeClose">
      <summary>Occurs before the workbook closes. If the workbook has been changed, this event occurs before the user is asked to save changes.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.BeforePrint">
      <summary>Occurs before the workbook (or anything in it) is printed.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.BeforeSave">
      <summary>Occurs before the workbook is saved.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.BeforeXmlExport">
      <summary>Occurs before Microsoft Office Excel saves or exports data from the workbook to an XML data file.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.BeforeXmlImport">
      <summary>Occurs before an existing XML data connection is refreshed or before new XML data is imported into the workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.BindingContextChanged"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)">
      <summary>Converts formulas linked to other Microsoft Office Excel sources or OLE sources to values.</summary>
      <param name="Name">The name of the link.</param>
      <param name="Type">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> values. The type of link.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.BuiltinDocumentProperties">
      <summary>Gets a Microsoft.Office.Core.DocumentProperties collection that represents all the built-in document properties for the workbook.</summary>
      <returns>A Microsoft.Office.Core.DocumentProperties collection that represents all the built-in document properties for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CalculationVersion">
      <summary>Gets a number that indicates the version of Excel that the workbook was last fully recalculated by. The rightmost four digits are the minor calculation engine version number, and the other digits (on the left) are the major version of Microsoft Office Excel.</summary>
      <returns>A number that indicates the version of Excel that the workbook was last fully recalculated by. The rightmost four digits are the minor calculation engine version number, and the other digits (on the left) are the major version of Microsoft Office Excel.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.CanCheckIn">
      <summary>Gets a value that indicates whether Microsoft Office Excel can check in the workbook to a server.</summary>
      <returns>true if Microsoft Office Excel can check in the workbook to a server; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)">
      <summary>Changes the access permissions for the workbook. This might require an updated version to be loaded from the disk.</summary>
      <param name="Mode">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" /> values. Specifies the new access mode.</param>
      <param name="WritePassword">Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlFileAccess.xlReadWrite" />. Ignored if there is no password for the file or if <paramref name="Mode" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlFileAccess.xlReadOnly" />.</param>
      <param name="Notify">true to notify the user if the file cannot be immediately accessed.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ChangeHistoryDuration">
      <summary>Gets or sets the number of days shown in the shared workbook's change history.</summary>
      <returns>The number of days shown in the shared workbook's change history.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)">
      <summary>Changes a link from one document to another.</summary>
      <param name="Name">The name of the Microsoft Office Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Tools.Excel.Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="NewName">The new name of the link.</param>
      <param name="Type">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> values that specifies the link type.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Charts">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CheckCompatibility">
      <summary>Gets or sets a value that indicates whether to run the compatibility checker automatically when the workbook is saved.</summary>
      <returns>true if the compatibility checker should be run automatically when the workbook is saved; otherwise, false. The default for Excel 97-2003 Binary (BIFF8) workbooks is true; the default for all other workbooks is false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.CheckIn(System.Object,System.Object,System.Object)">
      <summary>Returns a workbook from a local computer to a server, and sets the local workbook to read-only so that it cannot be edited locally. Calling this method closes the workbook.</summary>
      <param name="SaveChanges">true saves changes and checks in the document; false returns the document to a checked-in status without saving revisions.</param>
      <param name="Comments">Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals true).</param>
      <param name="MakePublic">true allows the user to publish the workbook after it has been checked in. This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals true).</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)">
      <summary>Sends the workbook from the local computer to a server, and sets the local workbook to read-only so that it cannot be edited locally. Calling this method closes the workbook.</summary>
      <param name="SaveChanges">true to save changes and check in the document; false to return the document to a checked-in state without saving revisions.</param>
      <param name="Comments">true to enable check-in comments; false to check in the workbook without comments. This parameter applies only if <paramref name="SaveChanges" /> is true.</param>
      <param name="MakePublic">true to enable the user to publish the workbook after it has been checked in. This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals true).</param>
      <param name="VersionType">Specifies versioning information for the document.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Close(System.Object,System.Object,System.Object)">
      <summary>Closes the workbook.</summary>
      <param name="SaveChanges">If there are no changes to the workbook, this argument is ignored. If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored. If there are changes to the workbook but the workbook does not appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following list.true. Saves the changes to the workbook. If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used. If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.false. Does not save the changes to the workbook.Omitted. Displays a dialog box asking the user whether or not to save changes.</param>
      <param name="Filename">Save changes under this file name.</param>
      <param name="RouteWorkbook">If the workbook does not need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored. Otherwise, Microsoft Office Excel routes the workbook as shown in the following list.true. Sends the workbook to the next recipient.false. Does not send the workbook.Omitted. Displays a dialog box asking the user whether the workbook should be sent.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CodeName"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Colors">
      <summary>Gets or sets colors in the palette for the workbook. </summary>
      <returns>An RGB color value in the color palette for the workbook, or an array that contains all 56 RGB color values in the color palette for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CommandBars">
      <summary>Gets a Microsoft.Office.Core.CommandBars object that represents the Microsoft Office Excel command bars.</summary>
      <returns>A Microsoft.Office.Core.CommandBars object that represents the Microsoft Office Excel command bars.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Comments">
      <summary>Gets or sets the comments attached to the workbook.</summary>
      <returns>The comments attached to the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ConflictResolution">
      <summary>Gets or sets the way conflicts are to be resolved whenever a shared workbook is updated.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Connections">
      <summary>Gets the collection of connections between the workbook and a data source.</summary>
      <returns>A Microsoft.Office.Interop.Excel.Connections collection that contains the connections between the workbook and a data source.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ConnectionsDisabled">
      <summary>Gets a value that indicates whether to disable the external connections or links in the workbook.</summary>
      <returns>true to disable the external connections or links in the workbook; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Container">
      <summary>Gets the object that represents the container application for the workbook.</summary>
      <returns>The object that represents the container application for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ContentTypeProperties">
      <summary>Gets a collection of properties that describe metadata that is stored in the workbook.</summary>
      <returns>A Microsoft.Office.Core.MetaProperties collection that contains properties that describe metadata that is stored in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CreateBackup">
      <summary>Gets a value that indicates whether a backup file is created when this file is saved.</summary>
      <returns>true if a backup file is created when this file is saved; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Creator">
      <summary>Gets the application in which the workbook was created.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CustomDocumentProperties">
      <summary>Gets a Microsoft.Office.Core.DocumentProperties collection that represents all the custom document properties for the workbook.</summary>
      <returns>A Microsoft.Office.Core.DocumentProperties collection that represents all the custom document properties for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CustomViews">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.CustomXMLParts">
      <summary>Gets the collection of custom XML parts in the workbook.</summary>
      <returns>A Microsoft.Office.Core.CustomXMLParts collection that contains the custom XML parts in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DataHost"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Date1904">
      <summary>Gets or sets a value that indicates whether the workbook uses the 1904 date system.</summary>
      <returns>true if the workbook uses the 1904 date system; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.Deactivate">
      <summary>Occurs when the workbook is deactivated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DefaultExtension">
      <summary>Gets the default extension for this <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> object.</summary>
      <returns>The default extension for this <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DefaultPivotTableStyle">
      <summary>Gets or sets the table style from the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.TableStyles" /> property that is used as the default style for PivotTable reports in the workbook.</summary>
      <returns>The table style from the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.TableStyles" /> property that is used as the default style for PivotTable reports in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DefaultSlicerStyle">
      <summary>Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers. This property can be used only in Excel 2010 projects.</summary>
      <returns>An object that represents the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DefaultTableStyle">
      <summary>Gets or sets the table style from the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.TableStyles" /> property that is used as the default style for tables in the workbook.</summary>
      <returns>The table style from the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.TableStyles" /> property that is used as the default style for tables in the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.DeleteNumberFormat(System.String)">
      <summary>Deletes a custom number format from the workbook.</summary>
      <param name="NumberFormat">Names the number format to be deleted.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DialogSheets">
      <summary>Included for backwards compatibility only.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DisplayDrawingObjects">
      <summary>Gets or sets how shapes are displayed.</summary>
      <returns>One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlDisplayShapes" />, <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlPlaceholders" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlHide" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DisplayInkComments">
      <summary>Gets or sets a value that indicates whether ink comments are displayed in the workbook.</summary>
      <returns>true if ink comments are displayed in the workbook; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DocumentInspectors">
      <summary>Gets the collection of Document Inspector modules for the workbook.</summary>
      <returns>A Microsoft.Office.Core.DocumentInspectors collection that contains the Document Inspector modules for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DocumentLibraryVersions">
      <summary>Gets a Microsoft.Office.Core.DocumentLibraryVersions collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</summary>
      <returns>A Microsoft.Office.Core.DocumentLibraryVersions collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.DoNotPromptForConvert">
      <summary>Gets or sets a value that indicates whether to prompt the user to convert the workbook if it contains features that are not supported by versions of Excel earlier than Excel 2007.</summary>
      <returns>true to prompt the user to convert the workbook; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Dummy16"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Dummy17(System.Int32)">
      <param name="calcid"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Dummy26"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Dummy27"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.EnableAutoRecover">
      <summary>Gets or sets a value that indicates whether Microsoft Office Excel saves changed files, of all formats, on a timed interval.</summary>
      <returns>true if Excel saves changed files on a timed interval; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.EnableConnections">
      <summary>Enables data connections within the workbook.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.EncryptionProvider">
      <summary>Gets or sets the name of the algorithm encryption provider that Microsoft Office Excel uses when encrypting documents.</summary>
      <returns>The name of the algorithm encryption provider that Microsoft Office Excel uses when encrypting documents.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.EndReview">
      <summary>Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Tools.Excel.Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.EnvelopeVisible">
      <summary>Gets or sets a value that indicates whether the e-mail composition header and the envelope toolbar are both visible.</summary>
      <returns>true if the e-mail composition header and the envelope toolbar are both visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Excel4IntlMacroSheets">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Office Excel 4.0 international macro sheets in the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Office Excel 4.0 international macro sheets in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Excel4MacroSheets">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Office Excel 4.0 macro sheets in the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Office Excel 4.0 macro sheets in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Excel8CompatibilityMode">
      <summary>Gets a value that indicates whether the workbook is in compatibility mode.</summary>
      <returns>true if the workbook is in compatibility mode; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ExclusiveAccess">
      <summary>Assigns the current user exclusive access to the workbook that is open as a shared list.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves a workbook in PDF or XPS format.</summary>
      <param name="Type">One of the Microsoft.Office.Interop.Excel.XlFixedFormatType values that specifies whether to save the workbook in PDF or XPS format.</param>
      <param name="Filename">The full path of the new PDF or XPS file. If you omit this parameter, Excel saves the file in the current folder.</param>
      <param name="Quality">One of the Microsoft.Office.Interop.Excel.XlFixedFormatQuality values that specifies the quality of the exported file.</param>
      <param name="IncludeDocProperties">true to include document properties in the exported file; otherwise, false.</param>
      <param name="IgnorePrintAreas">true to ignore any print areas set when exporting; otherwise, false.</param>
      <param name="From">The number of the page at which to start exporting. If this parameter is omitted, exporting starts at the beginning.</param>
      <param name="To">The number of the last page to export. If this parameter is omitted, exporting ends with the last page.</param>
      <param name="OpenAfterPublish">true to open the new file after exporting the workbook; otherwise, false.</param>
      <param name="FixedFormatExtClassPtr">A pointer to an implementation of the IMsoDocExporter interface that enables the workbook to be saved in a different fixed format. For more information, see Extending the Office (2007) Fixed-Format Export Feature.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Extension">
      <summary>Gets a custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> object.</summary>
      <returns>A custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.Workbook" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.FileFormat">
      <summary>Gets the file format and type of the workbook.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Final">
      <summary>Gets or sets a value that indicates whether the workbook is final.</summary>
      <returns>true if the workbook is final; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays a cached document, if it has already been downloaded. Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</summary>
      <param name="Address">The address of the target document.</param>
      <param name="SubAddress">The location within the target document. The default value is the empty string.</param>
      <param name="NewWindow">true to display the target application in a new window. The default value is false.</param>
      <param name="AddHistory">Not used. Reserved for future use.</param>
      <param name="ExtraInfo">A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink. For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</param>
      <param name="Method">Specifies the way <paramref name="ExtraInfo" /> is attached. Can be one of the following Microsoft.Office.Core.MsoExtraInfoMethod constants: Microsoft.Office.Core.MsoExtraInfoMethod.msoMethodGet or Microsoft.Office.Core.MsoExtraInfoMethod.msoMethodPost.</param>
      <param name="HeaderInfo">A string that specifies header information for the HTTP request. The default value is an empty string.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ForceFullCalculation">
      <summary>Gets or sets a value that indicates whether to force a full calculation of a workbook.</summary>
      <returns>true to force a full calculation of a workbook; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ForwardMailer"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.FullName">
      <summary>Gets the name of the object, including its path on disk.</summary>
      <returns>The name of the object, including its path on disk.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.FullNameURLEncoded">
      <summary>Gets the name of the object, including its path on disk.</summary>
      <returns>The name of the object, including its path on disk.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.get_Colors(System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.Colors" /> property instead of this method.</summary>
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.GetWorkflowTasks">
      <summary>Returns the collection of workflow tasks for the workbook.</summary>
      <returns>A Microsoft.Office.Core.WorkflowTasks collection that contains the workflow tasks for the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.GetWorkflowTemplates">
      <summary>Returns the collection of workflow templates for the workbook.</summary>
      <returns>A Microsoft.Office.Core.WorkflowTemplates collection that contains the workflow templates for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.HasMailer"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.HasPassword">
      <summary>Gets a value that indicates whether the workbook has a protection password.</summary>
      <returns>true if the workbook has a protection password; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.HasRoutingSlip">
      <summary>Gets or sets a value that indicates whether the workbook has a routing slip.</summary>
      <returns>true if the workbook has a routing slip; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.HasVBProject">
      <summary>Gets a value that indicates whether a workbook has an attached Microsoft Visual Basic for Applications (VBA) project.</summary>
      <returns>true if the workbook has an attached VBA project; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.HighlightChangesOnScreen">
      <summary>Gets or sets a value that indicates whether changes to the shared workbook are highlighted on screen.</summary>
      <returns>true if changes to the shared workbook are highlighted on screen; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)">
      <summary>Controls how changes are shown in a shared workbook.</summary>
      <param name="When">The changes that are shown. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlHighlightChangesTime" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlSinceMyLastSave" />, <see cref="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlAllChanges" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlNotYetReviewed" />.</param>
      <param name="Who">The user or users whose changes are shown. Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</param>
      <param name="Where">An A1-style range reference that specifies the area to check for changes.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.HostContext"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.HTMLProject">
      <summary>Gets the Microsoft.Office.Core.HTMLProject in the workbook, which represents a top-level project branch.</summary>
      <returns>The Microsoft.Office.Core.HTMLProject in the workbook, which represents a top-level project branch.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.IconSets">
      <summary>Gets the collection of built-in icon sets that can be used to apply a conditional formatting rule to a range in the workbook.</summary>
      <returns>A Microsoft.Office.Interop.Excel.IconSets collection that contains the built-in icon set objects that can be used to apply a conditional formatting rule to a range.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.InactiveListBorderVisible">
      <summary>Gets or sets a value that indicates whether list borders are visible when a list is not active.</summary>
      <returns>true if the border is visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.InnerObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Workbook" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Workbook" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.IsAddin">
      <summary>Gets or sets a value that indicates whether the workbook is running as an add-in.</summary>
      <returns>true if the workbook is running as an add-in; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.IsInplace">
      <summary>Gets a value that indicates whether the specified workbook is being edited in place.</summary>
      <returns>true if the specified workbook is being edited in place; false if the workbook has been opened in Microsoft Office Excel for editing.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ItemProvider"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.KeepChangeHistory">
      <summary>Gets or sets a value that indicates whether change tracking is enabled for the shared workbook.</summary>
      <returns>true if change tracking is enabled for the shared workbook; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Keywords">
      <summary>Gets or sets the keywords attached to the workbook.</summary>
      <returns>The keywords attached to the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)">
      <summary>Gets the link date and update status.</summary>
      <returns>A value that indicates information about the link. If <paramref name="LinkInfoArgument" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlLinkInfo.xlUpdateState" />, this method returns 1 if the link updates automatically, or 2 if the link must be updated manually.</returns>
      <param name="Name">The name of the link.</param>
      <param name="LinkInfoArgument">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" /> values that specifies the type of information to return.</param>
      <param name="Type">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" /> values that specifies the type of link to return information for.</param>
      <param name="EditionRef">If the link is an edition, this parameter specifies the edition reference as a string in R1C1 style. <paramref name="EditionRef" /> is required if there is more than one publisher or subscriber with the same name in the workbook.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.LinkSources(System.Object)">
      <summary>Returns an <see cref="T:System.Array" /> of links in the workbook. </summary>
      <returns>An <see cref="T:System.Array" /> of link names in the workbook; null if the workbook does not contain any links of the specified <paramref name="Type" />.</returns>
      <param name="Type">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLink" /> values specifying the type of links to return.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ListChangesOnNewSheet">
      <summary>Gets or sets a value that indicates whether changes to the shared workbook are shown on a separate worksheet.</summary>
      <returns>true if changes to the shared workbook are shown on a separate worksheet; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.LockServerFile">
      <summary>Locks the workbook on the server to prevent modification.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Mailer"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.MergeWorkbook(System.Object)">
      <summary>Merges changes from one workbook into an open shared workbook.</summary>
      <param name="Filename">The file name of the workbook that contains the changes to be merged into the open workbook.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Modules">
      <summary>Included for backwards compatibility only.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.MultiUserEditing">
      <summary>Gets a value that indicates whether the workbook is open as a shared list.</summary>
      <returns>true if the workbook is open as a shared list; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Name">
      <summary>Gets the name of the workbook.</summary>
      <returns>The name of the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Names">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the workbook (including all worksheet-specific names).</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the workbook (including all worksheet-specific names).</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.New">
      <summary>Occurs when a new workbook is created.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.NewChart">
      <summary>Occurs when a new chart is created in the workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.NewSheet">
      <summary>Occurs when a new sheet is created in the workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.NewWindow">
      <summary>Creates a new window.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.OnSave">
      <summary>Included for backwards compatibility only.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.OnSheetActivate">
      <summary>Included for backwards compatibility only.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.OnSheetDeactivate">
      <summary>Included for backwards compatibility only.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.Open">
      <summary>Occurs when the workbook is opened.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.OpenLinks(System.String,System.Object,System.Object)">
      <summary>Opens the supporting documents for a link or links.</summary>
      <param name="Name">The name of the Microsoft Office Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Tools.Excel.Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="ReadOnly">true to open documents as read-only. The default value is false.</param>
      <param name="Type">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLink" /> values. The link type.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Parent">
      <summary>Gets the parent object for the workbook.</summary>
      <returns>The parent object for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Password">
      <summary>Gets or sets the password that must be supplied to open the workbook.</summary>
      <returns>The password that must be supplied to open the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PasswordEncryptionAlgorithm">
      <summary>Gets the algorithm that Microsoft Office Excel uses to encrypt passwords for the workbook.</summary>
      <returns>The algorithm that Excel uses to encrypt passwords for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PasswordEncryptionFileProperties">
      <summary>Gets a value that indicates whether Microsoft Office Excel encrypts file properties for the specified password-protected workbook.</summary>
      <returns>true if Excel encrypts file properties for the specified password-protected workbook; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PasswordEncryptionKeyLength">
      <summary>Gets the key length of the algorithm that Microsoft Office Excel uses when encrypting passwords for the workbook.</summary>
      <returns>The key length of the algorithm that Excel uses when encrypting passwords for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PasswordEncryptionProvider">
      <summary>Gets the name of the algorithm encryption provider that Microsoft Office Excel uses when encrypting passwords for the workbook.</summary>
      <returns>The name of the algorithm encryption provider that Excel uses when encrypting passwords for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Path">
      <summary>Gets the complete path to the application, excluding the final separator and name of the application.</summary>
      <returns>The complete path to the application, excluding the final separator and name of the application.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Permission">
      <summary>Gets a Microsoft.Office.Core.Permission object that represents the permission settings in the workbook.</summary>
      <returns>A Microsoft.Office.Core.Permission object that represents the permission settings in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PersonalViewListSettings">
      <summary>Gets or sets a value that indicates whether filter and sort settings for lists are included in the user's personal view of the shared workbook.</summary>
      <returns>true if filter and sort settings for lists are included in the user's personal view of the shared workbook; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PersonalViewPrintSettings">
      <summary>Gets or sets a value that indicates whether print settings are included in the user's personal view of the shared workbook.</summary>
      <returns>true if print settings are included in the user's personal view of the shared workbook; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.PivotCaches">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.PivotTableCloseConnection">
      <summary>Occurs after a PivotTable report closes the connection to its data source.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.PivotTableOpenConnection">
      <summary>Occurs after a PivotTable report opens the connection to its data source.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object. </summary>
      <param name="SourceType">An <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> value. The source of the report data.</param>
      <param name="SourceData">The data for the new report. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report. For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length. You should use the <paramref name="Connection" /> argument to specify the ODBC connection string. For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array. The first element is the connection string specifying the ODBC source for the data. The second element is the SQL query string used to get the data. If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />. If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</param>
      <param name="TableDestination">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying where the report should be placed on the worksheet. If this argument is omitted, the report is placed at the active cell.</param>
      <param name="TableName">The name of the new report.</param>
      <param name="RowGrand">true to show grand totals for rows in the report.</param>
      <param name="ColumnGrand">true to show grand totals for columns in the report.</param>
      <param name="SaveData">true to save data with the report; false to save only the report definition.</param>
      <param name="HasAutoFormat">true to have Microsoft Office Excel automatically format the report when it is refreshed or when fields are moved.</param>
      <param name="AutoPage">Valid only if <paramref name="SourceType" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlConsolidation" />. true to have Excel create a page field for the consolidation. If <paramref name="AutoPage" /> is false, you must create the page field or fields.</param>
      <param name="Reserved">Not used by Excel.</param>
      <param name="BackgroundQuery">true to have Excel perform queries for the report asynchronously (in the background). The default value is false.</param>
      <param name="OptimizeCache">true to optimize the PivotTable cache when it is constructed. The default value is false.</param>
      <param name="PageFieldOrder">The order in which page fields are added to the PivotTable report’s layout. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlOverThenDown" />. The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" />.</param>
      <param name="PageFieldWrapCount">The number of page fields in each column or row in the PivotTable report. The default value is 0 (zero).</param>
      <param name="ReadData">true to create a PivotTable cache that contains all records from the external database; this cache can be very large. If <paramref name="ReadData" /> is false, you can set some of the fields as server-based page fields before the data is actually read.</param>
      <param name="Connection">A string that contains ODBC settings that allow Excel to connect to an ODBC data source. The connection string has the form "ODBC;&lt;connection string&gt;". This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Post(System.Object)">
      <summary>Posts the workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</summary>
      <param name="DestName">This argument is ignored. The <see cref="M:Microsoft.Office.Tools.Excel.Workbook.Post(System.Object)" /> method prompts the user to specify the destination for the workbook.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PrecisionAsDisplayed">
      <summary>Gets or sets a value that indicates whether calculations in this workbook will be done using only the precision of the numbers as they are displayed.</summary>
      <returns>true if calculations in this workbook will be done using only the precision of the numbers as they are displayed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the workbook.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the workbook.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
      <param name="IgnorePrintAreas">true to ignore print areas and print the entire workbook; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="EnableChanges">true to allow changes to the margins and page setup while displaying the print preview; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Protect(System.Object,System.Object,System.Object)">
      <summary>Protects a workbook so that it cannot be modified.</summary>
      <param name="Password">A case-sensitive password for the workbook. If this argument is omitted, you can unprotect the workbook without using a password. Otherwise, you must specify the password to unprotect the workbook. </param>
      <param name="Structure">true to protect the structure of the workbook (the relative position of the sheets). The default value is false.</param>
      <param name="Windows">true to protect the workbook windows. If this argument is omitted, the windows are not protected.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves the workbook and protects it for sharing.</summary>
      <param name="Filename">The name of the saved file. You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</param>
      <param name="Password">A case-sensitive password for the workbook. If this argument is omitted, you can unprotect the workbook without using a password. Otherwise, you must specify the password to unprotect the workbook.</param>
      <param name="WriteResPassword">The write-reservation password for this file. If a file is saved with the password and the password is not supplied when the file is opened, the file is opened read-only.</param>
      <param name="ReadOnlyRecommended">true to display a message when the file is opened, recommending that the file be opened read-only.</param>
      <param name="CreateBackup">true to create a backup file.</param>
      <param name="SharingPassword">The password to be used to protect the file for sharing.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves the workbook and protects it for sharing.</summary>
      <param name="Filename">The name of the saved file. You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</param>
      <param name="Password">A case-sensitive password for the workbook. If this argument is omitted, you can unprotect the workbook without using a password. Otherwise, you must specify the password to unprotect the workbook.</param>
      <param name="WriteResPassword">The write-reservation password for this file. If a file is saved with the password and the password is not supplied when the file is opened, the file is opened read-only.</param>
      <param name="ReadOnlyRecommended">true to display a message when the file is opened, recommending that the file be opened read-only.</param>
      <param name="CreateBackup">true to create a backup file.</param>
      <param name="SharingPassword">The password to be used to protect the file for sharing.</param>
      <param name="FileFormat">A string that indicates the file format.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ProtectStructure">
      <summary>Gets a value that indicates whether the order of the sheets in the workbook is protected.</summary>
      <returns>true if the order of the sheets in the workbook is protected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ProtectWindows">
      <summary>Gets a value that indicates whether the windows of the workbook are protected.</summary>
      <returns>true if the windows of the workbook are protected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.PublishObjects">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)">
      <summary>Removes entries from the change log for the workbook.</summary>
      <param name="Days">The number of days that changes in the change log are to be retained.</param>
      <param name="SharingPassword">The password that unprotects the workbook for sharing. If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ReadOnly">
      <summary>Gets a value that indicates whether the workbook has been opened as read-only.</summary>
      <returns>true if the workbook has been opened as read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ReadOnlyRecommended">
      <summary>Gets or sets a value that indicates whether the workbook was saved as read-only recommended.</summary>
      <returns>true if the workbook was saved as read-only recommended; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.RecheckSmartTags">
      <summary>Causes a foreground smart tag check to occur automatically annotating data that was not annotated before.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.RefreshAll">
      <summary>Refreshes all external data ranges and PivotTable reports in the workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.RejectAllChanges(System.Object,System.Object,System.Object)">
      <summary>Rejects all changes in the shared workbook.</summary>
      <param name="When">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlHighlightChangesTime" /> values that specifies when the changes to be rejected were made.</param>
      <param name="Who">A string that identifies who made the changes to be rejected. Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</param>
      <param name="Where">An A1-style range reference that specifies the location of the changes to be rejected. </param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)">
      <summary>Reloads a workbook based on an HTML document, using the specified document encoding.</summary>
      <param name="Encoding">One of the Microsoft.Office.Core.MsoEncoding values. The encoding that is to be applied to the workbook.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.RemoveCustomization">
      <summary>Removes the customization that was created by using Office development tools in Visual Studio from the workbook.</summary>
      <exception cref="T:Microsoft.Office.Tools.CannotRemoveCustomizationException">The custom document properties or the cached data could not be removed from the workbook.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The document is protected.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)">
      <summary>Removes all information of the specified type from the workbook.</summary>
      <param name="RemoveDocInfoType">One of the Microsoft.Office.Interop.Excel.XlRemoveDocInfoType values that specifies the type of information to be removed.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.RemovePersonalInformation">
      <summary>Gets or sets a value that indicates whether personal information can be removed from the workbook.</summary>
      <returns>true if personal information can be removed from the workbook; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.RemoveUser(System.Int32)">
      <summary>Disconnects the specified user from the shared workbook.</summary>
      <param name="Index">The user index.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Reply"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ReplyAll"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ReplyWithChanges(System.Object)">
      <summary>Sends an e-mail message to the author of a workbook that has been sent out for review, notifying him or her that a reviewer has completed review of the workbook.</summary>
      <param name="ShowMessage">true to display the message; false to not display the message.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Research">
      <summary>Gets an object that represents the research service for the workbook.</summary>
      <returns>A Microsoft.Office.Interop.Excel.Research object that represents the research service for the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ResetColors">
      <summary>Resets the color palette to the default colors.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.RevisionNumber">
      <summary>Gets the number of times the workbook has been saved while open as a shared list. If the workbook is open in exclusive mode, this property returns 0 (zero).</summary>
      <returns>The number of times the workbook has been saved while open as a shared list.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Route">
      <summary>Routes the workbook, using the workbook's current routing slip.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Routed">
      <summary>Gets a value that indicates whether the workbook has been routed to the next recipient.</summary>
      <returns>true if the workbook has been routed to the next recipient; false if the workbook needs to be routed.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.RoutingSlip">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.RowsetComplete">
      <summary>Occurs when the user navigates through the recordset or invokes the rowset action on an OLAP PivotTable. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)">
      <summary>Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook. This method is included for backward compatibility. You should use the Open, Close, Activate and Deactivate events instead of these macros.</summary>
      <param name="Which">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" /> values.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Save">
      <summary>Saves changes to the workbook.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves changes to the workbook in a different file.</summary>
      <param name="Filename">The name of the file to be saved. You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</param>
      <param name="FileFormat">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" /> values that specifies the file format to use when you save the file. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
      <param name="Password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="WriteResPassword">The write-reservation password for this file. If a file is saved with the password and the password is not supplied when the file is opened, the file is opened as read-only.</param>
      <param name="ReadOnlyRecommended">true to display a message when the file is opened, recommending that the file be opened as read-only.</param>
      <param name="CreateBackup">true to create a backup file.</param>
      <param name="AccessMode">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" /> values. </param>
      <param name="ConflictResolution">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" /> values.</param>
      <param name="AddToMru">true to add this workbook to the list of recently used files. The default value is false.</param>
      <param name="TextCodepage">Ignored for all languages in Microsoft Excel. NoteWhen Excel saves a workbook to one of the CSV or text formats, which are specified by using the <paramref name="FileFormat" /> parameter, it uses the code page that corresponds to the language for the system locale in use on the current computer.</param>
      <param name="TextVisualLayout">Ignored for all languages in Microsoft Excel. NoteWhen Excel saves a workbook to one of the CSV or text formats, which are specified by using the <paramref name="FileFormat" /> parameter, it saves these formats in logical layout. If left-to-right text is embedded within right-to-left text in the file, or vice versa, logical layout saves the contents of the file in the correct reading order for all languages in the file without regard to direction. When an application is used to open the file, the characters in each run of characters are rendered in the correct direction according to the character value ranges within the code page. (Unless the file is opened in an application, such as a debugger or editor, that is designed to display the exact memory layout of the file.)</param>
      <param name="Local">true saves files against the language of Excel (including control panel settings). false (default) saves files against the language of Visual Basic for Applications (VBA).</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)">
      <summary>Exports the data that has been mapped to the specified XML schema map to an XML data file.</summary>
      <param name="Filename">The name of the file to be saved. You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</param>
      <param name="Map">An <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object. The schema map to apply to the data.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SaveCopyAs(System.Object)">
      <summary>Saves a copy of the workbook to a file but does not modify the open workbook in memory.</summary>
      <param name="Filename">Specifies the file name for the copy.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Saved">
      <summary>Gets or sets a value that indicates whether no changes have been made to the workbook since it was last saved.</summary>
      <returns>true if no changes have been made to the workbook since it was last saved; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.SaveLinkValues">
      <summary>Gets or sets a value that indicates whether Microsoft Office Excel saves external link values with the workbook.</summary>
      <returns>true if Excel saves external link values with the workbook; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.sblt(System.String)">
      <param name="s"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)">
      <summary>Sends the active sheet in the workbook as a fax to the specified recipients.</summary>
      <param name="Recipients">The fax numbers and e-mail addresses of the people to whom the fax will be sent. Separate multiple recipients with a semicolon.</param>
      <param name="Subject">The subject line for the faxed document.</param>
      <param name="ShowMessage">true displays the fax message before sending it; false sends the fax without displaying the fax message.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)">
      <summary>Sends a workbook in an e-mail message for review to the specified recipients.</summary>
      <param name="Recipients">The people to whom to send the message. These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses. Separate multiple recipients with a semicolon (;). If left blank and <paramref name="ShowMessage" /> is false, you will receive an error message, and the message will not be sent.</param>
      <param name="Subject">The subject of the message. If left blank, the subject will be: Please review "<paramref name="filename" />   ".</param>
      <param name="ShowMessage">A value that indicates whether the message should be displayed when the method is executed. The default value is true. If set to false, the message is automatically sent to the recipients without first showing the message to the sender.</param>
      <param name="IncludeAttachment">A value that indicates whether the message should include an attachment or a link to a server location. The default value is true. If set to false, the document must be stored at a shared location.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SendMail(System.Object,System.Object,System.Object)">
      <summary>Sends the workbook by using the installed mail system.</summary>
      <param name="Recipients">Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients. At least one recipient must be specified, and all recipients are added as To recipients.</param>
      <param name="Subject">Specifies the subject of the message. If this argument is omitted, the document name is used.</param>
      <param name="ReturnReceipt">true to request a return receipt. false to not request a return receipt. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)">
      <param name="FileFormat"></param>
      <param name="Priority"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ServerPolicy">
      <summary>Gets an object that represents a policy specified for a workbook that is stored on a server running Microsoft Office SharePoint Server.</summary>
      <returns>A Microsoft.Office.Core.ServerPolicy object that represents a policy specified for a workbook that is stored on a server running SharePoint Server.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ServerViewableItems">
      <summary>Gets an object that you can use to interact with the list of published objects in the workbook that are shown on a Microsoft Office SharePoint Server server.</summary>
      <returns>A Microsoft.Office.Interop.Excel.ServerViewableItems object that you can use to interact with the list of published objects in the workbook that are shown on the server.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.set_Colors(System.Object,System.Object)">
      <summary>Use the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.Colors" /> property instead of this method.</summary>
      <param name="Index"></param>
      <param name="RHS"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SetLinkOnData(System.String,System.Object)">
      <summary>Sets the name of a procedure that runs whenever a DDE link is updated.</summary>
      <param name="Name">The name of the DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Tools.Excel.Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="Procedure">The name of the procedure to be run when the link is updated. This can be either a Microsoft Office Excel 4.0 macro or a Visual Basic procedure. Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)">
      <summary>Sets the options for encrypting the workbook using a password.</summary>
      <param name="PasswordEncryptionProvider">A case sensitive string of the encryption provider.</param>
      <param name="PasswordEncryptionAlgorithm">A case sensitive string of the algorithmic short name (i.e. "RC4").</param>
      <param name="PasswordEncryptionKeyLength">The encryption key length, which is a multiple of 8 (40 or greater).</param>
      <param name="PasswordEncryptionFileProperties">true (default) to encrypt file properties.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.SharedWorkspace">
      <summary>Gets a Microsoft.Office.Core.SharedWorkspace that represents the Document Workspace in which the workbook is located.</summary>
      <returns>A Microsoft.Office.Core.SharedWorkspace that represents the Document Workspace in which the workbook is located.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetActivate">
      <summary>Occurs when any sheet is activated.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetBeforeDoubleClick">
      <summary>Occurs when any worksheet is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetBeforeRightClick">
      <summary>Occurs when any worksheet is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetCalculate">
      <summary>Occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetChange">
      <summary>Occurs when cells in any worksheet are changed by the user or by an external link.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetDeactivate">
      <summary>Occurs when any sheet is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetFollowHyperlink">
      <summary>Occurs when you click any hyperlink in a workbook.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetPivotTableAfterValueChange">
      <summary>Occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas). This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetPivotTableBeforeAllocateChanges">
      <summary>Occurs before changes are applied to a PivotTable. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetPivotTableBeforeCommitChanges">
      <summary>Occurs before changes are committed against the OLAP data source for a PivotTable. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetPivotTableBeforeDiscardChanges">
      <summary>Occurs before changes to a PivotTable are discarded. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetPivotTableChangeSync">
      <summary>Occurs after changes to a PivotTable. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetPivotTableUpdate">
      <summary>Occurs after the sheet of a PivotTable report has been updated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Sheets">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the workbook.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SheetSelectionChange">
      <summary>Occurs when the selection changes on any worksheet. Does not occur if the selection is on a chart sheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ShowConflictHistory">
      <summary>Gets or sets a value that indicates whether the Conflict History worksheet is visible in the workbook that is open as a shared list.</summary>
      <returns>true if the Conflict History worksheet is visible in the workbook that is open as a shared list; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ShowPivotChartActiveFields">
      <summary>Gets or sets a value that indicates whether the PivotChart Filter Pane is visible.</summary>
      <returns>true if the PivotChart Filter Pane is visible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.ShowPivotTableFieldList">
      <summary>Gets or sets a value that indicates whether the PivotTable field list can be shown.</summary>
      <returns>true if the PivotTable field list can be shown; otherwise, false. The default is true.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.Shutdown">
      <summary>Occurs when the workbook host item shuts down.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Signatures">
      <summary>Gets the collection of digital signatures for the workbook.</summary>
      <returns>A Microsoft.Office.Core.SignatureSet collection that contains the digital signatures for the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.SlicerCaches">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.SmartDocument">
      <summary>Gets a Microsoft.Office.Core.SmartDocument that represents the settings for a smart document solution.</summary>
      <returns>A Microsoft.Office.Core.SmartDocument that represents the settings for a smart document solution.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.SmartTagOptions">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.Startup">
      <summary>Occurs after the workbook is running and all the initialization code in the assembly has been run.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Styles">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Subject">
      <summary>Gets or sets the subject for the mailer or routing slip.</summary>
      <returns>The subject for the mailer or routing slip.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Sync">
      <summary>Gets a Microsoft.Office.Core.Sync object that provides access to the methods and properties of documents that are part of a Document Workspace.</summary>
      <returns>A Microsoft.Office.Core.Sync object that provides access to the methods and properties of documents that are part of a Document Workspace.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.SyncEvent">
      <summary>Occurs when the local copy of a worksheet that is part of a Document Workspace is synchronized with the copy on the server.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.TableStyles">
      <summary>Gets the collection of table styles that are used in the workbook.</summary>
      <returns>A Microsoft.Office.Interop.Excel.TableStyles collection that contains the table styles that are used in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Tag">
      <summary>Gets or sets the object that contains data about the workbook. </summary>
      <returns>An object that contains data about the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.TemplateRemoveExtData">
      <summary>Gets or sets a value that indicates whether external data references are removed when the workbook is saved as a template.</summary>
      <returns>true if external data references are removed when the workbook is saved as a template; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Theme">
      <summary>Gets the theme that is applied to the workbook.</summary>
      <returns>A Microsoft.Office.Core.OfficeTheme that represents the theme that is applied to the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Title">
      <summary>Gets or sets the title of the Web page when the workbook is saved as a Web page.</summary>
      <returns>The title of the Web page when the workbook is saved as a Web page.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.ToggleFormsDesign">
      <summary>Toggles Microsoft Office Excel into and out of design mode.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.Unprotect(System.Object)">
      <summary>Removes protection from the workbook. This method has no effect if the workbook is not protected.</summary>
      <param name="Password">The case-sensitive password to use to unprotect the workbook. If the workbook is not protected with a password, this parameter is ignored. If you omit this parameter for a workbook that is protected with a password, the method fails.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.UnprotectSharing(System.Object)">
      <summary>Turns off protection for sharing and saves the workbook.</summary>
      <param name="SharingPassword">The workbook password.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.UpdateFromFile">
      <summary>Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy has not changed since the workbook was loaded, the in-memory copy of the workbook is not reloaded.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.UpdateLink(System.Object,System.Object)">
      <summary>Updates a Microsoft Office Excel, DDE, or OLE link (or links).</summary>
      <param name="Name">The name of the Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Tools.Excel.Workbook.LinkSources(System.Object)" /> method.</param>
      <param name="Type">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> values.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.UpdateLinks">
      <summary>Gets or sets a value that indicates a workbook's setting for updating embedded OLE links.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.UpdateRemoteReferences">
      <summary>Gets or sets a value that indicates whether Microsoft Office Excel updates remote references in the workbook.</summary>
      <returns>true if Excel updates remote references in the workbook; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.UserControl">
      <summary>Gets or sets a value that indicates whether the workbook or application was created or opened by the user.</summary>
      <returns>true if the workbook or application was created or opened by the user; false if the workbook or application was created or opened programmatically from another Microsoft Office application with the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method or the VBA.Interaction.CreateObject or VBA.Interaction.GetObject method.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.UserStatus">
      <summary>Gets a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</summary>
      <returns>A 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.VBASigned">
      <summary>Gets a value that indicates whether the Visual Basic for Applications project for the workbook has been digitally signed.</summary>
      <returns>true if the Visual Basic for Applications project for the workbook has been digitally signed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.VBProject">
      <summary>Gets the virtual Microsoft.Vbe.Interop.VBProject project that is in the workbook.</summary>
      <returns>The virtual Microsoft.Vbe.Interop.VBProject project that is in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.VstoSmartTags">
      <summary>Gets the <see cref="T:Microsoft.Office.Tools.SmartTagCollection" /> associated with the workbook.</summary>
      <returns>The <see cref="T:Microsoft.Office.Tools.SmartTagCollection" /> associated with the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.WebOptions">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Office Excel when you save a document as a Web page or open a Web page.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Excel when you save a document as a Web page or open a Web page.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.WebPagePreview">
      <summary>Displays a preview of the workbook as it would look if saved as a Web page.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.WindowActivate">
      <summary>Occurs when any workbook window is activated.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.WindowDeactivate">
      <summary>Occurs when any workbook window is deactivated.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Workbook.WindowResize">
      <summary>Occurs when any workbook window is resized.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Windows">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.Worksheets">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the workbook.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.WritePassword">
      <summary>Gets or sets the write password of a workbook.</summary>
      <returns>The write password of a workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.WriteReserved">
      <summary>Gets a value that indicates whether the workbook is write-reserved.</summary>
      <returns>true if the workbook is write-reserved; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.WriteReservedBy">
      <summary>Gets the name of the user who currently has write permission for the workbook.</summary>
      <returns>The name of the user who currently has write permission for the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
      <summary>Imports an XML data file into the current workbook.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> values.</returns>
      <param name="Url">A uniform resource locator (URL) or a uniform naming convention (UNC) path to an XML data file.</param>
      <param name="ImportMap">The schema map to apply when importing the file.</param>
      <param name="Overwrite">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter. Set to true to overwrite the data or false to append the new data to the existing data. The default value is true. If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data. Set to true to overwrite existing data or false to cancel the import if data would be overwritten. The default value is true.</param>
      <param name="Destination">The data will be imported into a new XML list at the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> specified.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
      <summary>Imports an XML data stream that has been previously loaded into memory.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> values.</returns>
      <param name="Data">The data to import.</param>
      <param name="ImportMap">The schema map to apply when importing the file.</param>
      <param name="Overwrite">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter. Set to true to overwrite the data or false to append the new data to the existing data. The default value is true. If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data. Set to true to overwrite existing data or false to cancel the import if data would be overwritten. The default value is true.</param>
      <param name="Destination">The data will be imported into a new XML list in the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> specified.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.XmlMaps">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the workbook.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook.XmlNamespaces">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the workbook.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the workbook.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.Workbook_ColorsType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Workbook_ColorsType.Item(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.WorkbookEvents_NewEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Office.Tools.Excel.Workbook.New" /> event of a <see cref="T:Microsoft.Office.Tools.Excel.Workbook" />.</summary>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.Worksheet">
      <summary>Represents a worksheet in Excel projects created by using the Office development tools in Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="CustomDictionary"></param>
      <param name="IgnoreUppercase"></param>
      <param name="AlwaysSuggest"></param>
      <param name="SpellLang"></param>
      <param name="IgnoreFinalYaa"></param>
      <param name="SpellScript"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet._CodeName"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet._DisplayRightToLeft"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet._Evaluate(System.Object)">
      <param name="Name"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Format"></param>
      <param name="Link"></param>
      <param name="DisplayAsIcon"></param>
      <param name="IconFileName"></param>
      <param name="IconIndex"></param>
      <param name="IconLabel"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="From"></param>
      <param name="To"></param>
      <param name="Copies"></param>
      <param name="Preview"></param>
      <param name="ActivePrinter"></param>
      <param name="PrintToFile"></param>
      <param name="Collate"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Password"></param>
      <param name="DrawingObjects"></param>
      <param name="Contents"></param>
      <param name="Scenarios"></param>
      <param name="UserInterfaceOnly"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Filename"></param>
      <param name="FileFormat"></param>
      <param name="Password"></param>
      <param name="WriteResPassword"></param>
      <param name="ReadOnlyRecommended"></param>
      <param name="CreateBackup"></param>
      <param name="AddToMru"></param>
      <param name="TextCodepage"></param>
      <param name="TextVisualLayout"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Activate">
      <summary>Makes the current sheet the active sheet.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.ActivateEvent">
      <summary>Occurs when the worksheet is activated.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Application">
      <summary>This property gets a <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Excel application.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Arcs(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.AutoFilter">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> that provides information about filtered lists on the worksheet if filtering is enabled. Gets null if filtering is off.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> that provides information about filtered lists on the worksheet if filtering is enabled; otherwise, null.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.AutoFilterMode">
      <summary>Gets or sets a value that indicates whether filtering is currently enabled on the worksheet (that is, whether the filter drop-down arrows are currently displayed).</summary>
      <returns>true if filtering is currently enabled on the worksheet; otherwise, false.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">This property is set to true.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.BeforeDoubleClick">
      <summary>Occurs when the worksheet is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.BeforeRightClick">
      <summary>Occurs when the worksheet is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.BindingContextChanged"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Buttons(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.Calculate">
      <summary>Occurs after the worksheet is recalculated.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.CalculateMethod">
      <summary>Calculates the formulas in the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Cells">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.Change">
      <summary>Occurs when something changes in the <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> cells.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ChartObjects(System.Object)">
      <summary>Gets an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />) on the worksheet.</summary>
      <returns>An object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />) on the worksheet.</returns>
      <param name="Index">The name or number of the chart. This argument can be an array, to specify more than one chart.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.CheckBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling in a worksheet.</summary>
      <param name="CustomDictionary">The file name of the custom dictionary to be examined if the word is not found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">true to have Excel ignore words that are all uppercase; false to have Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
      <param name="AlwaysSuggest">true to have Excel display a list of suggested alternate spellings when an incorrect spelling is found; false to have Excel wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
      <param name="SpellLang">The language of the dictionary being used. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.CircleInvalid">
      <summary>Circles invalid entries on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.CircularReference">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or gets null if there is no circular reference on the sheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet; null if there is no circular reference on the sheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ClearArrows">
      <summary>Clears the tracer arrows from the worksheet. Tracer arrows are added by using the auditing feature.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ClearCircles">
      <summary>Clears circles from invalid entries on the worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.CodeName"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Columns">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more columns on the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more columns on the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Comments">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ConsolidationFunction">
      <summary>Gets the function code used for the current consolidation.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ConsolidationOptions">
      <summary>Gets a three-element <see cref="T:System.Array" /> of consolidation options. </summary>
      <returns>A three-element <see cref="T:System.Array" /> of consolidation options.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ConsolidationSources">
      <summary>Gets an <see cref="T:System.Array" /> of strings that name the source sheets and ranges for the worksheet's current consolidation. </summary>
      <returns>An <see cref="T:System.Array" /> of string values that name the source sheets and ranges for the worksheet's current consolidation; null if there is no consolidation on the sheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Controls">
      <summary>Gets the collection of managed controls that are contained on the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> that contains all the managed controls on the worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Copy(System.Object,System.Object)">
      <summary>Copies the worksheet to another location in the workbook.</summary>
      <param name="Before">The sheet before which the copied sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">The sheet after which the copied sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Creator">
      <summary>Gets a value that indicates the application in which the worksheet was created.</summary>
      <returns>If the worksheet was created in Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.CustomProperties">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.DataHost"></member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.Deactivate">
      <summary>Occurs when the worksheet loses focus.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.DefaultExtension">
      <summary>Gets the default extension for this <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> object.</summary>
      <returns>The default extension for this <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Delete">
      <summary>Deletes the underlying <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object, but does not delete the host item. It is highly recommended that this method not be used.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.DisplayAutomaticPageBreaks"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.DisplayPageBreaks">
      <summary>Gets or sets a value that indicates whether page breaks (both automatic and manual) on the worksheet are displayed.</summary>
      <returns>true if page breaks (both automatic and manual) on the worksheet are displayed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.DisplayRightToLeft">
      <summary>Gets or sets a value that indicates whether the worksheet is displayed from right to left instead of from left to right.</summary>
      <returns>true if the worksheet is displayed from right to left instead of from left to right; false if the object is displayed from left to right.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.DrawingObjects(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Drawings(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.DropDowns(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.EnableAutoFilter">
      <summary>Gets or sets a value that indicates whether AutoFilter arrows are enabled when user-interface-only protection is turned on.</summary>
      <returns>true if AutoFilter arrows are enabled when user-interface-only protection is turned on; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.EnableCalculation">
      <summary>Gets or set a value that indicates whether Microsoft Office Excel automatically recalculates the worksheet when necessary.</summary>
      <returns>true if Excel automatically recalculates the worksheet when necessary; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.EnableFormatConditionsCalculation">
      <summary>Gets or sets a value that determines whether conditional formats will occur automatically.</summary>
      <returns>true if evaluation of conditional formats will occur automatically; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.EnableOutlining">
      <summary>Gets or sets a value that indicates whether outlining symbols are enabled when user-interface-only protection is turned on.</summary>
      <returns>true if outlining symbols are enabled when user-interface-only protection is turned on; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.EnablePivotTable">
      <summary>Gets or sets a value that indicates whether PivotTable controls and actions are enabled when user-interface-only protection is turned on.</summary>
      <returns>true if PivotTable controls and actions are enabled when user-interface-only protection is turned on; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.EnableSelection">
      <summary>Gets or sets a value indicating which cells can be selected on the sheet.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" /> values.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Evaluate(System.Object)">
      <summary>Converts a Microsoft Office Excel name to an object or a value.</summary>
      <param name="Name">The name of the object, using the naming convention of Excel.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Exports to a file of the specified format.</summary>
      <param name="Type">One of the Microsoft.Office.Interop.Excel.XlFixedFormatType values that specifies whether to save the workbook in PDF or XPS format.</param>
      <param name="Filename">The full path of the new PDF or XPS file. If you omit this parameter, Excel saves the file in the current folder.</param>
      <param name="Quality">One of the Microsoft.Office.Interop.Excel.XlFixedFormatQuality values that specifies the quality of the exported file.</param>
      <param name="IncludeDocProperties">true to include document properties in the exported file; otherwise, false.</param>
      <param name="IgnorePrintAreas">true to ignore any print areas set when exporting; otherwise, false.</param>
      <param name="From">The number of the page at which to start exporting. If this argument is omitted, exporting starts at the first page.</param>
      <param name="To">The number of the last page to export. If this argument is omitted, exporting ends with the last page.</param>
      <param name="OpenAfterPublish">true to display the file in the viewer immediately; otherwise, false.</param>
      <param name="FixedFormatExtClassPtr">A pointer to an implementation of the IMsoDocExporter interface that enables the workbook to be saved in a different fixed format. For more information, see Extending the Office (2007) Fixed-Format Export Feature.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Extension">
      <summary>Gets a custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> object.</summary>
      <returns>A custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> object.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.FilterMode">
      <summary>Gets a value that indicates whether the worksheet is actively filtering data.</summary>
      <returns>true if the worksheet is actively filtering data; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.FollowHyperlink">
      <summary>Occurs when you click any hyperlink on a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.get_Range(System.Object,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells. Use the <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Range" /> property instead of this method.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a cell or a range of cells.</returns>
      <param name="Cell1">The name of the range in A1-style notation in the language of the application. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they are ignored. You can use a local defined name in any part of the range. If you use a name, the name is assumed to be in the language of the application. This parameter is required.</param>
      <param name="Cell2">The cell in the lower-right corner of the range. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that contains a single cell, an entire column, an entire row, or it can be a string that names a single cell in the language of the application. This parameter is optional.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.GroupBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.GroupObjects(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.HostContext"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.HPageBreaks">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Hyperlinks">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Index">
      <summary>Gets the index number of the worksheet within the collection of worksheets.</summary>
      <returns>The index number of the worksheet within the collection of worksheets.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.InnerObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ItemProvider"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Labels(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Lines(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ListBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ListObjects">
      <summary>Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> collection for the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.MailEnvelope">
      <summary>Gets an e-mail header for the worksheet.</summary>
      <returns>An e-mail header for the worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Move(System.Object,System.Object)">
      <summary>Moves the worksheet to another location in the workbook.</summary>
      <param name="Before">The sheet before which the moved sheet will be placed. You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</param>
      <param name="After">The sheet after which the moved sheet will be placed. You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Name">
      <summary>Gets or sets the name of the worksheet.</summary>
      <returns>The name of the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Names">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!" prefix).</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!" prefix).</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Next">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the next sheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the next sheet; null if the current worksheet is the last sheet in the workbook.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.OLEObjects(System.Object)">
      <summary>Gets an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the worksheet.</summary>
      <returns>An object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the worksheet.</returns>
      <param name="Index">The name or number of the OLE object.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.OnCalculate"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.OnData"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.OnDoubleClick"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.OnEntry"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.OnSheetActivate"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.OnSheetDeactivate"></member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.OptionButtons(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Outline">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> that represents the outline for the worksheet.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> that represents the outline for the worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Ovals(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.PageSetup">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Parent">
      <summary>Gets the parent object for the worksheet.</summary>
      <returns>The parent object for the worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Paste(System.Object,System.Object)">
      <summary>Pastes the contents of the Clipboard onto the worksheet.</summary>
      <param name="Destination">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used. This argument can be specified only if the contents of the Clipboard can be pasted into a range. If this argument is specified, the <paramref name="Link" /> argument cannot be used.</param>
      <param name="Link">true to establish a link to the source of the pasted data. If this argument is specified, the <paramref name="Destination" /> argument cannot be used. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Pastes the contents of the Clipboard onto the worksheet, using a specified format. Use this method to paste data from other applications or to paste data in a specific format.</summary>
      <param name="Format">A string that specifies the Clipboard format of the data. Common format strings include "HTML", "Bitmap", "Hyperlink", "Unicode Text", and "Text".</param>
      <param name="Link">true to establish a link to the source of the pasted data. If the source data is not suitable for linking or the source application does not support linking, this parameter is ignored. The default value is false.</param>
      <param name="DisplayAsIcon">true to display the pasted object as an icon. The default value is false.</param>
      <param name="IconFileName">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is true.</param>
      <param name="IconIndex">The index number of the icon within the icon file.</param>
      <param name="IconLabel">The text label of the icon.</param>
      <param name="NoHTMLFormatting">true to remove all formatting, hyperlinks, and images from HTML; false to paste HTML as is. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Pictures(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.PivotTableAfterValueChange">
      <summary>Occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas). This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.PivotTableBeforeAllocateChanges">
      <summary>Occurs before changes are applied to a PivotTable. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.PivotTableBeforeCommitChanges">
      <summary>Occurs before changes are committed against the OLAP data source for a PivotTable. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.PivotTableBeforeDiscardChanges">
      <summary>Occurs before changes to a PivotTable are discarded. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This event is used in an Excel 2007 project.</exception>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.PivotTableChangeSync">
      <summary>Occurs after changes to a PivotTable. This event can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.PivotTables(System.Object)">
      <summary>Gets an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</summary>
      <returns>An object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</returns>
      <param name="Index">The name or number of the report.</param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.PivotTableUpdate">
      <summary>Occurs after a PivotTable report is updated on a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object. </summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</returns>
      <param name="SourceType">An <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> value. The source of the report data.</param>
      <param name="SourceData">The data for the new report. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report. For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length. You should use the <paramref name="Connection" /> argument to specify the ODBC connection string. For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array. The first element is the connection string specifying the ODBC source for the data. The second element is the SQL query string used to get the data. If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />. If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</param>
      <param name="TableDestination">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying where the report should be placed on the worksheet. If this argument is omitted, the report is placed at the active cell.</param>
      <param name="TableName">The name of the new report.</param>
      <param name="RowGrand">true to show grand totals for rows in the report.</param>
      <param name="ColumnGrand">true to show grand totals for columns in the report.</param>
      <param name="SaveData">true to save data with the report; false to save only the report definition.</param>
      <param name="HasAutoFormat">true to have Microsoft Office Excel automatically format the report when it is refreshed or when fields are moved.</param>
      <param name="AutoPage">Valid only if <paramref name="SourceType" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlConsolidation" />. true to have Excel create a page field for the consolidation. If <paramref name="AutoPage" /> is false, you must create the page field or fields.</param>
      <param name="Reserved">Not used by Excel.</param>
      <param name="BackgroundQuery">true to have Excel perform queries for the report asynchronously (in the background). The default value is false.</param>
      <param name="OptimizeCache">true to optimize the PivotTable cache when it is constructed. The default value is false.</param>
      <param name="PageFieldOrder">The order in which page fields are added to the PivotTable report’s layout. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlOverThenDown" />. The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" />.</param>
      <param name="PageFieldWrapCount">The number of page fields in each column or row in the PivotTable report. The default value is 0 (zero).</param>
      <param name="ReadData">true to create a PivotTable cache that contains all records from the external database; this cache can be very large. If <paramref name="ReadData" /> is false, you can set some of the fields as server-based page fields before the data is actually read.</param>
      <param name="Connection">A string that contains ODBC settings that allow Excel to connect to an ODBC data source. The connection string has the form "ODBC;&lt;connection string&gt;". This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Previous">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the previous sheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the previous sheet; null if the current worksheet is the first sheet in the workbook.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.PrintedCommentPages">
      <summary>Gets the number of comment pages that will be printed for the current worksheet. This property can be used only in Excel 2010 projects.</summary>
      <returns>The number of comment pages that will be printed for the current worksheet.</returns>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the worksheet.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object; false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the worksheet.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
      <param name="IgnorePrintAreas">true to ignore print areas and print the entire workbook; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.PrintPreview(System.Object)">
      <summary>Shows a preview of the worksheet as it would look when printed.</summary>
      <param name="EnableChanges"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Protects a worksheet so that it cannot be modified.</summary>
      <param name="Password">A case-sensitive password for the worksheet. If this argument is omitted, you can unprotect the worksheet without using a password. Otherwise, you must specify the password to unprotect the worksheet. If you forget the password, you cannot unprotect the worksheet. It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
      <param name="DrawingObjects">true to protect shapes. The default value is false.</param>
      <param name="Contents">true to protect contents in the locked cells. The default value is true.</param>
      <param name="Scenarios">true to protect scenarios. The default value is true.</param>
      <param name="UserInterfaceOnly">true to protect the user interface, but not macros. If this argument is omitted, protection applies both to macros and to the user interface.</param>
      <param name="AllowFormattingCells">true allows the user to format any cell on a protected worksheet. The default value is false.</param>
      <param name="AllowFormattingColumns">true allows the user to format any column on a protected worksheet. The default value is false.</param>
      <param name="AllowFormattingRows">true allows the user to format any row on a protected worksheet. The default value is false.</param>
      <param name="AllowInsertingColumns">true allows the user to insert columns on the protected worksheet. The default value is false.</param>
      <param name="AllowInsertingRows">true allows the user to insert rows on the protected worksheet. The default value is false.</param>
      <param name="AllowInsertingHyperlinks">true allows the user to insert hyperlinks on the worksheet. The default value is false.</param>
      <param name="AllowDeletingColumns">true allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked. The default value is false.</param>
      <param name="AllowDeletingRows">true allows the user to delete rows on the protected worksheet, where every cell in the row to be deleted is unlocked. The default value is false.</param>
      <param name="AllowSorting">true allows the user to sort on the protected worksheet. Every cell in the sort range must be unlocked or unprotected. The default value is false.</param>
      <param name="AllowFiltering">true allows the user to set filters on the protected worksheet. Users can change filter criteria but can not enable or disable an autofilter. Users can set filters on an existing autofilter. The default value is false.</param>
      <param name="AllowUsingPivotTables">true allows the user to use pivot table reports on the protected worksheet. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ProtectContents">
      <summary>Gets a value that indicates whether the contents of the worksheet (the individual cells) are protected.</summary>
      <returns>true if the contents of the sheet are protected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ProtectDrawingObjects">
      <summary>Gets a value that indicates whether shapes are protected.</summary>
      <returns>true if shapes are protected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Protection">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ProtectionMode">
      <summary>Gets a value that indicates whether user interface-only protection is turned on.</summary>
      <returns>true if user interface-only protection is turned on; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ProtectScenarios">
      <summary>Gets a value that indicates whether worksheet scenarios are protected.</summary>
      <returns>true if the worksheet scenarios are protected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.QueryTables">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the worksheet.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Range">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a cell or a range of cells.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Rectangles(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ResetAllPageBreaks">
      <summary>Resets all page breaks on the specified worksheet.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Rows">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more rows on the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more rows on the worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves changes to the worksheet in a different file.</summary>
      <param name="Filename">The name of the file to be saved. You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</param>
      <param name="FileFormat">The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.FileFormat" /> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
      <param name="Password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="WriteResPassword">The write-reservation password for this file. If a file is saved with the password and the password is not supplied when the file is opened, the file is opened as read-only.</param>
      <param name="ReadOnlyRecommended">true to display a message when the file is opened, recommending that the file be opened as read-only.</param>
      <param name="CreateBackup">true to create a backup file.</param>
      <param name="AddToMru">true to add this workbook to the list of recently used files. The default value is false.</param>
      <param name="TextCodepage">Not used in U.S. English Excel.</param>
      <param name="TextVisualLayout">Not used in U.S. English Excel.</param>
      <param name="Local">true saves files against the language of Excel (including control panel settings); false (default) saves files against the language of Visual Basic for Applications (VBA).</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Scenarios(System.Object)">
      <summary>Gets an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</summary>
      <returns>An object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</returns>
      <param name="Index">The name or number of the scenario. Use an array to specify more than one scenario.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Scripts">
      <summary>Gets the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the worksheet when it is saved as a Web page.</summary>
      <returns>The <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the worksheet when it is saved as a Web page.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.ScrollArea">
      <summary>Gets or sets the range where scrolling is allowed, as an A1-style range reference.</summary>
      <returns>The range where scrolling is allowed, as an A1-style range reference.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ScrollBars(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Select(System.Object)">
      <summary>Selects the worksheet.</summary>
      <param name="Replace">true to remove the current selection and select the worksheet instead; false to extend the current selection to include any previously selected objects and the worksheet.</param>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.SelectionChange">
      <summary>Occurs when the selection changes on a worksheet.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.SetBackgroundPicture(System.String)">
      <summary>Sets the background graphic for the worksheet.</summary>
      <param name="Filename">The name of the graphic file.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Shapes">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ShowAllData">
      <summary>Makes all rows of the currently filtered list visible. If AutoFilter is in use, this method changes the arrows to "All."</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.ShowDataForm">
      <summary>Displays the data form associated with the worksheet.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.Shutdown">
      <summary>Occurs when the worksheet host item shuts down.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.SmartTags">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the collection of smart tags for the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the collection of smart tags for the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Sort">
      <summary>Gets the sorted values in the current worksheet.</summary>
      <returns>The sorted values in the current worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Spinners(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.StandardHeight">
      <summary>Gets the standard (default) height of all the rows in the worksheet, in points.</summary>
      <returns>The standard (default) height of all the rows in the worksheet, in points.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.StandardWidth">
      <summary>Gets or sets the standard (default) width of all the columns in the worksheet.</summary>
      <returns>The standard (default) width of all the columns in the worksheet.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.Worksheet.Startup">
      <summary>Occurs after the worksheet is running and all the initialization code in the assembly has been run.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Tab">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> for the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> for the worksheet.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Tag">
      <summary>Gets or sets the object that contains data about the worksheet. </summary>
      <returns>An object that contains data about the worksheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.TextBoxes(System.Object)">
      <param name="Index"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.TransitionExpEval">
      <summary>Gets or sets a value that indicates whether Microsoft Office Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet.</summary>
      <returns>true if Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.TransitionFormEntry">
      <summary>Gets or sets a value that indicates whether Microsoft Office Excel uses Lotus 1-2-3 formula entry rules for the worksheet.</summary>
      <returns>true if Excel uses Lotus 1-2-3 formula entry rules for the worksheet; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Type">
      <summary>Gets the worksheet type.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> values.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.Unprotect(System.Object)">
      <summary>Removes protection from the worksheet. This method has no effect if the worksheet is not protected.</summary>
      <param name="Password">The case-sensitive password to use to unprotect the worksheet. If the worksheet is not protected with a password, this argument is ignored. If you omit this argument for a worksheet that is protected with a password, you will be prompted for the password.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.UsedRange">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that have contained a value at any time.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that have contained a value at any time.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.Visible">
      <summary>Gets or sets a <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /> value that determines whether the object is visible.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet.VPageBreaks">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.XmlDataQuery(System.String,System.Object,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath. Gets null if the specified XPath has not been mapped to the worksheet, or if the mapped range is empty.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath; null if the specified XPath has not been mapped to the worksheet, or if the mapped range is empty.</returns>
      <param name="XPath">The XPath to query for.</param>
      <param name="SelectionNamespaces">A space-delimited string that contains the namespaces referenced in the XPath parameter. A run-time error is generated if one of the specified namespaces cannot be resolved.</param>
      <param name="Map">An <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. Specify an XML map if you want to query for the XPath within a specific map.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.Worksheet.XmlMapQuery(System.String,System.Object,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath. Gets null if the specified XPath has not been mapped to the worksheet.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath; null if the specified XPath has not been mapped to the worksheet.</returns>
      <param name="XPath">The XPath to query for.</param>
      <param name="SelectionNamespaces">A space-delimited string that contains the namespaces referenced in the XPath parameter. A run-time error is generated if one of the specified namespaces cannot be resolved.</param>
      <param name="Map">An <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />. Specify an XML map if you want to query for the XPath within a specific map.</param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.Worksheet_RangeType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.Worksheet_RangeType.Item(System.Object,System.Object)">
      <param name="Cell1"></param>
      <param name="Cell2"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange">
      <summary>An <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is a range that is created when a non-repeating schema element is mapped onto a cell. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
      <param name="Paste"></param>
      <param name="Operation"></param>
      <param name="SkipBlanks"></param>
      <param name="Transpose"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="From"></param>
      <param name="To"></param>
      <param name="Copies"></param>
      <param name="Preview"></param>
      <param name="ActivePrinter"></param>
      <param name="PrintToFile"></param>
      <param name="Collate"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Activate">
      <summary>Activates a single cell <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.AddComment(System.Object)">
      <summary>Adds a comment to the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>The comment that was added to the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
      <param name="Text">The comment text.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.AddIndent">
      <summary>Gets or sets a value that indicates whether text is automatically indented when the text alignment in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is set to equal distribution either horizontally or vertically. </summary>
      <returns>true if text is automatically indented when the text alignment in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is set to equal distribution either horizontally or vertically; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Address">
      <summary>Gets the range reference of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A string that represents the range reference of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in R1C1-style or A1-style notation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.AddressLocal">
      <summary>Gets the range reference of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in the language of the user. </summary>
      <returns>A string that represents the range reference of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in the language of the user and in R1C1-style or A1-style notation.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.AllocateChanges">
      <summary>Performs a writeback operation for all edited cells in an XML mapped range based on an OLAP data source. This method can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This property is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.AllowEdit">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control can be edited on a protected worksheet. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control can be edited on a protected worksheet; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Application">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application. </summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Excel application.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.AutoComplete(System.String)">
      <summary>Gets an AutoComplete match from the list. </summary>
      <returns>An AutoComplete match from the list.</returns>
      <param name="String">The string to complete.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)">
      <summary>Filters a list using the AutoFilter. </summary>
      <param name="Field">The offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field 1 (one)).</param>
      <param name="Criteria1">The criteria (a string; for example, "101"). Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields. If this argument is omitted, the criteria is All. If <paramref name="Operator" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Items" />, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</param>
      <param name="Operator">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Items" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Percent" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlOr" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Items" /><see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Percent" />Use <see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd" /> and <see cref="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlOr" /> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</param>
      <param name="Criteria2">The second criteria (a string). Used with <paramref name="Criteria1" /> and <paramref name="Operator" /> to construct compound criteria.</param>
      <param name="VisibleDropDown">true to display the AutoFilter drop-down arrow for the filtered field; false to hide the AutoFilter drop-down arrow for the filtered field. true by default.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.AutoOutline">
      <summary>Automatically creates an outline for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.XmlMappedRange.BeforeDoubleClick">
      <summary>Occurs when an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.XmlMappedRange.BeforeRightClick">
      <summary>Occurs when an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.XmlMappedRange.BindingContextChanged"></member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)">
      <summary>Adds a border to an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border. </summary>
      <param name="LineStyle">The line style for the border. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDash" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDotDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDouble" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlSlantDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlLineStyleNone" /></param>
      <param name="Weight">The border weight. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlHairline" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlMedium" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThick" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin" /></param>
      <param name="ColorIndex">The border color, as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic" /><see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexNone" /></param>
      <param name="Color">The border color, as an RGB value.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)">
      <summary>Adds a border to a <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</summary>
      <param name="LineStyle">The line style for the border. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDash" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDotDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDouble" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlSlantDashDot" /><see cref="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlLineStyleNone" /></param>
      <param name="Weight">The border weight. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlHairline" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlMedium" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThick" /><see cref="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin" /></param>
      <param name="ColorIndex">The border color, as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic" /><see cref="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexNone" /></param>
      <param name="Color">The border color, as an RGB value.</param>
      <param name="ThemeColor">The theme color, as an index into the current color theme or as an <see cref="T:Microsoft.Office.Interop.Excel.XlThemeColor" /> value.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Borders">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Calculate">
      <summary>Calculates the value of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.CalculateRowMajorOrder">
      <summary>Calculates the value in each item in the range in row-major order.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Cells">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cells in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cells in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.XmlMappedRange.Change">
      <summary>Occurs when something changes in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Characters">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of text in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <param name="CustomDictionary">Indicates the file name of the custom dictionary to be examined if the word is not found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
      <param name="IgnoreUppercase">true to have Microsoft Office Excel ignore words that are all uppercase; false to have Excel check words that are all uppercase. If this argument is omitted, the current setting is used.</param>
      <param name="AlwaysSuggest">true to have Excel display a list of suggested alternate spellings when an incorrect spelling is found; false to have Excel pause while you input the correct spelling. If this argument is omitted, the current setting is used.</param>
      <param name="SpellLang">The language of the dictionary being used. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Clear">
      <summary>Clears the entire <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ClearComments">
      <summary>Clears all cell comments from the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ClearContents">
      <summary>Clears the formulas from the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ClearFormats">
      <summary>Clears the formatting of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ClearHyperlinks">
      <summary>Removes all hyperlinks from the specified range.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ClearNotes">
      <summary>Clears notes and sound notes from the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ClearOutline">
      <summary>Clears the outline for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Column">
      <summary>Gets the number of the column in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>The number of the column in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ColumnDifferences(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the cells whose contents are different from the comparison cell in each column.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the cells whose contents are different from the comparison cell in each column.</returns>
      <param name="Comparison">A single cell to compare to the specified range.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Columns"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ColumnWidth">
      <summary>Gets or sets the width of the column in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>The width of the column in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Comment">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> that represents the comment associated with the cell in the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> that represents the comment associated with the cell in the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Consolidates data from multiple ranges on multiple worksheets into an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <param name="Sources">The sources of the consolidation as an array of text reference strings in R1C1-style notation. The references must include the full path of sheets to be consolidated.</param>
      <param name="Function">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlAverage" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCount" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCountNums" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMax" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMin" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlProduct" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDev" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDevP" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlSum" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVar" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVarP" /></param>
      <param name="TopRow">true to consolidate data based on column titles in the top row of the consolidation ranges; false to consolidate data by position. The default value is false.</param>
      <param name="LeftColumn">true to consolidate data based on row titles in the left column of the consolidation ranges; false to consolidate data by position. The default value is false.</param>
      <param name="CreateLinks">true to have the consolidation use worksheet links; false to have the consolidation copy the data. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Container"></member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Copy(System.Object)">
      <summary>Copies the contents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to the specified range or to the Clipboard.</summary>
      <param name="Destination">Specifies the new range to which the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is copied. If this argument is omitted, Microsoft Office Excel copies the range to the Clipboard.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.CopyFromRecordset(System.Object,System.Object,System.Object)">
      <summary>Copies the contents of an ADO or DAO recordset onto a worksheet, beginning at the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <param name="Data">The recordset to copy into the range.</param>
      <param name="MaxRows">The maximum number of records to copy onto the worksheet. If this argument is omitted, all the records in the recordset object are copied.</param>
      <param name="MaxColumns">The maximum number of fields to copy onto the worksheet. If this argument is omitted, all the fields in the recordset object are copied.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
      <summary>Copies the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to the Clipboard as a picture. </summary>
      <param name="Appearance">Specifies how the picture should be copied.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter" /><see cref="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen" /></param>
      <param name="Format">The format of the picture.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlBitmap" /><see cref="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture" /></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Count">
      <summary>Gets the number of objects in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The number of objects in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.CountLarge">
      <summary>Gets a value that represents the number of times that the largest value in a range appears. </summary>
      <returns>A value that represents the number of times that the largest value in a range appears.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.CreateNames(System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates names in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, based on text labels in the worksheet.</summary>
      <param name="Top">true to create names by using labels in the top row. The default value is false.</param>
      <param name="Left">true to create names by using labels in the left column. The default value is false.</param>
      <param name="Bottom">true to create names by using labels in the bottom row. The default value is false.</param>
      <param name="Right">true to create names by using labels in the right column. The default value is false.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
      <param name="Edition"></param>
      <param name="Appearance"></param>
      <param name="ContainsPICT"></param>
      <param name="ContainsBIFF"></param>
      <param name="ContainsRTF"></param>
      <param name="ContainsVALU"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Creator">
      <summary>Gets a value that indicates the application in which this <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control was created. </summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.CurrentArray">
      <summary>If the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> is part of an array, gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire array. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire array, if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> is part of an array.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.CurrentRegion">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the current region. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the current region.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Cut(System.Object)">
      <summary>Cuts the contents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to the Clipboard or pastes it into a specified destination.</summary>
      <param name="Destination">The range where the object should be pasted. If this argument is omitted, the object is cut to the Clipboard.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)">
      <summary>Creates a data series in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <param name="Rowcol">Can be the <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> constant to have the data series entered in rows or columns, respectively. If this argument is omitted, the size and shape of the range is used.</param>
      <param name="Type">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlAutoFill" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlChronological" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlGrowth" /></param>
      <param name="Date">If the <paramref name="Type" /> argument is <see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlChronological" />, the <paramref name="Date" /> argument indicates the step date unit.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlWeekday" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlMonth" /><see cref="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlYear" /></param>
      <param name="Step">The step value for the series. The default value is 1 (one).</param>
      <param name="Stop">The stop value for the series. If this argument is omitted, Microsoft Office Excel fills to the end of the range.</param>
      <param name="Trend">true to create a linear trend or growth trend; false to create a standard data series. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Dependents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the dependents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that contains all the dependents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.XmlMappedRange.Deselected">
      <summary>Occurs when selection moves from the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to an area outside of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.DialogBox">
      <summary>Displays a dialog box defined by a dialog box definition table on a Microsoft Office Excel 4.0 macro sheet. </summary>
      <returns>The number of the chosen control, or returns false if the user clicks the Cancel button.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.DirectDependents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct dependents of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct dependents of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.DirectPrecedents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct precedents of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range containing all the direct precedents of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Dirty">
      <summary>Designates an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to be recalculated when the next recalculation occurs.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.DiscardChanges">
      <summary>Discards all changes in the edited cells of the Xml mapped range. This method can be used only in Excel 2010 projects.</summary>
      <exception cref="T:System.MissingMemberException">This method is used in an Excel 2007 project.</exception>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.DisplayFormat">
      <summary>Gets an object that represents the display settings for the specified range.</summary>
      <returns>An object that represents the display settings for the specified range.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)">
      <param name="Type"></param>
      <param name="Option"></param>
      <param name="Name"></param>
      <param name="Reference"></param>
      <param name="Appearance"></param>
      <param name="ChartSize"></param>
      <param name="Format"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.End">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell at the end of the region that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cell at the end of the region that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.EntireColumn">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire column that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the entire column that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.EntireRow">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Errors">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object that enables you to access error checking options of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object that enables you to access error checking options of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Exports to a file of the specified format.</summary>
      <param name="Type">One of the Microsoft.Office.Interop.Excel.XlFixedFormatType values that specifies whether to save the workbook in PDF or XPS format.</param>
      <param name="Filename">A string that contains the file name of the file to be saved. You can include a full path, or Excel saves the file in the current folder.</param>
      <param name="Quality">One of the Microsoft.Office.Interop.Excel.XlFixedFormatQuality values that specifies the quality of the exported file.</param>
      <param name="IncludeDocProperties">true to include the document properties; otherwise, false.</param>
      <param name="IgnorePrintAreas">true to ignore any print areas set when exporting; otherwise, false.</param>
      <param name="From">The number of the page at which to start exporting. If this argument is omitted, exporting starts at the first page.</param>
      <param name="To">The number of the last page to export. If this argument is omitted, exporting ends with the last page.</param>
      <param name="OpenAfterPublish">true to display the file in the viewer after it is published; otherwise, false.</param>
      <param name="FixedFormatExtClassPtr">A pointer to an implementation of the IMsoDocExporter interface that enables the workbook to be saved in a different fixed format. For more information, see Extending the Office (2007) Fixed-Format Export Feature.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.FillDown">
      <summary>Fills down from the top cell in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to the bottom of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.FillLeft">
      <summary>Fills left from the rightmost cell in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.FillRight">
      <summary>Fills right from the leftmost cell in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.FillUp">
      <summary>Fills up from the bottom cell in the specified range to the top of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)">
      <summary>Finds specific information in an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the first cell where that information is found. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the first cell where the specified information is found.</returns>
      <param name="What">The data to search for. Can be a string or any Microsoft Office Excel data type.</param>
      <param name="After">The cell after which you want the search to begin. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the range. Remember that the search begins after this cell; the specified cell is not searched until the method wraps back around to this cell. If you do not specify this argument, the search starts after the cell in the upper-left corner of the range.</param>
      <param name="LookIn">The type of information.</param>
      <param name="LookAt">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlWhole" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlPart" />.</param>
      <param name="SearchOrder">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByColumns" />.</param>
      <param name="SearchDirection">The search direction.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlPrevious" />.</param>
      <param name="MatchCase">true to make the search case sensitive. The default value is false.</param>
      <param name="MatchByte">Used only if you have selected or installed double-byte language support. true to have double-byte characters match only double-byte characters; false to have double-byte characters match their single-byte equivalents.</param>
      <param name="SearchFormat">The search format.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.FindNext(System.Object)">
      <summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a cell containing the specified information.</returns>
      <param name="After">The cell after which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. Remember that the search begins after this cell; the specified cell is not searched until the method wraps back around to this cell. If this argument is not specified, the search starts after the cell in the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.FindPrevious(System.Object)">
      <summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a cell containing the specified information.</returns>
      <param name="After">The cell before which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that <paramref name="After" /> must be a single cell in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. Remember that the search begins before this cell; the specified cell is not searched until the method wraps back around to this cell. If this argument is not specified, the search starts before the upper-left cell in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Font">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> that represents the font of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Font" /> that represents the font of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.FormatConditions">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Formula">
      <summary>Gets or sets the formula of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in A1-style notation. </summary>
      <returns>The formula of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in A1-style notation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.FormulaArray">
      <summary>Gets or sets the array formula of an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The array formula of a <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.FormulaHidden">
      <summary>Gets or sets a value that indicates whether the formula in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is hidden when the worksheet is protected. </summary>
      <returns>true if the formula is hidden when the worksheet is protected; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.FormulaLabel">
      <summary>Gets or sets the formula label type for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The formula label type for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.FormulaLocal">
      <summary>Gets or sets the formula for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, using A1-style references in the language of the user. </summary>
      <returns>The formula for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, using A1-style references in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.FormulaR1C1">
      <summary>Gets or sets the formula for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, using R1C1-style notation. </summary>
      <returns>The formula for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, using R1C1-style notation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.FormulaR1C1Local">
      <summary>Gets or sets the formula for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, using R1C1-style notation in the language of the user. </summary>
      <returns>The formula for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, using R1C1-style notation in the language of the user.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.FunctionWizard">
      <summary>Starts the Function Wizard for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_Characters(System.Object,System.Object)">
      <param name="Start"></param>
      <param name="Length"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_End(Microsoft.Office.Interop.Excel.XlDirection)">
      <param name="Direction"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_Item(System.Object,System.Object)">
      <param name="RowIndex"></param>
      <param name="ColumnIndex"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_Offset(System.Object,System.Object)">
      <param name="RowOffset"></param>
      <param name="ColumnOffset"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_Range(System.Object,System.Object)">
      <param name="Cell1"></param>
      <param name="Cell2"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_Resize(System.Object,System.Object)">
      <param name="RowSize"></param>
      <param name="ColumnSize"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.get_Value(System.Object)">
      <param name="rangeValueDataType"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.GetEnumerator">
      <summary>Gets an enumerator that can be used to iterate over an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate over an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)">
      <summary>Calculates the values necessary to achieve a specific goal. </summary>
      <returns>true if the goal seek is successful; otherwise false.</returns>
      <param name="Goal">The value you want returned in this cell.</param>
      <param name="ChangingCell">Specifies which cell should be changed to achieve the target value.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Group(System.Object,System.Object,System.Object,System.Object)">
      <summary>When the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control represents a single cell in the data range of a PivotTable field, the <see cref="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Group(System.Object,System.Object,System.Object,System.Object)" /> method performs numeric or date-based grouping in that field.</summary>
      <param name="Start">The first value to be grouped. If this argument is omitted or true, the first value in the field is used.</param>
      <param name="End">The last value to be grouped. If this argument is omitted or true, the last value in the field is used.</param>
      <param name="By">If the field is numeric, this argument specifies the size of each group. If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is true and all the other elements are false. Otherwise, this argument is ignored. If this argument is omitted, Microsoft Office Excel automatically chooses a default group size.</param>
      <param name="Periods">An array of seven Boolean values that specify the period for the group, as shown:1 - Seconds2 - Minutes3 - Hours4 - Days5 - Months6 - Quarters7 - YearsIf an element in the array is true, a group is created for the corresponding time; if the element is false, no group is created. If the field is not a date field, this argument is ignored.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.HasArray">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is part of an array formula. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is part of an array formula; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.HasFormula">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control contains a formula.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control contains a formula; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Height">
      <summary>Gets the height, in points, of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The height, in points, of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Hidden"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.HorizontalAlignment">
      <summary>Gets or sets the horizontal alignment for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Hyperlinks">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ID">
      <summary>Gets or sets the identifying label for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control when the page is saved as a Web page. </summary>
      <returns>The identifying label for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control when the page is saved as a Web page.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.IndentLevel">
      <summary>Gets or sets the indent level for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The indent level for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.InnerObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Insert(System.Object,System.Object)">
      <summary>Inserts a cell into the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control and shifts other cells away to make space.</summary>
      <param name="Shift">Specifies which way to shift the cells. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftToRight" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftDown" />. If this argument is omitted, Microsoft Office Excel selects a value.</param>
      <param name="CopyOrigin">The copy origin.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.InsertIndent(System.Int32)">
      <summary>Adds an indent to the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <param name="InsertAmount">The amount to be added to the current indent.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Interior">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> that represents the interior of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> that represents the interior of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Item">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a range at an offset to the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a range at an offset to the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Justify">
      <summary>Rearranges the text in an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control so that it fills the range evenly.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Left">
      <summary>Gets a value that represents the distance from the left edge of column A to the left edge of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The distance from the left edge of column A to the left edge of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ListHeaderRows"></member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ListNames">
      <summary>Pastes a list of all displayed names onto the worksheet, beginning with the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ListObject">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.LocationInTable">
      <summary>Gets a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>One of the <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> values.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Locked">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is locked.</summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is locked; false if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control can be modified when the sheet is protected; null if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control contains both locked and unlocked cells.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.MDX">
      <summary>Gets an MDX expression that describes the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />.</summary>
      <returns>An MDX expression that describes the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Merge(System.Object)">
      <summary>Creates a merged cell from the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <param name="Across">true to merge cells in each row of the specified range as separate merged cells. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.MergeArea">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the merged range containing the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the merged range containing the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. If the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is not in a merged range, this property returns the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.MergeCells">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control contains merged cells. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control contains merged cells; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Name">
      <summary>Gets or sets a value representing a defined name for an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object that represents a defined name for an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.NavigateArrow(System.Object,System.Object,System.Object)">
      <summary>Navigates a tracer arrow for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to the precedent, dependent, or error-causing cell or cells. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the new selection.</returns>
      <param name="TowardPrecedent">Specifies the direction to navigate: true to navigate toward precedents; false to navigate toward dependents.</param>
      <param name="ArrowNumber">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</param>
      <param name="LinkNumber">If the arrow is an external reference arrow, this argument indicates which external reference to follow. If this argument is omitted, the first external reference is followed.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Next">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the next cell.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the next cell.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.NoteText(System.Object,System.Object,System.Object)">
      <summary>Gets or sets the cell note associated with the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <param name="Text">The text to add to the note (up to 255 characters). The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note. If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</param>
      <param name="Start">The starting position for the text that is set or returned. If this argument is omitted, this method starts at the first character. To append text to the note, specify a number larger than the number of characters in the existing note.</param>
      <param name="Length">The number of characters to be set or returned. If this argument is omitted, Microsoft Office Excel sets or returns characters from the starting position to the end of the note (up to 255 characters). If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.NumberFormat">
      <summary>Gets or sets the format code for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The format code for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.NumberFormatLocal">
      <summary>Gets or sets the format code for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in the language of the user. </summary>
      <returns>The format code for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in the language of the user.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Offset">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that is offset from the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that is offset from the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Orientation">
      <summary>Gets or sets a value that specifies the text orientation. </summary>
      <returns>An integer in the range of -90 to 90 degrees that specifies the text orientation.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.OutlineLevel">
      <summary>Gets or sets the current outline level of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />. </summary>
      <returns>The current outline level of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.PageBreak">
      <summary>Gets or sets the location of a page break. </summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Parent">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the worksheet containing the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the worksheet containing the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Parse(System.Object,System.Object)">
      <summary>Parses a range of data and breaks it into multiple cells</summary>
      <param name="ParseLine">A string that contains left and right brackets to indicate where the cells should be split. For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column. If this argument is omitted, Microsoft Office Excel guesses where to split the columns based on the spacing of the top left cell in the range. If you want to use a different range to guess the parse line, use a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as the <paramref name="ParseLine" /> argument. That range must be one of the cells that is being parsed. The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</param>
      <param name="Destination">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the upper-left corner of the destination range for the parsed data. If this argument is omitted, Excel parses in place.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
      <summary>Pastes the contents of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <param name="Paste">The part of the range to be pasted.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAllExceptBorders" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteColumnWidths" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteComments" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulasAndNumberFormats" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValidation" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValuesAndNumberFormats" /></param>
      <param name="Operation">The paste operation.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationDivide" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationMultiply" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone" /><see cref="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationSubtract" /></param>
      <param name="SkipBlanks">true to not have blank cells in the range on the Clipboard pasted into the destination range. The default value is false.</param>
      <param name="Transpose">true to transpose rows and columns when the range is pasted. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Phonetic">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Phonetics">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.PivotCell">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> that represents a cell in a PivotTable report.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> that represents a cell in a PivotTable report.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.PivotField">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> that represents the PivotTable field containing the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> that represents the PivotTable field containing the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.PivotItem">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> that represents the PivotTable item containing the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> that represents the PivotTable item containing the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.PivotTable">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> that represents the PivotTable report containing the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, or the PivotTable report associated with the PivotChart report.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> that represents the PivotTable report containing the upper-left corner of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, or the PivotTable report associated with the PivotChart report.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Precedents">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the precedents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the precedents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.PrefixCharacter">
      <summary>Gets the prefix character for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The prefix character for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Previous">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the previous cell. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the previous cell.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object; false (or omitted) to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints out the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />.</summary>
      <param name="From">The number of the page at which to start printing. If this argument is omitted, printing starts at the first page.</param>
      <param name="To">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="Copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="Preview">true to have Microsoft Office Excel invoke print preview before printing the object. false to print the object immediately.</param>
      <param name="ActivePrinter">Sets the name of the active printer.</param>
      <param name="PrintToFile">true to print to a file. If <paramref name="PrToFileName" /> is not specified, Excel prompts the user to enter the name of the output file.</param>
      <param name="Collate">true to collate multiple copies.</param>
      <param name="PrToFileName">If <paramref name="PrintToFile" /> is set to true, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.PrintPreview(System.Object)">
      <summary>Shows a preview of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control as it would look when printed.</summary>
      <param name="EnableChanges">true to allow changes to the margins and page setup while displaying the print preview; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.QueryTable">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that represents the query table that intersects the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that represents the query table that intersects the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ReadingOrder">
      <summary>Gets or sets the reading order for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>One of the following values: <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> (right-to-left), <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> (left-to-right), or <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" />.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)">
      <summary>Removes duplicate values from a range of values.</summary>
      <param name="Columns">Array of indexes of the columns that contain the duplicate information. If nothing is passed then it assumes all columns contain duplicate information.</param>
      <param name="Header">An XlYesNoGuess that specifies whether the first row contains header information. xlNo is the default value; specify xlGuess if you want Excel to attempt to determine the header.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.RemoveSubtotal">
      <summary>Removes subtotals from an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Replaces the specified characters in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control with a new string. </summary>
      <returns>true if the specified characters are in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control; otherwise, false.</returns>
      <param name="What">The string you want Microsoft Office Excel to search for.</param>
      <param name="Replacement">The replacement string.</param>
      <param name="LookAt">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlWhole" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlLookAt.xlPart" />.</param>
      <param name="SearchOrder">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByColumns" />.</param>
      <param name="MatchCase">true to make the search case sensitive.</param>
      <param name="MatchByte">You can use this argument only if you have selected or installed double-byte language support in Excel. true to have double-byte characters match only double-byte characters; false to have double-byte characters match their single-byte equivalents.</param>
      <param name="SearchFormat">The search format for the method.</param>
      <param name="ReplaceFormat">The replace format for the method.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Resize">
      <summary>Gets a resized <see cref="T:Microsoft.Office.Interop.Excel.Range" /> based on the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A resized <see cref="T:Microsoft.Office.Interop.Excel.Range" /> based on the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Row">
      <summary>Gets the number of the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The number of the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.RowDifferences(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cells whose contents are different from those of the comparison cell in each row.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the cells whose contents are different from those of the comparison cell in each row.</returns>
      <param name="Comparison">A single cell to compare with the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" />.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.RowHeight">
      <summary>Gets or sets the height of the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, measured in points. </summary>
      <returns>The height of the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control, measured in points.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Rows">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the row that contains the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <param name="Arg1"></param>
      <param name="Arg2"></param>
      <param name="Arg3"></param>
      <param name="Arg4"></param>
      <param name="Arg5"></param>
      <param name="Arg6"></param>
      <param name="Arg7"></param>
      <param name="Arg8"></param>
      <param name="Arg9"></param>
      <param name="Arg10"></param>
      <param name="Arg11"></param>
      <param name="Arg12"></param>
      <param name="Arg13"></param>
      <param name="Arg14"></param>
      <param name="Arg15"></param>
      <param name="Arg16"></param>
      <param name="Arg17"></param>
      <param name="Arg18"></param>
      <param name="Arg19"></param>
      <param name="Arg20"></param>
      <param name="Arg21"></param>
      <param name="Arg22"></param>
      <param name="Arg23"></param>
      <param name="Arg24"></param>
      <param name="Arg25"></param>
      <param name="Arg26"></param>
      <param name="Arg27"></param>
      <param name="Arg28"></param>
      <param name="Arg29"></param>
      <param name="Arg30"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Select">
      <summary>Selects the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.XmlMappedRange.Selected">
      <summary>Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control is selected.</summary>
    </member>
    <member name="E:Microsoft.Office.Tools.Excel.XmlMappedRange.SelectionChange">
      <summary>Occurs when the selection inside the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control changes.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ServerActions">
      <summary>Gets the actions that can be performed on the SharePoint server for an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> object.</summary>
      <returns>The actions that can be performed on the SharePoint server for an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> object.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.set_Item(System.Object,System.Object,System.Object)">
      <param name="RowIndex"></param>
      <param name="ColumnIndex"></param>
      <param name="_arg2"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.set_Value(System.Object,System.Object)">
      <param name="rangeValueDataType"></param>
      <param name="_arg1"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.SetPhonetic">
      <summary>Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Show">
      <summary>Scrolls through the contents of the active window to move the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control into view. </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ShowDependents(System.Object)">
      <summary>Draws tracer arrows to the direct dependents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <param name="Remove">true to remove one level of tracer arrows to direct dependents; false to expand one level of tracer arrows. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ShowDetail">
      <summary>Gets or sets an object that indicates whether the outline is expanded for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control (so that the detail of the column or row is visible). </summary>
      <returns>true if the outline is expanded for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control (so that the detail of the column or row is visible); otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ShowErrors">
      <summary>Draws tracer arrows through the precedents tree to the cell that is the source of the error, and returns the range that contains that cell.</summary>
      <returns>A range that contains the cell with the error.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.ShowPrecedents(System.Object)">
      <summary>Draws tracer arrows to the direct precedents of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <param name="Remove">true to remove one level of tracer arrows to direct precedents; false to expand one level of tracer arrows. The default value is false.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.ShrinkToFit">
      <summary>Gets or sets a value that indicates whether text automatically shrinks to fit in the available column width. </summary>
      <returns>true if text automatically shrinks to fit in the available column width; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.SmartTags">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.SoundNote"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.SparklineGroups">
      <summary>Gets an object that represents an existing group of sparklines from the specified range.</summary>
      <returns>An object that represents an existing group of sparklines from the specified range.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Speak(System.Object,System.Object)">
      <summary>Causes the cells of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control to be spoken in row order or column order.</summary>
      <param name="SpeakDirection">The speak direction, by rows or columns.</param>
      <param name="SpeakFormulas">true causes formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas. The value is sent if the cells do not have formulas; false (default) causes values to always be sent to the TTS engine.</param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the cells that match the specified type and value.</summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents all the cells that match the specified type and value.</returns>
      <param name="Type">The cells to include.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllFormatConditions" />. Cells of any format.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllValidation" />. Cells having validation criteria.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeBlanks" />. Empty cells.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeComments" />. Cells containing notes.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeConstants" />. Cells containing constants.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeFormulas" />. Cells containing formulas.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeLastCell" />. The last cell in the used range.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameFormatConditions" />. Cells having the same format. <see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameValidation" />. Cells having the same validation criteria.<see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeVisible" />. All visible cells.</param>
      <param name="Value">If <paramref name="Type" /> is either <see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeConstants" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeFormulas" />, this argument is used to determine which types of cells to include in the result. These values can be added together to return more than one type. The default is to select all constants or formulas, no matter what the type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlErrors" /><see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlLogical" /><see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlNumbers" /><see cref="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlTextValues" /></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Style">
      <summary>Gets or sets a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> that represents the style of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Style" /> that represents the style of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)">
      <param name="Edition"></param>
      <param name="Format"></param>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)">
      <summary>Creates subtotals for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</summary>
      <param name="GroupBy">The field to group by, as a one-based integer offset.</param>
      <param name="Function">The subtotal function.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlAverage" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCount" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCountNums" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMax" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMin" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlProduct" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDev" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDevP" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlSum" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlUnknown" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVar" /><see cref="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVarP" /></param>
      <param name="TotalList">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</param>
      <param name="Replace">true to replace existing subtotals. The default value is false.</param>
      <param name="PageBreaks">true to add page breaks after each group. The default value is false.</param>
      <param name="SummaryBelowData">Places the summary data relative to the subtotal.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryAbove" /><see cref="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow" /> (default)</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Summary">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> is an outlining summary row or column. </summary>
      <returns>true if the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> is an outlining summary row or column; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Table(System.Object,System.Object)">
      <summary>Creates a data table based on input values and formulas that you define on a worksheet.</summary>
      <param name="RowInput">A single cell to use as the row input for your table.</param>
      <param name="ColumnInput">A single cell to use as the column input for your table.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Tag">
      <summary>Gets or sets the object that contains data about the <see cref="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Tag" /> control.</summary>
      <returns>An object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Text">
      <summary>Gets the text for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The text for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Parses a column of cells that contain text into several columns.</summary>
      <param name="Destination">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that specifies where Microsoft Office Excel places the results. If the range is larger than a single cell, the top left cell is used.</param>
      <param name="DataType">The format of the text to be split into columns.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants:<see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> (default)<see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlFixedWidth" /></param>
      <param name="TextQualifier">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote" /> (default)<see cref="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierNone" /><see cref="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierSingleQuote" /></param>
      <param name="ConsecutiveDelimiter">true to have Excel consider consecutive delimiters as one delimiter. The default value is false.</param>
      <param name="Tab">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the tab character be a delimiter. The default value is false.</param>
      <param name="Semicolon">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the semicolon be a delimiter. The default value is false.</param>
      <param name="Comma">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the comma be a delimiter. The default value is false.</param>
      <param name="Space">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the space character be a delimiter. The default value is false.</param>
      <param name="Other">true to have <paramref name="DataType" /> be <see cref="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited" /> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter. The default value is false.</param>
      <param name="OtherChar">The delimiter character when <paramref name="Other" /> is true. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
      <param name="FieldInfo">An array containing parse information for the individual columns of data. The interpretation depends on the value of <paramref name="DataType" />. When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column. The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> values:<see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlGeneralFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlTextFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMDYFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDMYFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYMDFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMYDFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDYMFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYDMFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat" /><see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlSkipColumn" />You can use <see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat" /> only if Taiwanese language support is installed and selected. <see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat" /> specifies that Taiwanese era dates are being used.The column specifiers can be in any order. If a given column specifier is not present for a particular column in the input data, the column is parsed with the <see cref="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlGeneralFormat" /> setting. If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character). The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</param>
      <param name="DecimalSeparator">The decimal separator that Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="ThousandsSeparator">The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="TrailingMinusNumbers">Numbers that begin with a minus character.</param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Top">
      <summary>Gets the distance, in points, from the top of row 1 to the top edge of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The distance, in points, from the top of row 1 to the top edge of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.Ungroup">
      <summary>Promotes an <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in an outline (that is, decreases its outline level). </summary>
    </member>
    <member name="M:Microsoft.Office.Tools.Excel.XmlMappedRange.UnMerge">
      <summary>Separates a merged area into individual cells.</summary>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.UseStandardHeight">
      <summary>Gets or sets a value that indicates whether the row height of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control equals the standard height of the sheet. </summary>
      <returns>true if the row height of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control equals the standard height of the sheet; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.UseStandardWidth">
      <summary>Gets or sets a value that indicates whether the column width of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control equals the standard width of the sheet. </summary>
      <returns>true if the column width of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control equals the standard width of the sheet; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Validation">
      <summary>Gets the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Value">
      <summary>Gets or sets the value of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The value of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Value2">
      <summary>Gets or sets the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control value.</summary>
      <returns>The value of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.VerticalAlignment">
      <summary>Gets or sets the vertical alignment of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>The vertical alignment of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Width">
      <summary>Gets the width of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in points. </summary>
      <returns>The width of the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control in points.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.Worksheet">
      <summary>Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the worksheet containing the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the worksheet containing the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.WrapText">
      <summary>Gets or sets a value that indicates whether Microsoft Office Excel wraps the text in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>true if Excel wraps the text in the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange.XPath">
      <summary>Gets an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> that represents the XPath of the element mapped to the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control. </summary>
      <returns>An <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> that represents the XPath of the element mapped to the <see cref="T:Microsoft.Office.Tools.Excel.XmlMappedRange" /> control.</returns>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange_AddressLocalType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_AddressLocalType.Item(System.Boolean,System.Boolean,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Boolean,System.Object)">
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange_AddressType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_AddressType.Item(System.Boolean,System.Boolean,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Boolean,System.Object)">
      <param name="RowAbsolute"></param>
      <param name="ColumnAbsolute"></param>
      <param name="ReferenceStyle"></param>
      <param name="External"></param>
      <param name="RelativeTo"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange_CharactersType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_CharactersType.Item(System.Int32,System.Int32)">
      <param name="Start"></param>
      <param name="Length"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange_EndType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_EndType.Item(Microsoft.Office.Interop.Excel.XlDirection)">
      <param name="Direction"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange_ItemType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_ItemType.Item(System.Int32)">
      <param name="RowIndex"></param>
    </member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_ItemType.Item(System.Int32,System.Int32)">
      <param name="RowIndex"></param>
      <param name="ColumnIndex"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange_OffsetType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_OffsetType.Item(System.Int32,System.Int32)">
      <param name="RowOffset"></param>
      <param name="ColumnOffset"></param>
    </member>
    <member name="T:Microsoft.Office.Tools.Excel.XmlMappedRange_ResizeType"></member>
    <member name="P:Microsoft.Office.Tools.Excel.XmlMappedRange_ResizeType.Item(System.Int32,System.Int32)">
      <param name="RowSize"></param>
      <param name="ColumnSize"></param>
    </member>
  </members>
</doc>